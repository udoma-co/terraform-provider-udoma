/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// DataCollectionItem Data that must be collected from tenants
type DataCollectionItem struct {
	// the ID of the item that is generated by the system once the data is submitted
	Id *string `json:"id,omitempty"`
	// the ID of the endpoint that was used to collect the data
	EndpointId      *string  `json:"endpoint_id,omitempty"`
	PropertyAddress *Address `json:"property_address,omitempty"`
	// a reference to the property
	PropertyRef *string `json:"property_ref,omitempty"`
	// the date at which the tenancy will officially begin
	StartOfTenancy *int64 `json:"start_of_tenancy,omitempty"`
	// time of submission of the data collection item (generated by the server)
	Date              *int64                 `json:"date,omitempty"`
	Tenants           []TenantInfo           `json:"tenants,omitempty"`
	AdditionalTenants []AdditionalTenant     `json:"additional_tenants,omitempty"`
	AdditionalInfo    *TenantsAdditionalInfo `json:"additional_info,omitempty"`
	// a map of values, where the key and values are strings
	AdditionalData *map[string]string `json:"additional_data,omitempty"`
}

// NewDataCollectionItem instantiates a new DataCollectionItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataCollectionItem() *DataCollectionItem {
	this := DataCollectionItem{}
	return &this
}

// NewDataCollectionItemWithDefaults instantiates a new DataCollectionItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataCollectionItemWithDefaults() *DataCollectionItem {
	this := DataCollectionItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DataCollectionItem) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionItem) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DataCollectionItem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DataCollectionItem) SetId(v string) {
	o.Id = &v
}

// GetEndpointId returns the EndpointId field value if set, zero value otherwise.
func (o *DataCollectionItem) GetEndpointId() string {
	if o == nil || o.EndpointId == nil {
		var ret string
		return ret
	}
	return *o.EndpointId
}

// GetEndpointIdOk returns a tuple with the EndpointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionItem) GetEndpointIdOk() (*string, bool) {
	if o == nil || o.EndpointId == nil {
		return nil, false
	}
	return o.EndpointId, true
}

// HasEndpointId returns a boolean if a field has been set.
func (o *DataCollectionItem) HasEndpointId() bool {
	if o != nil && o.EndpointId != nil {
		return true
	}

	return false
}

// SetEndpointId gets a reference to the given string and assigns it to the EndpointId field.
func (o *DataCollectionItem) SetEndpointId(v string) {
	o.EndpointId = &v
}

// GetPropertyAddress returns the PropertyAddress field value if set, zero value otherwise.
func (o *DataCollectionItem) GetPropertyAddress() Address {
	if o == nil || o.PropertyAddress == nil {
		var ret Address
		return ret
	}
	return *o.PropertyAddress
}

// GetPropertyAddressOk returns a tuple with the PropertyAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionItem) GetPropertyAddressOk() (*Address, bool) {
	if o == nil || o.PropertyAddress == nil {
		return nil, false
	}
	return o.PropertyAddress, true
}

// HasPropertyAddress returns a boolean if a field has been set.
func (o *DataCollectionItem) HasPropertyAddress() bool {
	if o != nil && o.PropertyAddress != nil {
		return true
	}

	return false
}

// SetPropertyAddress gets a reference to the given Address and assigns it to the PropertyAddress field.
func (o *DataCollectionItem) SetPropertyAddress(v Address) {
	o.PropertyAddress = &v
}

// GetPropertyRef returns the PropertyRef field value if set, zero value otherwise.
func (o *DataCollectionItem) GetPropertyRef() string {
	if o == nil || o.PropertyRef == nil {
		var ret string
		return ret
	}
	return *o.PropertyRef
}

// GetPropertyRefOk returns a tuple with the PropertyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionItem) GetPropertyRefOk() (*string, bool) {
	if o == nil || o.PropertyRef == nil {
		return nil, false
	}
	return o.PropertyRef, true
}

// HasPropertyRef returns a boolean if a field has been set.
func (o *DataCollectionItem) HasPropertyRef() bool {
	if o != nil && o.PropertyRef != nil {
		return true
	}

	return false
}

// SetPropertyRef gets a reference to the given string and assigns it to the PropertyRef field.
func (o *DataCollectionItem) SetPropertyRef(v string) {
	o.PropertyRef = &v
}

// GetStartOfTenancy returns the StartOfTenancy field value if set, zero value otherwise.
func (o *DataCollectionItem) GetStartOfTenancy() int64 {
	if o == nil || o.StartOfTenancy == nil {
		var ret int64
		return ret
	}
	return *o.StartOfTenancy
}

// GetStartOfTenancyOk returns a tuple with the StartOfTenancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionItem) GetStartOfTenancyOk() (*int64, bool) {
	if o == nil || o.StartOfTenancy == nil {
		return nil, false
	}
	return o.StartOfTenancy, true
}

// HasStartOfTenancy returns a boolean if a field has been set.
func (o *DataCollectionItem) HasStartOfTenancy() bool {
	if o != nil && o.StartOfTenancy != nil {
		return true
	}

	return false
}

// SetStartOfTenancy gets a reference to the given int64 and assigns it to the StartOfTenancy field.
func (o *DataCollectionItem) SetStartOfTenancy(v int64) {
	o.StartOfTenancy = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *DataCollectionItem) GetDate() int64 {
	if o == nil || o.Date == nil {
		var ret int64
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionItem) GetDateOk() (*int64, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *DataCollectionItem) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given int64 and assigns it to the Date field.
func (o *DataCollectionItem) SetDate(v int64) {
	o.Date = &v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *DataCollectionItem) GetTenants() []TenantInfo {
	if o == nil || o.Tenants == nil {
		var ret []TenantInfo
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionItem) GetTenantsOk() ([]TenantInfo, bool) {
	if o == nil || o.Tenants == nil {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *DataCollectionItem) HasTenants() bool {
	if o != nil && o.Tenants != nil {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []TenantInfo and assigns it to the Tenants field.
func (o *DataCollectionItem) SetTenants(v []TenantInfo) {
	o.Tenants = v
}

// GetAdditionalTenants returns the AdditionalTenants field value if set, zero value otherwise.
func (o *DataCollectionItem) GetAdditionalTenants() []AdditionalTenant {
	if o == nil || o.AdditionalTenants == nil {
		var ret []AdditionalTenant
		return ret
	}
	return o.AdditionalTenants
}

// GetAdditionalTenantsOk returns a tuple with the AdditionalTenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionItem) GetAdditionalTenantsOk() ([]AdditionalTenant, bool) {
	if o == nil || o.AdditionalTenants == nil {
		return nil, false
	}
	return o.AdditionalTenants, true
}

// HasAdditionalTenants returns a boolean if a field has been set.
func (o *DataCollectionItem) HasAdditionalTenants() bool {
	if o != nil && o.AdditionalTenants != nil {
		return true
	}

	return false
}

// SetAdditionalTenants gets a reference to the given []AdditionalTenant and assigns it to the AdditionalTenants field.
func (o *DataCollectionItem) SetAdditionalTenants(v []AdditionalTenant) {
	o.AdditionalTenants = v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *DataCollectionItem) GetAdditionalInfo() TenantsAdditionalInfo {
	if o == nil || o.AdditionalInfo == nil {
		var ret TenantsAdditionalInfo
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionItem) GetAdditionalInfoOk() (*TenantsAdditionalInfo, bool) {
	if o == nil || o.AdditionalInfo == nil {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *DataCollectionItem) HasAdditionalInfo() bool {
	if o != nil && o.AdditionalInfo != nil {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given TenantsAdditionalInfo and assigns it to the AdditionalInfo field.
func (o *DataCollectionItem) SetAdditionalInfo(v TenantsAdditionalInfo) {
	o.AdditionalInfo = &v
}

// GetAdditionalData returns the AdditionalData field value if set, zero value otherwise.
func (o *DataCollectionItem) GetAdditionalData() map[string]string {
	if o == nil || o.AdditionalData == nil {
		var ret map[string]string
		return ret
	}
	return *o.AdditionalData
}

// GetAdditionalDataOk returns a tuple with the AdditionalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionItem) GetAdditionalDataOk() (*map[string]string, bool) {
	if o == nil || o.AdditionalData == nil {
		return nil, false
	}
	return o.AdditionalData, true
}

// HasAdditionalData returns a boolean if a field has been set.
func (o *DataCollectionItem) HasAdditionalData() bool {
	if o != nil && o.AdditionalData != nil {
		return true
	}

	return false
}

// SetAdditionalData gets a reference to the given map[string]string and assigns it to the AdditionalData field.
func (o *DataCollectionItem) SetAdditionalData(v map[string]string) {
	o.AdditionalData = &v
}

func (o DataCollectionItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.EndpointId != nil {
		toSerialize["endpoint_id"] = o.EndpointId
	}
	if o.PropertyAddress != nil {
		toSerialize["property_address"] = o.PropertyAddress
	}
	if o.PropertyRef != nil {
		toSerialize["property_ref"] = o.PropertyRef
	}
	if o.StartOfTenancy != nil {
		toSerialize["start_of_tenancy"] = o.StartOfTenancy
	}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.Tenants != nil {
		toSerialize["tenants"] = o.Tenants
	}
	if o.AdditionalTenants != nil {
		toSerialize["additional_tenants"] = o.AdditionalTenants
	}
	if o.AdditionalInfo != nil {
		toSerialize["additional_info"] = o.AdditionalInfo
	}
	if o.AdditionalData != nil {
		toSerialize["additional_data"] = o.AdditionalData
	}
	return json.Marshal(toSerialize)
}

type NullableDataCollectionItem struct {
	value *DataCollectionItem
	isSet bool
}

func (v NullableDataCollectionItem) Get() *DataCollectionItem {
	return v.value
}

func (v *NullableDataCollectionItem) Set(val *DataCollectionItem) {
	v.value = val
	v.isSet = true
}

func (v NullableDataCollectionItem) IsSet() bool {
	return v.isSet
}

func (v *NullableDataCollectionItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataCollectionItem(val *DataCollectionItem) *NullableDataCollectionItem {
	return &NullableDataCollectionItem{value: val, isSet: true}
}

func (v NullableDataCollectionItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataCollectionItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
