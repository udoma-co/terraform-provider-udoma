/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the EntityGeneratedAttributesPartial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntityGeneratedAttributesPartial{}

// EntityGeneratedAttributesPartial struct for EntityGeneratedAttributesPartial
type EntityGeneratedAttributesPartial struct {
	// Unique and immutable ID attribute of the entity that is generated when the instance is created. The ID is unique within the system accross all accounts and it can be used to reference the entity in other entities or to retrieve it from the backend.
	Id string `json:"id"`
	// The date and time the entity was created
	CreatedAt int64 `json:"created_at"`
	// The date and time the entity was last updated
	UpdatedAt int64 `json:"updated_at"`
}

type _EntityGeneratedAttributesPartial EntityGeneratedAttributesPartial

// NewEntityGeneratedAttributesPartial instantiates a new EntityGeneratedAttributesPartial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityGeneratedAttributesPartial(id string, createdAt int64, updatedAt int64) *EntityGeneratedAttributesPartial {
	this := EntityGeneratedAttributesPartial{}
	this.Id = id
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewEntityGeneratedAttributesPartialWithDefaults instantiates a new EntityGeneratedAttributesPartial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityGeneratedAttributesPartialWithDefaults() *EntityGeneratedAttributesPartial {
	this := EntityGeneratedAttributesPartial{}
	return &this
}

// GetId returns the Id field value
func (o *EntityGeneratedAttributesPartial) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EntityGeneratedAttributesPartial) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EntityGeneratedAttributesPartial) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *EntityGeneratedAttributesPartial) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *EntityGeneratedAttributesPartial) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *EntityGeneratedAttributesPartial) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *EntityGeneratedAttributesPartial) GetUpdatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *EntityGeneratedAttributesPartial) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *EntityGeneratedAttributesPartial) SetUpdatedAt(v int64) {
	o.UpdatedAt = v
}

func (o EntityGeneratedAttributesPartial) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntityGeneratedAttributesPartial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *EntityGeneratedAttributesPartial) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEntityGeneratedAttributesPartial := _EntityGeneratedAttributesPartial{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEntityGeneratedAttributesPartial)

	if err != nil {
		return err
	}

	*o = EntityGeneratedAttributesPartial(varEntityGeneratedAttributesPartial)

	return err
}

type NullableEntityGeneratedAttributesPartial struct {
	value *EntityGeneratedAttributesPartial
	isSet bool
}

func (v NullableEntityGeneratedAttributesPartial) Get() *EntityGeneratedAttributesPartial {
	return v.value
}

func (v *NullableEntityGeneratedAttributesPartial) Set(val *EntityGeneratedAttributesPartial) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityGeneratedAttributesPartial) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityGeneratedAttributesPartial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityGeneratedAttributesPartial(val *EntityGeneratedAttributesPartial) *NullableEntityGeneratedAttributesPartial {
	return &NullableEntityGeneratedAttributesPartial{value: val, isSet: true}
}

func (v NullableEntityGeneratedAttributesPartial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityGeneratedAttributesPartial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
