/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the ConnectorStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectorStatus{}

// ConnectorStatus Information about the status of the connector
type ConnectorStatus struct {
	// timestamp of the last ping
	LastPing *int64 `json:"last_ping,omitempty"`
	// timestamp of the last sync
	LastSync *int64 `json:"last_sync,omitempty"`
	// list of entities that were synced by the connector
	EntityInfos []ConnectorEntitySyncInfo `json:"entity_infos,omitempty"`
}

// NewConnectorStatus instantiates a new ConnectorStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorStatus() *ConnectorStatus {
	this := ConnectorStatus{}
	return &this
}

// NewConnectorStatusWithDefaults instantiates a new ConnectorStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorStatusWithDefaults() *ConnectorStatus {
	this := ConnectorStatus{}
	return &this
}

// GetLastPing returns the LastPing field value if set, zero value otherwise.
func (o *ConnectorStatus) GetLastPing() int64 {
	if o == nil || IsNil(o.LastPing) {
		var ret int64
		return ret
	}
	return *o.LastPing
}

// GetLastPingOk returns a tuple with the LastPing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorStatus) GetLastPingOk() (*int64, bool) {
	if o == nil || IsNil(o.LastPing) {
		return nil, false
	}
	return o.LastPing, true
}

// HasLastPing returns a boolean if a field has been set.
func (o *ConnectorStatus) HasLastPing() bool {
	if o != nil && !IsNil(o.LastPing) {
		return true
	}

	return false
}

// SetLastPing gets a reference to the given int64 and assigns it to the LastPing field.
func (o *ConnectorStatus) SetLastPing(v int64) {
	o.LastPing = &v
}

// GetLastSync returns the LastSync field value if set, zero value otherwise.
func (o *ConnectorStatus) GetLastSync() int64 {
	if o == nil || IsNil(o.LastSync) {
		var ret int64
		return ret
	}
	return *o.LastSync
}

// GetLastSyncOk returns a tuple with the LastSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorStatus) GetLastSyncOk() (*int64, bool) {
	if o == nil || IsNil(o.LastSync) {
		return nil, false
	}
	return o.LastSync, true
}

// HasLastSync returns a boolean if a field has been set.
func (o *ConnectorStatus) HasLastSync() bool {
	if o != nil && !IsNil(o.LastSync) {
		return true
	}

	return false
}

// SetLastSync gets a reference to the given int64 and assigns it to the LastSync field.
func (o *ConnectorStatus) SetLastSync(v int64) {
	o.LastSync = &v
}

// GetEntityInfos returns the EntityInfos field value if set, zero value otherwise.
func (o *ConnectorStatus) GetEntityInfos() []ConnectorEntitySyncInfo {
	if o == nil || IsNil(o.EntityInfos) {
		var ret []ConnectorEntitySyncInfo
		return ret
	}
	return o.EntityInfos
}

// GetEntityInfosOk returns a tuple with the EntityInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorStatus) GetEntityInfosOk() ([]ConnectorEntitySyncInfo, bool) {
	if o == nil || IsNil(o.EntityInfos) {
		return nil, false
	}
	return o.EntityInfos, true
}

// HasEntityInfos returns a boolean if a field has been set.
func (o *ConnectorStatus) HasEntityInfos() bool {
	if o != nil && !IsNil(o.EntityInfos) {
		return true
	}

	return false
}

// SetEntityInfos gets a reference to the given []ConnectorEntitySyncInfo and assigns it to the EntityInfos field.
func (o *ConnectorStatus) SetEntityInfos(v []ConnectorEntitySyncInfo) {
	o.EntityInfos = v
}

func (o ConnectorStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectorStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastPing) {
		toSerialize["last_ping"] = o.LastPing
	}
	if !IsNil(o.LastSync) {
		toSerialize["last_sync"] = o.LastSync
	}
	if !IsNil(o.EntityInfos) {
		toSerialize["entity_infos"] = o.EntityInfos
	}
	return toSerialize, nil
}

type NullableConnectorStatus struct {
	value *ConnectorStatus
	isSet bool
}

func (v NullableConnectorStatus) Get() *ConnectorStatus {
	return v.value
}

func (v *NullableConnectorStatus) Set(val *ConnectorStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorStatus(val *ConnectorStatus) *NullableConnectorStatus {
	return &NullableConnectorStatus{value: val, isSet: true}
}

func (v NullableConnectorStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
