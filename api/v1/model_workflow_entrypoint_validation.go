/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WorkflowEntrypointValidation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowEntrypointValidation{}

// WorkflowEntrypointValidation a filter that controls which entrypoints are shown in the UI
type WorkflowEntrypointValidation struct {
	// the name of the validation
	Name string `json:"name"`
	// JS script that will be executed to validate if the  workflow can be started via this entrypoint
	Script string `json:"script"`
}

type _WorkflowEntrypointValidation WorkflowEntrypointValidation

// NewWorkflowEntrypointValidation instantiates a new WorkflowEntrypointValidation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowEntrypointValidation(name string, script string) *WorkflowEntrypointValidation {
	this := WorkflowEntrypointValidation{}
	this.Name = name
	this.Script = script
	return &this
}

// NewWorkflowEntrypointValidationWithDefaults instantiates a new WorkflowEntrypointValidation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowEntrypointValidationWithDefaults() *WorkflowEntrypointValidation {
	this := WorkflowEntrypointValidation{}
	return &this
}

// GetName returns the Name field value
func (o *WorkflowEntrypointValidation) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WorkflowEntrypointValidation) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WorkflowEntrypointValidation) SetName(v string) {
	o.Name = v
}

// GetScript returns the Script field value
func (o *WorkflowEntrypointValidation) GetScript() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Script
}

// GetScriptOk returns a tuple with the Script field value
// and a boolean to check if the value has been set.
func (o *WorkflowEntrypointValidation) GetScriptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Script, true
}

// SetScript sets field value
func (o *WorkflowEntrypointValidation) SetScript(v string) {
	o.Script = v
}

func (o WorkflowEntrypointValidation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowEntrypointValidation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["script"] = o.Script
	return toSerialize, nil
}

func (o *WorkflowEntrypointValidation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"script",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkflowEntrypointValidation := _WorkflowEntrypointValidation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkflowEntrypointValidation)

	if err != nil {
		return err
	}

	*o = WorkflowEntrypointValidation(varWorkflowEntrypointValidation)

	return err
}

type NullableWorkflowEntrypointValidation struct {
	value *WorkflowEntrypointValidation
	isSet bool
}

func (v NullableWorkflowEntrypointValidation) Get() *WorkflowEntrypointValidation {
	return v.value
}

func (v *NullableWorkflowEntrypointValidation) Set(val *WorkflowEntrypointValidation) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowEntrypointValidation) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowEntrypointValidation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowEntrypointValidation(val *WorkflowEntrypointValidation) *NullableWorkflowEntrypointValidation {
	return &NullableWorkflowEntrypointValidation{value: val, isSet: true}
}

func (v NullableWorkflowEntrypointValidation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowEntrypointValidation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
