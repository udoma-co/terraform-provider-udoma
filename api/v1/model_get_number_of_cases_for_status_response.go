/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the GetNumberOfCasesForStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNumberOfCasesForStatusResponse{}

// GetNumberOfCasesForStatusResponse struct for GetNumberOfCasesForStatusResponse
type GetNumberOfCasesForStatusResponse struct {
	NumberOfCases *int64 `json:"number_of_cases,omitempty"`
}

// NewGetNumberOfCasesForStatusResponse instantiates a new GetNumberOfCasesForStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNumberOfCasesForStatusResponse() *GetNumberOfCasesForStatusResponse {
	this := GetNumberOfCasesForStatusResponse{}
	return &this
}

// NewGetNumberOfCasesForStatusResponseWithDefaults instantiates a new GetNumberOfCasesForStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNumberOfCasesForStatusResponseWithDefaults() *GetNumberOfCasesForStatusResponse {
	this := GetNumberOfCasesForStatusResponse{}
	return &this
}

// GetNumberOfCases returns the NumberOfCases field value if set, zero value otherwise.
func (o *GetNumberOfCasesForStatusResponse) GetNumberOfCases() int64 {
	if o == nil || IsNil(o.NumberOfCases) {
		var ret int64
		return ret
	}
	return *o.NumberOfCases
}

// GetNumberOfCasesOk returns a tuple with the NumberOfCases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNumberOfCasesForStatusResponse) GetNumberOfCasesOk() (*int64, bool) {
	if o == nil || IsNil(o.NumberOfCases) {
		return nil, false
	}
	return o.NumberOfCases, true
}

// HasNumberOfCases returns a boolean if a field has been set.
func (o *GetNumberOfCasesForStatusResponse) HasNumberOfCases() bool {
	if o != nil && !IsNil(o.NumberOfCases) {
		return true
	}

	return false
}

// SetNumberOfCases gets a reference to the given int64 and assigns it to the NumberOfCases field.
func (o *GetNumberOfCasesForStatusResponse) SetNumberOfCases(v int64) {
	o.NumberOfCases = &v
}

func (o GetNumberOfCasesForStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNumberOfCasesForStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NumberOfCases) {
		toSerialize["number_of_cases"] = o.NumberOfCases
	}
	return toSerialize, nil
}

type NullableGetNumberOfCasesForStatusResponse struct {
	value *GetNumberOfCasesForStatusResponse
	isSet bool
}

func (v NullableGetNumberOfCasesForStatusResponse) Get() *GetNumberOfCasesForStatusResponse {
	return v.value
}

func (v *NullableGetNumberOfCasesForStatusResponse) Set(val *GetNumberOfCasesForStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNumberOfCasesForStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNumberOfCasesForStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNumberOfCasesForStatusResponse(val *GetNumberOfCasesForStatusResponse) *NullableGetNumberOfCasesForStatusResponse {
	return &NullableGetNumberOfCasesForStatusResponse{value: val, isSet: true}
}

func (v NullableGetNumberOfCasesForStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNumberOfCasesForStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
