/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the ConnectorCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectorCredentials{}

// ConnectorCredentials Connector credentials
type ConnectorCredentials struct {
	// api key of the connector
	ApiKey *string `json:"api_key,omitempty"`
	// api secret of the connector
	ApiSecret *string `json:"api_secret,omitempty"`
	// timestamp of the last access of the credentials
	LastAccess *int64 `json:"last_access,omitempty"`
}

// NewConnectorCredentials instantiates a new ConnectorCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorCredentials() *ConnectorCredentials {
	this := ConnectorCredentials{}
	return &this
}

// NewConnectorCredentialsWithDefaults instantiates a new ConnectorCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorCredentialsWithDefaults() *ConnectorCredentials {
	this := ConnectorCredentials{}
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *ConnectorCredentials) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorCredentials) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *ConnectorCredentials) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *ConnectorCredentials) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetApiSecret returns the ApiSecret field value if set, zero value otherwise.
func (o *ConnectorCredentials) GetApiSecret() string {
	if o == nil || IsNil(o.ApiSecret) {
		var ret string
		return ret
	}
	return *o.ApiSecret
}

// GetApiSecretOk returns a tuple with the ApiSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorCredentials) GetApiSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ApiSecret) {
		return nil, false
	}
	return o.ApiSecret, true
}

// HasApiSecret returns a boolean if a field has been set.
func (o *ConnectorCredentials) HasApiSecret() bool {
	if o != nil && !IsNil(o.ApiSecret) {
		return true
	}

	return false
}

// SetApiSecret gets a reference to the given string and assigns it to the ApiSecret field.
func (o *ConnectorCredentials) SetApiSecret(v string) {
	o.ApiSecret = &v
}

// GetLastAccess returns the LastAccess field value if set, zero value otherwise.
func (o *ConnectorCredentials) GetLastAccess() int64 {
	if o == nil || IsNil(o.LastAccess) {
		var ret int64
		return ret
	}
	return *o.LastAccess
}

// GetLastAccessOk returns a tuple with the LastAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorCredentials) GetLastAccessOk() (*int64, bool) {
	if o == nil || IsNil(o.LastAccess) {
		return nil, false
	}
	return o.LastAccess, true
}

// HasLastAccess returns a boolean if a field has been set.
func (o *ConnectorCredentials) HasLastAccess() bool {
	if o != nil && !IsNil(o.LastAccess) {
		return true
	}

	return false
}

// SetLastAccess gets a reference to the given int64 and assigns it to the LastAccess field.
func (o *ConnectorCredentials) SetLastAccess(v int64) {
	o.LastAccess = &v
}

func (o ConnectorCredentials) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectorCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKey) {
		toSerialize["api_key"] = o.ApiKey
	}
	if !IsNil(o.ApiSecret) {
		toSerialize["api_secret"] = o.ApiSecret
	}
	if !IsNil(o.LastAccess) {
		toSerialize["last_access"] = o.LastAccess
	}
	return toSerialize, nil
}

type NullableConnectorCredentials struct {
	value *ConnectorCredentials
	isSet bool
}

func (v NullableConnectorCredentials) Get() *ConnectorCredentials {
	return v.value
}

func (v *NullableConnectorCredentials) Set(val *ConnectorCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorCredentials(val *ConnectorCredentials) *NullableConnectorCredentials {
	return &NullableConnectorCredentials{value: val, isSet: true}
}

func (v NullableConnectorCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
