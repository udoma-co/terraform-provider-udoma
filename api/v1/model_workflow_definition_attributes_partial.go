/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WorkflowDefinitionAttributesPartial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowDefinitionAttributesPartial{}

// WorkflowDefinitionAttributesPartial the attributes of a workflow definition
type WorkflowDefinitionAttributesPartial struct {
	Name        string  `json:"name"`
	Description *string `json:"description,omitempty"`
	// a JS expression that determines the name of the workflow execution
	NameExpression *string `json:"name_expression,omitempty"`
	// The icon of the workflow (shown in the menu). If empty, the default icon  of the workflow type will be used.
	Icon *string `json:"icon,omitempty"`
	// a map of values, where the key and values are strings
	EnvVars *map[string]string `json:"env_vars,omitempty"`
	// ID of the first step of the workflow, which will be executed when the workflow is started
	FirstStepId string                             `json:"first_step_id"`
	InitStep    NullableWorkflowInitStepDefinition `json:"init_step,omitempty"`
	Steps       []WorkflowStepDefinition           `json:"steps"`
}

type _WorkflowDefinitionAttributesPartial WorkflowDefinitionAttributesPartial

// NewWorkflowDefinitionAttributesPartial instantiates a new WorkflowDefinitionAttributesPartial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowDefinitionAttributesPartial(name string, firstStepId string, steps []WorkflowStepDefinition) *WorkflowDefinitionAttributesPartial {
	this := WorkflowDefinitionAttributesPartial{}
	this.Name = name
	this.FirstStepId = firstStepId
	this.Steps = steps
	return &this
}

// NewWorkflowDefinitionAttributesPartialWithDefaults instantiates a new WorkflowDefinitionAttributesPartial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowDefinitionAttributesPartialWithDefaults() *WorkflowDefinitionAttributesPartial {
	this := WorkflowDefinitionAttributesPartial{}
	return &this
}

// GetName returns the Name field value
func (o *WorkflowDefinitionAttributesPartial) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WorkflowDefinitionAttributesPartial) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WorkflowDefinitionAttributesPartial) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WorkflowDefinitionAttributesPartial) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinitionAttributesPartial) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WorkflowDefinitionAttributesPartial) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WorkflowDefinitionAttributesPartial) SetDescription(v string) {
	o.Description = &v
}

// GetNameExpression returns the NameExpression field value if set, zero value otherwise.
func (o *WorkflowDefinitionAttributesPartial) GetNameExpression() string {
	if o == nil || IsNil(o.NameExpression) {
		var ret string
		return ret
	}
	return *o.NameExpression
}

// GetNameExpressionOk returns a tuple with the NameExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinitionAttributesPartial) GetNameExpressionOk() (*string, bool) {
	if o == nil || IsNil(o.NameExpression) {
		return nil, false
	}
	return o.NameExpression, true
}

// HasNameExpression returns a boolean if a field has been set.
func (o *WorkflowDefinitionAttributesPartial) HasNameExpression() bool {
	if o != nil && !IsNil(o.NameExpression) {
		return true
	}

	return false
}

// SetNameExpression gets a reference to the given string and assigns it to the NameExpression field.
func (o *WorkflowDefinitionAttributesPartial) SetNameExpression(v string) {
	o.NameExpression = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *WorkflowDefinitionAttributesPartial) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinitionAttributesPartial) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *WorkflowDefinitionAttributesPartial) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *WorkflowDefinitionAttributesPartial) SetIcon(v string) {
	o.Icon = &v
}

// GetEnvVars returns the EnvVars field value if set, zero value otherwise.
func (o *WorkflowDefinitionAttributesPartial) GetEnvVars() map[string]string {
	if o == nil || IsNil(o.EnvVars) {
		var ret map[string]string
		return ret
	}
	return *o.EnvVars
}

// GetEnvVarsOk returns a tuple with the EnvVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinitionAttributesPartial) GetEnvVarsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.EnvVars) {
		return nil, false
	}
	return o.EnvVars, true
}

// HasEnvVars returns a boolean if a field has been set.
func (o *WorkflowDefinitionAttributesPartial) HasEnvVars() bool {
	if o != nil && !IsNil(o.EnvVars) {
		return true
	}

	return false
}

// SetEnvVars gets a reference to the given map[string]string and assigns it to the EnvVars field.
func (o *WorkflowDefinitionAttributesPartial) SetEnvVars(v map[string]string) {
	o.EnvVars = &v
}

// GetFirstStepId returns the FirstStepId field value
func (o *WorkflowDefinitionAttributesPartial) GetFirstStepId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstStepId
}

// GetFirstStepIdOk returns a tuple with the FirstStepId field value
// and a boolean to check if the value has been set.
func (o *WorkflowDefinitionAttributesPartial) GetFirstStepIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstStepId, true
}

// SetFirstStepId sets field value
func (o *WorkflowDefinitionAttributesPartial) SetFirstStepId(v string) {
	o.FirstStepId = v
}

// GetInitStep returns the InitStep field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowDefinitionAttributesPartial) GetInitStep() WorkflowInitStepDefinition {
	if o == nil || IsNil(o.InitStep.Get()) {
		var ret WorkflowInitStepDefinition
		return ret
	}
	return *o.InitStep.Get()
}

// GetInitStepOk returns a tuple with the InitStep field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowDefinitionAttributesPartial) GetInitStepOk() (*WorkflowInitStepDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return o.InitStep.Get(), o.InitStep.IsSet()
}

// HasInitStep returns a boolean if a field has been set.
func (o *WorkflowDefinitionAttributesPartial) HasInitStep() bool {
	if o != nil && o.InitStep.IsSet() {
		return true
	}

	return false
}

// SetInitStep gets a reference to the given NullableWorkflowInitStepDefinition and assigns it to the InitStep field.
func (o *WorkflowDefinitionAttributesPartial) SetInitStep(v WorkflowInitStepDefinition) {
	o.InitStep.Set(&v)
}

// SetInitStepNil sets the value for InitStep to be an explicit nil
func (o *WorkflowDefinitionAttributesPartial) SetInitStepNil() {
	o.InitStep.Set(nil)
}

// UnsetInitStep ensures that no value is present for InitStep, not even an explicit nil
func (o *WorkflowDefinitionAttributesPartial) UnsetInitStep() {
	o.InitStep.Unset()
}

// GetSteps returns the Steps field value
func (o *WorkflowDefinitionAttributesPartial) GetSteps() []WorkflowStepDefinition {
	if o == nil {
		var ret []WorkflowStepDefinition
		return ret
	}

	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value
// and a boolean to check if the value has been set.
func (o *WorkflowDefinitionAttributesPartial) GetStepsOk() ([]WorkflowStepDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return o.Steps, true
}

// SetSteps sets field value
func (o *WorkflowDefinitionAttributesPartial) SetSteps(v []WorkflowStepDefinition) {
	o.Steps = v
}

func (o WorkflowDefinitionAttributesPartial) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowDefinitionAttributesPartial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.NameExpression) {
		toSerialize["name_expression"] = o.NameExpression
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.EnvVars) {
		toSerialize["env_vars"] = o.EnvVars
	}
	toSerialize["first_step_id"] = o.FirstStepId
	if o.InitStep.IsSet() {
		toSerialize["init_step"] = o.InitStep.Get()
	}
	toSerialize["steps"] = o.Steps
	return toSerialize, nil
}

func (o *WorkflowDefinitionAttributesPartial) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"first_step_id",
		"steps",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkflowDefinitionAttributesPartial := _WorkflowDefinitionAttributesPartial{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkflowDefinitionAttributesPartial)

	if err != nil {
		return err
	}

	*o = WorkflowDefinitionAttributesPartial(varWorkflowDefinitionAttributesPartial)

	return err
}

type NullableWorkflowDefinitionAttributesPartial struct {
	value *WorkflowDefinitionAttributesPartial
	isSet bool
}

func (v NullableWorkflowDefinitionAttributesPartial) Get() *WorkflowDefinitionAttributesPartial {
	return v.value
}

func (v *NullableWorkflowDefinitionAttributesPartial) Set(val *WorkflowDefinitionAttributesPartial) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowDefinitionAttributesPartial) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowDefinitionAttributesPartial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowDefinitionAttributesPartial(val *WorkflowDefinitionAttributesPartial) *NullableWorkflowDefinitionAttributesPartial {
	return &NullableWorkflowDefinitionAttributesPartial{value: val, isSet: true}
}

func (v NullableWorkflowDefinitionAttributesPartial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowDefinitionAttributesPartial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
