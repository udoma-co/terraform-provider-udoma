/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the QueryServiceProviderCasesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryServiceProviderCasesResponse{}

// QueryServiceProviderCasesResponse struct for QueryServiceProviderCasesResponse
type QueryServiceProviderCasesResponse struct {
	Cases []Case `json:"cases,omitempty"`
}

// NewQueryServiceProviderCasesResponse instantiates a new QueryServiceProviderCasesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryServiceProviderCasesResponse() *QueryServiceProviderCasesResponse {
	this := QueryServiceProviderCasesResponse{}
	return &this
}

// NewQueryServiceProviderCasesResponseWithDefaults instantiates a new QueryServiceProviderCasesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryServiceProviderCasesResponseWithDefaults() *QueryServiceProviderCasesResponse {
	this := QueryServiceProviderCasesResponse{}
	return &this
}

// GetCases returns the Cases field value if set, zero value otherwise.
func (o *QueryServiceProviderCasesResponse) GetCases() []Case {
	if o == nil || IsNil(o.Cases) {
		var ret []Case
		return ret
	}
	return o.Cases
}

// GetCasesOk returns a tuple with the Cases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryServiceProviderCasesResponse) GetCasesOk() ([]Case, bool) {
	if o == nil || IsNil(o.Cases) {
		return nil, false
	}
	return o.Cases, true
}

// HasCases returns a boolean if a field has been set.
func (o *QueryServiceProviderCasesResponse) HasCases() bool {
	if o != nil && !IsNil(o.Cases) {
		return true
	}

	return false
}

// SetCases gets a reference to the given []Case and assigns it to the Cases field.
func (o *QueryServiceProviderCasesResponse) SetCases(v []Case) {
	o.Cases = v
}

func (o QueryServiceProviderCasesResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryServiceProviderCasesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cases) {
		toSerialize["cases"] = o.Cases
	}
	return toSerialize, nil
}

type NullableQueryServiceProviderCasesResponse struct {
	value *QueryServiceProviderCasesResponse
	isSet bool
}

func (v NullableQueryServiceProviderCasesResponse) Get() *QueryServiceProviderCasesResponse {
	return v.value
}

func (v *NullableQueryServiceProviderCasesResponse) Set(val *QueryServiceProviderCasesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryServiceProviderCasesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryServiceProviderCasesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryServiceProviderCasesResponse(val *QueryServiceProviderCasesResponse) *NullableQueryServiceProviderCasesResponse {
	return &NullableQueryServiceProviderCasesResponse{value: val, isSet: true}
}

func (v NullableQueryServiceProviderCasesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryServiceProviderCasesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
