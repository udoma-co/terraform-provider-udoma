/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the QueryFinancialAccountBalancesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryFinancialAccountBalancesResponse{}

// QueryFinancialAccountBalancesResponse The response to a query for financial account balances
type QueryFinancialAccountBalancesResponse struct {
	// The list of financial account balances that match the query
	Balances []AccountBalance `json:"balances,omitempty"`
}

// NewQueryFinancialAccountBalancesResponse instantiates a new QueryFinancialAccountBalancesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryFinancialAccountBalancesResponse() *QueryFinancialAccountBalancesResponse {
	this := QueryFinancialAccountBalancesResponse{}
	return &this
}

// NewQueryFinancialAccountBalancesResponseWithDefaults instantiates a new QueryFinancialAccountBalancesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryFinancialAccountBalancesResponseWithDefaults() *QueryFinancialAccountBalancesResponse {
	this := QueryFinancialAccountBalancesResponse{}
	return &this
}

// GetBalances returns the Balances field value if set, zero value otherwise.
func (o *QueryFinancialAccountBalancesResponse) GetBalances() []AccountBalance {
	if o == nil || IsNil(o.Balances) {
		var ret []AccountBalance
		return ret
	}
	return o.Balances
}

// GetBalancesOk returns a tuple with the Balances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryFinancialAccountBalancesResponse) GetBalancesOk() ([]AccountBalance, bool) {
	if o == nil || IsNil(o.Balances) {
		return nil, false
	}
	return o.Balances, true
}

// HasBalances returns a boolean if a field has been set.
func (o *QueryFinancialAccountBalancesResponse) HasBalances() bool {
	if o != nil && !IsNil(o.Balances) {
		return true
	}

	return false
}

// SetBalances gets a reference to the given []AccountBalance and assigns it to the Balances field.
func (o *QueryFinancialAccountBalancesResponse) SetBalances(v []AccountBalance) {
	o.Balances = v
}

func (o QueryFinancialAccountBalancesResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryFinancialAccountBalancesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Balances) {
		toSerialize["balances"] = o.Balances
	}
	return toSerialize, nil
}

type NullableQueryFinancialAccountBalancesResponse struct {
	value *QueryFinancialAccountBalancesResponse
	isSet bool
}

func (v NullableQueryFinancialAccountBalancesResponse) Get() *QueryFinancialAccountBalancesResponse {
	return v.value
}

func (v *NullableQueryFinancialAccountBalancesResponse) Set(val *QueryFinancialAccountBalancesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryFinancialAccountBalancesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryFinancialAccountBalancesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryFinancialAccountBalancesResponse(val *QueryFinancialAccountBalancesResponse) *NullableQueryFinancialAccountBalancesResponse {
	return &NullableQueryFinancialAccountBalancesResponse{value: val, isSet: true}
}

func (v NullableQueryFinancialAccountBalancesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryFinancialAccountBalancesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
