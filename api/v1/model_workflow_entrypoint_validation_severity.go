/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// WorkflowEntrypointValidationSeverity the model 'WorkflowEntrypointValidationSeverity'
type WorkflowEntrypointValidationSeverity string

// List of WorkflowEntrypointValidationSeverity
const (
	WORKFLOWENTRYPOINTVALIDATIONSEVERITY_INFO    WorkflowEntrypointValidationSeverity = "info"
	WORKFLOWENTRYPOINTVALIDATIONSEVERITY_WARNING WorkflowEntrypointValidationSeverity = "warning"
	WORKFLOWENTRYPOINTVALIDATIONSEVERITY_ERROR   WorkflowEntrypointValidationSeverity = "error"
)

// All allowed values of WorkflowEntrypointValidationSeverity enum
var AllowedWorkflowEntrypointValidationSeverityEnumValues = []WorkflowEntrypointValidationSeverity{
	"info",
	"warning",
	"error",
}

func (v *WorkflowEntrypointValidationSeverity) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WorkflowEntrypointValidationSeverity(value)
	for _, existing := range AllowedWorkflowEntrypointValidationSeverityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WorkflowEntrypointValidationSeverity", value)
}

// NewWorkflowEntrypointValidationSeverityFromValue returns a pointer to a valid WorkflowEntrypointValidationSeverity
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWorkflowEntrypointValidationSeverityFromValue(v string) (*WorkflowEntrypointValidationSeverity, error) {
	ev := WorkflowEntrypointValidationSeverity(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WorkflowEntrypointValidationSeverity: valid values are %v", v, AllowedWorkflowEntrypointValidationSeverityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WorkflowEntrypointValidationSeverity) IsValid() bool {
	for _, existing := range AllowedWorkflowEntrypointValidationSeverityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WorkflowEntrypointValidationSeverity value
func (v WorkflowEntrypointValidationSeverity) Ptr() *WorkflowEntrypointValidationSeverity {
	return &v
}

type NullableWorkflowEntrypointValidationSeverity struct {
	value *WorkflowEntrypointValidationSeverity
	isSet bool
}

func (v NullableWorkflowEntrypointValidationSeverity) Get() *WorkflowEntrypointValidationSeverity {
	return v.value
}

func (v *NullableWorkflowEntrypointValidationSeverity) Set(val *WorkflowEntrypointValidationSeverity) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowEntrypointValidationSeverity) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowEntrypointValidationSeverity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowEntrypointValidationSeverity(val *WorkflowEntrypointValidationSeverity) *NullableWorkflowEntrypointValidationSeverity {
	return &NullableWorkflowEntrypointValidationSeverity{value: val, isSet: true}
}

func (v NullableWorkflowEntrypointValidationSeverity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowEntrypointValidationSeverity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
