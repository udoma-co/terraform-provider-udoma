/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the EntityTimestampsAttributesPartial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntityTimestampsAttributesPartial{}

// EntityTimestampsAttributesPartial Create and update times that are typically set when the instance is created or modified.
type EntityTimestampsAttributesPartial struct {
	// The date and time the entity was created
	CreatedAt int64 `json:"created_at"`
	// The date and time the entity was last updated
	UpdatedAt int64 `json:"updated_at"`
}

type _EntityTimestampsAttributesPartial EntityTimestampsAttributesPartial

// NewEntityTimestampsAttributesPartial instantiates a new EntityTimestampsAttributesPartial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityTimestampsAttributesPartial(createdAt int64, updatedAt int64) *EntityTimestampsAttributesPartial {
	this := EntityTimestampsAttributesPartial{}
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewEntityTimestampsAttributesPartialWithDefaults instantiates a new EntityTimestampsAttributesPartial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityTimestampsAttributesPartialWithDefaults() *EntityTimestampsAttributesPartial {
	this := EntityTimestampsAttributesPartial{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *EntityTimestampsAttributesPartial) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *EntityTimestampsAttributesPartial) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *EntityTimestampsAttributesPartial) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *EntityTimestampsAttributesPartial) GetUpdatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *EntityTimestampsAttributesPartial) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *EntityTimestampsAttributesPartial) SetUpdatedAt(v int64) {
	o.UpdatedAt = v
}

func (o EntityTimestampsAttributesPartial) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntityTimestampsAttributesPartial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *EntityTimestampsAttributesPartial) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEntityTimestampsAttributesPartial := _EntityTimestampsAttributesPartial{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEntityTimestampsAttributesPartial)

	if err != nil {
		return err
	}

	*o = EntityTimestampsAttributesPartial(varEntityTimestampsAttributesPartial)

	return err
}

type NullableEntityTimestampsAttributesPartial struct {
	value *EntityTimestampsAttributesPartial
	isSet bool
}

func (v NullableEntityTimestampsAttributesPartial) Get() *EntityTimestampsAttributesPartial {
	return v.value
}

func (v *NullableEntityTimestampsAttributesPartial) Set(val *EntityTimestampsAttributesPartial) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityTimestampsAttributesPartial) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityTimestampsAttributesPartial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityTimestampsAttributesPartial(val *EntityTimestampsAttributesPartial) *NullableEntityTimestampsAttributesPartial {
	return &NullableEntityTimestampsAttributesPartial{value: val, isSet: true}
}

func (v NullableEntityTimestampsAttributesPartial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityTimestampsAttributesPartial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
