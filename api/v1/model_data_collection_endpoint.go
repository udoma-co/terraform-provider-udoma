/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// DataCollectionEndpoint custom data collection endpoint
type DataCollectionEndpoint struct {
	Code *string `json:"code,omitempty"`
	// the date at which the endpoint was created
	CreationDate *int64 `json:"creation_date,omitempty"`
	// if true, the endpoint will be disabled after it has been used once
	SingleUse *bool `json:"single_use,omitempty"`
	// the number of data items that have been collected using this endpoint
	DataItems           *int32      `json:"data_items,omitempty"`
	PropertyRefs        []string    `json:"property_refs,omitempty"`
	PropertyAddresses   []string    `json:"property_addresses,omitempty"`
	AdditionalQuestions *CustomForm `json:"additional_questions,omitempty"`
}

// NewDataCollectionEndpoint instantiates a new DataCollectionEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataCollectionEndpoint() *DataCollectionEndpoint {
	this := DataCollectionEndpoint{}
	return &this
}

// NewDataCollectionEndpointWithDefaults instantiates a new DataCollectionEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataCollectionEndpointWithDefaults() *DataCollectionEndpoint {
	this := DataCollectionEndpoint{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *DataCollectionEndpoint) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionEndpoint) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *DataCollectionEndpoint) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *DataCollectionEndpoint) SetCode(v string) {
	o.Code = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *DataCollectionEndpoint) GetCreationDate() int64 {
	if o == nil || o.CreationDate == nil {
		var ret int64
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionEndpoint) GetCreationDateOk() (*int64, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *DataCollectionEndpoint) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given int64 and assigns it to the CreationDate field.
func (o *DataCollectionEndpoint) SetCreationDate(v int64) {
	o.CreationDate = &v
}

// GetSingleUse returns the SingleUse field value if set, zero value otherwise.
func (o *DataCollectionEndpoint) GetSingleUse() bool {
	if o == nil || o.SingleUse == nil {
		var ret bool
		return ret
	}
	return *o.SingleUse
}

// GetSingleUseOk returns a tuple with the SingleUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionEndpoint) GetSingleUseOk() (*bool, bool) {
	if o == nil || o.SingleUse == nil {
		return nil, false
	}
	return o.SingleUse, true
}

// HasSingleUse returns a boolean if a field has been set.
func (o *DataCollectionEndpoint) HasSingleUse() bool {
	if o != nil && o.SingleUse != nil {
		return true
	}

	return false
}

// SetSingleUse gets a reference to the given bool and assigns it to the SingleUse field.
func (o *DataCollectionEndpoint) SetSingleUse(v bool) {
	o.SingleUse = &v
}

// GetDataItems returns the DataItems field value if set, zero value otherwise.
func (o *DataCollectionEndpoint) GetDataItems() int32 {
	if o == nil || o.DataItems == nil {
		var ret int32
		return ret
	}
	return *o.DataItems
}

// GetDataItemsOk returns a tuple with the DataItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionEndpoint) GetDataItemsOk() (*int32, bool) {
	if o == nil || o.DataItems == nil {
		return nil, false
	}
	return o.DataItems, true
}

// HasDataItems returns a boolean if a field has been set.
func (o *DataCollectionEndpoint) HasDataItems() bool {
	if o != nil && o.DataItems != nil {
		return true
	}

	return false
}

// SetDataItems gets a reference to the given int32 and assigns it to the DataItems field.
func (o *DataCollectionEndpoint) SetDataItems(v int32) {
	o.DataItems = &v
}

// GetPropertyRefs returns the PropertyRefs field value if set, zero value otherwise.
func (o *DataCollectionEndpoint) GetPropertyRefs() []string {
	if o == nil || o.PropertyRefs == nil {
		var ret []string
		return ret
	}
	return o.PropertyRefs
}

// GetPropertyRefsOk returns a tuple with the PropertyRefs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionEndpoint) GetPropertyRefsOk() ([]string, bool) {
	if o == nil || o.PropertyRefs == nil {
		return nil, false
	}
	return o.PropertyRefs, true
}

// HasPropertyRefs returns a boolean if a field has been set.
func (o *DataCollectionEndpoint) HasPropertyRefs() bool {
	if o != nil && o.PropertyRefs != nil {
		return true
	}

	return false
}

// SetPropertyRefs gets a reference to the given []string and assigns it to the PropertyRefs field.
func (o *DataCollectionEndpoint) SetPropertyRefs(v []string) {
	o.PropertyRefs = v
}

// GetPropertyAddresses returns the PropertyAddresses field value if set, zero value otherwise.
func (o *DataCollectionEndpoint) GetPropertyAddresses() []string {
	if o == nil || o.PropertyAddresses == nil {
		var ret []string
		return ret
	}
	return o.PropertyAddresses
}

// GetPropertyAddressesOk returns a tuple with the PropertyAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionEndpoint) GetPropertyAddressesOk() ([]string, bool) {
	if o == nil || o.PropertyAddresses == nil {
		return nil, false
	}
	return o.PropertyAddresses, true
}

// HasPropertyAddresses returns a boolean if a field has been set.
func (o *DataCollectionEndpoint) HasPropertyAddresses() bool {
	if o != nil && o.PropertyAddresses != nil {
		return true
	}

	return false
}

// SetPropertyAddresses gets a reference to the given []string and assigns it to the PropertyAddresses field.
func (o *DataCollectionEndpoint) SetPropertyAddresses(v []string) {
	o.PropertyAddresses = v
}

// GetAdditionalQuestions returns the AdditionalQuestions field value if set, zero value otherwise.
func (o *DataCollectionEndpoint) GetAdditionalQuestions() CustomForm {
	if o == nil || o.AdditionalQuestions == nil {
		var ret CustomForm
		return ret
	}
	return *o.AdditionalQuestions
}

// GetAdditionalQuestionsOk returns a tuple with the AdditionalQuestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCollectionEndpoint) GetAdditionalQuestionsOk() (*CustomForm, bool) {
	if o == nil || o.AdditionalQuestions == nil {
		return nil, false
	}
	return o.AdditionalQuestions, true
}

// HasAdditionalQuestions returns a boolean if a field has been set.
func (o *DataCollectionEndpoint) HasAdditionalQuestions() bool {
	if o != nil && o.AdditionalQuestions != nil {
		return true
	}

	return false
}

// SetAdditionalQuestions gets a reference to the given CustomForm and assigns it to the AdditionalQuestions field.
func (o *DataCollectionEndpoint) SetAdditionalQuestions(v CustomForm) {
	o.AdditionalQuestions = &v
}

func (o DataCollectionEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.CreationDate != nil {
		toSerialize["creation_date"] = o.CreationDate
	}
	if o.SingleUse != nil {
		toSerialize["single_use"] = o.SingleUse
	}
	if o.DataItems != nil {
		toSerialize["data_items"] = o.DataItems
	}
	if o.PropertyRefs != nil {
		toSerialize["property_refs"] = o.PropertyRefs
	}
	if o.PropertyAddresses != nil {
		toSerialize["property_addresses"] = o.PropertyAddresses
	}
	if o.AdditionalQuestions != nil {
		toSerialize["additional_questions"] = o.AdditionalQuestions
	}
	return json.Marshal(toSerialize)
}

type NullableDataCollectionEndpoint struct {
	value *DataCollectionEndpoint
	isSet bool
}

func (v NullableDataCollectionEndpoint) Get() *DataCollectionEndpoint {
	return v.value
}

func (v *NullableDataCollectionEndpoint) Set(val *DataCollectionEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableDataCollectionEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableDataCollectionEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataCollectionEndpoint(val *DataCollectionEndpoint) *NullableDataCollectionEndpoint {
	return &NullableDataCollectionEndpoint{value: val, isSet: true}
}

func (v NullableDataCollectionEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataCollectionEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
