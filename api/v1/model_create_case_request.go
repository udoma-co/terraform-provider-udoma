/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CreateCaseRequest All the information required for raising a new case
type CreateCaseRequest struct {
	// Reference to either property or building for which case is rased
	PropertyRef     *string      `json:"property_ref,omitempty"`
	PropertyAddress *Address     `json:"property_address,omitempty"`
	ReporterInfo    *ContactData `json:"reporter_info,omitempty"`
	// The ID of the case template used to create this case
	TemplateRef *string `json:"template_ref,omitempty"`
	// Input provided by the user when raising the case as a key-value map
	Data map[string]interface{} `json:"data,omitempty"`
}

// NewCreateCaseRequest instantiates a new CreateCaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCaseRequest() *CreateCaseRequest {
	this := CreateCaseRequest{}
	return &this
}

// NewCreateCaseRequestWithDefaults instantiates a new CreateCaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCaseRequestWithDefaults() *CreateCaseRequest {
	this := CreateCaseRequest{}
	return &this
}

// GetPropertyRef returns the PropertyRef field value if set, zero value otherwise.
func (o *CreateCaseRequest) GetPropertyRef() string {
	if o == nil || o.PropertyRef == nil {
		var ret string
		return ret
	}
	return *o.PropertyRef
}

// GetPropertyRefOk returns a tuple with the PropertyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCaseRequest) GetPropertyRefOk() (*string, bool) {
	if o == nil || o.PropertyRef == nil {
		return nil, false
	}
	return o.PropertyRef, true
}

// HasPropertyRef returns a boolean if a field has been set.
func (o *CreateCaseRequest) HasPropertyRef() bool {
	if o != nil && o.PropertyRef != nil {
		return true
	}

	return false
}

// SetPropertyRef gets a reference to the given string and assigns it to the PropertyRef field.
func (o *CreateCaseRequest) SetPropertyRef(v string) {
	o.PropertyRef = &v
}

// GetPropertyAddress returns the PropertyAddress field value if set, zero value otherwise.
func (o *CreateCaseRequest) GetPropertyAddress() Address {
	if o == nil || o.PropertyAddress == nil {
		var ret Address
		return ret
	}
	return *o.PropertyAddress
}

// GetPropertyAddressOk returns a tuple with the PropertyAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCaseRequest) GetPropertyAddressOk() (*Address, bool) {
	if o == nil || o.PropertyAddress == nil {
		return nil, false
	}
	return o.PropertyAddress, true
}

// HasPropertyAddress returns a boolean if a field has been set.
func (o *CreateCaseRequest) HasPropertyAddress() bool {
	if o != nil && o.PropertyAddress != nil {
		return true
	}

	return false
}

// SetPropertyAddress gets a reference to the given Address and assigns it to the PropertyAddress field.
func (o *CreateCaseRequest) SetPropertyAddress(v Address) {
	o.PropertyAddress = &v
}

// GetReporterInfo returns the ReporterInfo field value if set, zero value otherwise.
func (o *CreateCaseRequest) GetReporterInfo() ContactData {
	if o == nil || o.ReporterInfo == nil {
		var ret ContactData
		return ret
	}
	return *o.ReporterInfo
}

// GetReporterInfoOk returns a tuple with the ReporterInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCaseRequest) GetReporterInfoOk() (*ContactData, bool) {
	if o == nil || o.ReporterInfo == nil {
		return nil, false
	}
	return o.ReporterInfo, true
}

// HasReporterInfo returns a boolean if a field has been set.
func (o *CreateCaseRequest) HasReporterInfo() bool {
	if o != nil && o.ReporterInfo != nil {
		return true
	}

	return false
}

// SetReporterInfo gets a reference to the given ContactData and assigns it to the ReporterInfo field.
func (o *CreateCaseRequest) SetReporterInfo(v ContactData) {
	o.ReporterInfo = &v
}

// GetTemplateRef returns the TemplateRef field value if set, zero value otherwise.
func (o *CreateCaseRequest) GetTemplateRef() string {
	if o == nil || o.TemplateRef == nil {
		var ret string
		return ret
	}
	return *o.TemplateRef
}

// GetTemplateRefOk returns a tuple with the TemplateRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCaseRequest) GetTemplateRefOk() (*string, bool) {
	if o == nil || o.TemplateRef == nil {
		return nil, false
	}
	return o.TemplateRef, true
}

// HasTemplateRef returns a boolean if a field has been set.
func (o *CreateCaseRequest) HasTemplateRef() bool {
	if o != nil && o.TemplateRef != nil {
		return true
	}

	return false
}

// SetTemplateRef gets a reference to the given string and assigns it to the TemplateRef field.
func (o *CreateCaseRequest) SetTemplateRef(v string) {
	o.TemplateRef = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *CreateCaseRequest) GetData() map[string]interface{} {
	if o == nil || o.Data == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCaseRequest) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CreateCaseRequest) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *CreateCaseRequest) SetData(v map[string]interface{}) {
	o.Data = v
}

func (o CreateCaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PropertyRef != nil {
		toSerialize["property_ref"] = o.PropertyRef
	}
	if o.PropertyAddress != nil {
		toSerialize["property_address"] = o.PropertyAddress
	}
	if o.ReporterInfo != nil {
		toSerialize["reporter_info"] = o.ReporterInfo
	}
	if o.TemplateRef != nil {
		toSerialize["template_ref"] = o.TemplateRef
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableCreateCaseRequest struct {
	value *CreateCaseRequest
	isSet bool
}

func (v NullableCreateCaseRequest) Get() *CreateCaseRequest {
	return v.value
}

func (v *NullableCreateCaseRequest) Set(val *CreateCaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCaseRequest(val *CreateCaseRequest) *NullableCreateCaseRequest {
	return &NullableCreateCaseRequest{value: val, isSet: true}
}

func (v NullableCreateCaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
