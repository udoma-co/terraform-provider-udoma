/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CreateOrUpdateDocumentTemplateRequest Create or update a document template
type CreateOrUpdateDocumentTemplateRequest struct {
	// The name of the template
	Name *string `json:"name,omitempty"`
	// A description of the template
	Description *string                  `json:"description,omitempty"`
	Options     *DocumentTemplateOptions `json:"options,omitempty"`
	// An optional JS expression to be used to compute the name of the template. If not set, the name of the template will be used for new documents.
	NameExpression *string `json:"name_expression,omitempty"`
	// The source of the template, used to generate the document
	Content *string     `json:"content,omitempty"`
	Inputs  *CustomForm `json:"inputs,omitempty"`
	// The list of placeholders used in the template
	Placeholders []DocumentPlaceholder                  `json:"placeholders,omitempty"`
	Signatures   *DocumentTemplateSignatureConfguration `json:"signatures,omitempty"`
}

// NewCreateOrUpdateDocumentTemplateRequest instantiates a new CreateOrUpdateDocumentTemplateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateDocumentTemplateRequest() *CreateOrUpdateDocumentTemplateRequest {
	this := CreateOrUpdateDocumentTemplateRequest{}
	return &this
}

// NewCreateOrUpdateDocumentTemplateRequestWithDefaults instantiates a new CreateOrUpdateDocumentTemplateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateDocumentTemplateRequestWithDefaults() *CreateOrUpdateDocumentTemplateRequest {
	this := CreateOrUpdateDocumentTemplateRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateOrUpdateDocumentTemplateRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateOrUpdateDocumentTemplateRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateOrUpdateDocumentTemplateRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateOrUpdateDocumentTemplateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CreateOrUpdateDocumentTemplateRequest) GetOptions() DocumentTemplateOptions {
	if o == nil || o.Options == nil {
		var ret DocumentTemplateOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) GetOptionsOk() (*DocumentTemplateOptions, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given DocumentTemplateOptions and assigns it to the Options field.
func (o *CreateOrUpdateDocumentTemplateRequest) SetOptions(v DocumentTemplateOptions) {
	o.Options = &v
}

// GetNameExpression returns the NameExpression field value if set, zero value otherwise.
func (o *CreateOrUpdateDocumentTemplateRequest) GetNameExpression() string {
	if o == nil || o.NameExpression == nil {
		var ret string
		return ret
	}
	return *o.NameExpression
}

// GetNameExpressionOk returns a tuple with the NameExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) GetNameExpressionOk() (*string, bool) {
	if o == nil || o.NameExpression == nil {
		return nil, false
	}
	return o.NameExpression, true
}

// HasNameExpression returns a boolean if a field has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) HasNameExpression() bool {
	if o != nil && o.NameExpression != nil {
		return true
	}

	return false
}

// SetNameExpression gets a reference to the given string and assigns it to the NameExpression field.
func (o *CreateOrUpdateDocumentTemplateRequest) SetNameExpression(v string) {
	o.NameExpression = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *CreateOrUpdateDocumentTemplateRequest) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *CreateOrUpdateDocumentTemplateRequest) SetContent(v string) {
	o.Content = &v
}

// GetInputs returns the Inputs field value if set, zero value otherwise.
func (o *CreateOrUpdateDocumentTemplateRequest) GetInputs() CustomForm {
	if o == nil || o.Inputs == nil {
		var ret CustomForm
		return ret
	}
	return *o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) GetInputsOk() (*CustomForm, bool) {
	if o == nil || o.Inputs == nil {
		return nil, false
	}
	return o.Inputs, true
}

// HasInputs returns a boolean if a field has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) HasInputs() bool {
	if o != nil && o.Inputs != nil {
		return true
	}

	return false
}

// SetInputs gets a reference to the given CustomForm and assigns it to the Inputs field.
func (o *CreateOrUpdateDocumentTemplateRequest) SetInputs(v CustomForm) {
	o.Inputs = &v
}

// GetPlaceholders returns the Placeholders field value if set, zero value otherwise.
func (o *CreateOrUpdateDocumentTemplateRequest) GetPlaceholders() []DocumentPlaceholder {
	if o == nil || o.Placeholders == nil {
		var ret []DocumentPlaceholder
		return ret
	}
	return o.Placeholders
}

// GetPlaceholdersOk returns a tuple with the Placeholders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) GetPlaceholdersOk() ([]DocumentPlaceholder, bool) {
	if o == nil || o.Placeholders == nil {
		return nil, false
	}
	return o.Placeholders, true
}

// HasPlaceholders returns a boolean if a field has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) HasPlaceholders() bool {
	if o != nil && o.Placeholders != nil {
		return true
	}

	return false
}

// SetPlaceholders gets a reference to the given []DocumentPlaceholder and assigns it to the Placeholders field.
func (o *CreateOrUpdateDocumentTemplateRequest) SetPlaceholders(v []DocumentPlaceholder) {
	o.Placeholders = v
}

// GetSignatures returns the Signatures field value if set, zero value otherwise.
func (o *CreateOrUpdateDocumentTemplateRequest) GetSignatures() DocumentTemplateSignatureConfguration {
	if o == nil || o.Signatures == nil {
		var ret DocumentTemplateSignatureConfguration
		return ret
	}
	return *o.Signatures
}

// GetSignaturesOk returns a tuple with the Signatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) GetSignaturesOk() (*DocumentTemplateSignatureConfguration, bool) {
	if o == nil || o.Signatures == nil {
		return nil, false
	}
	return o.Signatures, true
}

// HasSignatures returns a boolean if a field has been set.
func (o *CreateOrUpdateDocumentTemplateRequest) HasSignatures() bool {
	if o != nil && o.Signatures != nil {
		return true
	}

	return false
}

// SetSignatures gets a reference to the given DocumentTemplateSignatureConfguration and assigns it to the Signatures field.
func (o *CreateOrUpdateDocumentTemplateRequest) SetSignatures(v DocumentTemplateSignatureConfguration) {
	o.Signatures = &v
}

func (o CreateOrUpdateDocumentTemplateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.NameExpression != nil {
		toSerialize["name_expression"] = o.NameExpression
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.Inputs != nil {
		toSerialize["inputs"] = o.Inputs
	}
	if o.Placeholders != nil {
		toSerialize["placeholders"] = o.Placeholders
	}
	if o.Signatures != nil {
		toSerialize["signatures"] = o.Signatures
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOrUpdateDocumentTemplateRequest struct {
	value *CreateOrUpdateDocumentTemplateRequest
	isSet bool
}

func (v NullableCreateOrUpdateDocumentTemplateRequest) Get() *CreateOrUpdateDocumentTemplateRequest {
	return v.value
}

func (v *NullableCreateOrUpdateDocumentTemplateRequest) Set(val *CreateOrUpdateDocumentTemplateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateDocumentTemplateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateDocumentTemplateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateDocumentTemplateRequest(val *CreateOrUpdateDocumentTemplateRequest) *NullableCreateOrUpdateDocumentTemplateRequest {
	return &NullableCreateOrUpdateDocumentTemplateRequest{value: val, isSet: true}
}

func (v NullableCreateOrUpdateDocumentTemplateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateDocumentTemplateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
