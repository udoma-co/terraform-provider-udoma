/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the ExecuteCommentTemplateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecuteCommentTemplateRequest{}

// ExecuteCommentTemplateRequest struct for ExecuteCommentTemplateRequest
type ExecuteCommentTemplateRequest struct {
	// The case to execute the comment on.
	CaseId *string `json:"case_id,omitempty"`
}

// NewExecuteCommentTemplateRequest instantiates a new ExecuteCommentTemplateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecuteCommentTemplateRequest() *ExecuteCommentTemplateRequest {
	this := ExecuteCommentTemplateRequest{}
	return &this
}

// NewExecuteCommentTemplateRequestWithDefaults instantiates a new ExecuteCommentTemplateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecuteCommentTemplateRequestWithDefaults() *ExecuteCommentTemplateRequest {
	this := ExecuteCommentTemplateRequest{}
	return &this
}

// GetCaseId returns the CaseId field value if set, zero value otherwise.
func (o *ExecuteCommentTemplateRequest) GetCaseId() string {
	if o == nil || IsNil(o.CaseId) {
		var ret string
		return ret
	}
	return *o.CaseId
}

// GetCaseIdOk returns a tuple with the CaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteCommentTemplateRequest) GetCaseIdOk() (*string, bool) {
	if o == nil || IsNil(o.CaseId) {
		return nil, false
	}
	return o.CaseId, true
}

// HasCaseId returns a boolean if a field has been set.
func (o *ExecuteCommentTemplateRequest) HasCaseId() bool {
	if o != nil && !IsNil(o.CaseId) {
		return true
	}

	return false
}

// SetCaseId gets a reference to the given string and assigns it to the CaseId field.
func (o *ExecuteCommentTemplateRequest) SetCaseId(v string) {
	o.CaseId = &v
}

func (o ExecuteCommentTemplateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecuteCommentTemplateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CaseId) {
		toSerialize["case_id"] = o.CaseId
	}
	return toSerialize, nil
}

type NullableExecuteCommentTemplateRequest struct {
	value *ExecuteCommentTemplateRequest
	isSet bool
}

func (v NullableExecuteCommentTemplateRequest) Get() *ExecuteCommentTemplateRequest {
	return v.value
}

func (v *NullableExecuteCommentTemplateRequest) Set(val *ExecuteCommentTemplateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExecuteCommentTemplateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExecuteCommentTemplateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecuteCommentTemplateRequest(val *ExecuteCommentTemplateRequest) *NullableExecuteCommentTemplateRequest {
	return &NullableExecuteCommentTemplateRequest{value: val, isSet: true}
}

func (v NullableExecuteCommentTemplateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecuteCommentTemplateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
