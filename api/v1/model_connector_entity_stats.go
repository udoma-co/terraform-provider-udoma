/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the ConnectorEntityStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectorEntityStats{}

// ConnectorEntityStats struct for ConnectorEntityStats
type ConnectorEntityStats struct {
	EntityType *ConnectorEntity `json:"entity_type,omitempty"`
	// The amount of entities of the certain type that were added by the connector.
	Count *int32 `json:"count,omitempty"`
}

// NewConnectorEntityStats instantiates a new ConnectorEntityStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorEntityStats() *ConnectorEntityStats {
	this := ConnectorEntityStats{}
	return &this
}

// NewConnectorEntityStatsWithDefaults instantiates a new ConnectorEntityStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorEntityStatsWithDefaults() *ConnectorEntityStats {
	this := ConnectorEntityStats{}
	return &this
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *ConnectorEntityStats) GetEntityType() ConnectorEntity {
	if o == nil || IsNil(o.EntityType) {
		var ret ConnectorEntity
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorEntityStats) GetEntityTypeOk() (*ConnectorEntity, bool) {
	if o == nil || IsNil(o.EntityType) {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *ConnectorEntityStats) HasEntityType() bool {
	if o != nil && !IsNil(o.EntityType) {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given ConnectorEntity and assigns it to the EntityType field.
func (o *ConnectorEntityStats) SetEntityType(v ConnectorEntity) {
	o.EntityType = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ConnectorEntityStats) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorEntityStats) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ConnectorEntityStats) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ConnectorEntityStats) SetCount(v int32) {
	o.Count = &v
}

func (o ConnectorEntityStats) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectorEntityStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntityType) {
		toSerialize["entity_type"] = o.EntityType
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableConnectorEntityStats struct {
	value *ConnectorEntityStats
	isSet bool
}

func (v NullableConnectorEntityStats) Get() *ConnectorEntityStats {
	return v.value
}

func (v *NullableConnectorEntityStats) Set(val *ConnectorEntityStats) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorEntityStats) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorEntityStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorEntityStats(val *ConnectorEntityStats) *NullableConnectorEntityStats {
	return &NullableConnectorEntityStats{value: val, isSet: true}
}

func (v NullableConnectorEntityStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorEntityStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
