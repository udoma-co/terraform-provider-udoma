/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the MandatoryMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MandatoryMessage{}

// MandatoryMessage struct for MandatoryMessage
type MandatoryMessage struct {
	// The message that should sent to the admin when deleting an appointment
	Message *string `json:"message,omitempty"`
}

// NewMandatoryMessage instantiates a new MandatoryMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMandatoryMessage() *MandatoryMessage {
	this := MandatoryMessage{}
	return &this
}

// NewMandatoryMessageWithDefaults instantiates a new MandatoryMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMandatoryMessageWithDefaults() *MandatoryMessage {
	this := MandatoryMessage{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *MandatoryMessage) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandatoryMessage) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *MandatoryMessage) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *MandatoryMessage) SetMessage(v string) {
	o.Message = &v
}

func (o MandatoryMessage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MandatoryMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableMandatoryMessage struct {
	value *MandatoryMessage
	isSet bool
}

func (v NullableMandatoryMessage) Get() *MandatoryMessage {
	return v.value
}

func (v *NullableMandatoryMessage) Set(val *MandatoryMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableMandatoryMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableMandatoryMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMandatoryMessage(val *MandatoryMessage) *NullableMandatoryMessage {
	return &NullableMandatoryMessage{value: val, isSet: true}
}

func (v NullableMandatoryMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMandatoryMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
