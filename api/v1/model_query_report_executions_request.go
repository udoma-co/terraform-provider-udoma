/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the QueryReportExecutionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryReportExecutionsRequest{}

// QueryReportExecutionsRequest The data required to query report executions
type QueryReportExecutionsRequest struct {
	ReportRef *string                    `json:"report_ref,omitempty"`
	Status    *ReportExecutionStatusEnum `json:"status,omitempty"`
	Limit     *int32                     `json:"limit,omitempty"`
}

// NewQueryReportExecutionsRequest instantiates a new QueryReportExecutionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryReportExecutionsRequest() *QueryReportExecutionsRequest {
	this := QueryReportExecutionsRequest{}
	return &this
}

// NewQueryReportExecutionsRequestWithDefaults instantiates a new QueryReportExecutionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryReportExecutionsRequestWithDefaults() *QueryReportExecutionsRequest {
	this := QueryReportExecutionsRequest{}
	return &this
}

// GetReportRef returns the ReportRef field value if set, zero value otherwise.
func (o *QueryReportExecutionsRequest) GetReportRef() string {
	if o == nil || IsNil(o.ReportRef) {
		var ret string
		return ret
	}
	return *o.ReportRef
}

// GetReportRefOk returns a tuple with the ReportRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryReportExecutionsRequest) GetReportRefOk() (*string, bool) {
	if o == nil || IsNil(o.ReportRef) {
		return nil, false
	}
	return o.ReportRef, true
}

// HasReportRef returns a boolean if a field has been set.
func (o *QueryReportExecutionsRequest) HasReportRef() bool {
	if o != nil && !IsNil(o.ReportRef) {
		return true
	}

	return false
}

// SetReportRef gets a reference to the given string and assigns it to the ReportRef field.
func (o *QueryReportExecutionsRequest) SetReportRef(v string) {
	o.ReportRef = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *QueryReportExecutionsRequest) GetStatus() ReportExecutionStatusEnum {
	if o == nil || IsNil(o.Status) {
		var ret ReportExecutionStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryReportExecutionsRequest) GetStatusOk() (*ReportExecutionStatusEnum, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *QueryReportExecutionsRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ReportExecutionStatusEnum and assigns it to the Status field.
func (o *QueryReportExecutionsRequest) SetStatus(v ReportExecutionStatusEnum) {
	o.Status = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *QueryReportExecutionsRequest) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryReportExecutionsRequest) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *QueryReportExecutionsRequest) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *QueryReportExecutionsRequest) SetLimit(v int32) {
	o.Limit = &v
}

func (o QueryReportExecutionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryReportExecutionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReportRef) {
		toSerialize["report_ref"] = o.ReportRef
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	return toSerialize, nil
}

type NullableQueryReportExecutionsRequest struct {
	value *QueryReportExecutionsRequest
	isSet bool
}

func (v NullableQueryReportExecutionsRequest) Get() *QueryReportExecutionsRequest {
	return v.value
}

func (v *NullableQueryReportExecutionsRequest) Set(val *QueryReportExecutionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryReportExecutionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryReportExecutionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryReportExecutionsRequest(val *QueryReportExecutionsRequest) *NullableQueryReportExecutionsRequest {
	return &NullableQueryReportExecutionsRequest{value: val, isSet: true}
}

func (v NullableQueryReportExecutionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryReportExecutionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
