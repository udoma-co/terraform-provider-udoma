/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CreateConnectorCredentialsRequest Request used to create connector credentials
type CreateConnectorCredentialsRequest struct {
	// id of the connector
	ConnectorId *string `json:"connector_id,omitempty"`
}

// NewCreateConnectorCredentialsRequest instantiates a new CreateConnectorCredentialsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConnectorCredentialsRequest() *CreateConnectorCredentialsRequest {
	this := CreateConnectorCredentialsRequest{}
	return &this
}

// NewCreateConnectorCredentialsRequestWithDefaults instantiates a new CreateConnectorCredentialsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConnectorCredentialsRequestWithDefaults() *CreateConnectorCredentialsRequest {
	this := CreateConnectorCredentialsRequest{}
	return &this
}

// GetConnectorId returns the ConnectorId field value if set, zero value otherwise.
func (o *CreateConnectorCredentialsRequest) GetConnectorId() string {
	if o == nil || o.ConnectorId == nil {
		var ret string
		return ret
	}
	return *o.ConnectorId
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectorCredentialsRequest) GetConnectorIdOk() (*string, bool) {
	if o == nil || o.ConnectorId == nil {
		return nil, false
	}
	return o.ConnectorId, true
}

// HasConnectorId returns a boolean if a field has been set.
func (o *CreateConnectorCredentialsRequest) HasConnectorId() bool {
	if o != nil && o.ConnectorId != nil {
		return true
	}

	return false
}

// SetConnectorId gets a reference to the given string and assigns it to the ConnectorId field.
func (o *CreateConnectorCredentialsRequest) SetConnectorId(v string) {
	o.ConnectorId = &v
}

func (o CreateConnectorCredentialsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectorId != nil {
		toSerialize["connector_id"] = o.ConnectorId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateConnectorCredentialsRequest struct {
	value *CreateConnectorCredentialsRequest
	isSet bool
}

func (v NullableCreateConnectorCredentialsRequest) Get() *CreateConnectorCredentialsRequest {
	return v.value
}

func (v *NullableCreateConnectorCredentialsRequest) Set(val *CreateConnectorCredentialsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConnectorCredentialsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConnectorCredentialsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConnectorCredentialsRequest(val *CreateConnectorCredentialsRequest) *NullableCreateConnectorCredentialsRequest {
	return &NullableCreateConnectorCredentialsRequest{value: val, isSet: true}
}

func (v NullableCreateConnectorCredentialsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConnectorCredentialsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
