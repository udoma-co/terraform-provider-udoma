/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// InviteDataCollectionEndpointRequest request used to send an exsting data collection endpoint to a tenant
type InviteDataCollectionEndpointRequest struct {
	Tenant *ContactData `json:"tenant,omitempty"`
	// a custom message that is included in the email to the tenant
	Message *string `json:"message,omitempty"`
}

// NewInviteDataCollectionEndpointRequest instantiates a new InviteDataCollectionEndpointRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInviteDataCollectionEndpointRequest() *InviteDataCollectionEndpointRequest {
	this := InviteDataCollectionEndpointRequest{}
	return &this
}

// NewInviteDataCollectionEndpointRequestWithDefaults instantiates a new InviteDataCollectionEndpointRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInviteDataCollectionEndpointRequestWithDefaults() *InviteDataCollectionEndpointRequest {
	this := InviteDataCollectionEndpointRequest{}
	return &this
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *InviteDataCollectionEndpointRequest) GetTenant() ContactData {
	if o == nil || o.Tenant == nil {
		var ret ContactData
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteDataCollectionEndpointRequest) GetTenantOk() (*ContactData, bool) {
	if o == nil || o.Tenant == nil {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *InviteDataCollectionEndpointRequest) HasTenant() bool {
	if o != nil && o.Tenant != nil {
		return true
	}

	return false
}

// SetTenant gets a reference to the given ContactData and assigns it to the Tenant field.
func (o *InviteDataCollectionEndpointRequest) SetTenant(v ContactData) {
	o.Tenant = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *InviteDataCollectionEndpointRequest) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteDataCollectionEndpointRequest) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *InviteDataCollectionEndpointRequest) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *InviteDataCollectionEndpointRequest) SetMessage(v string) {
	o.Message = &v
}

func (o InviteDataCollectionEndpointRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tenant != nil {
		toSerialize["tenant"] = o.Tenant
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableInviteDataCollectionEndpointRequest struct {
	value *InviteDataCollectionEndpointRequest
	isSet bool
}

func (v NullableInviteDataCollectionEndpointRequest) Get() *InviteDataCollectionEndpointRequest {
	return v.value
}

func (v *NullableInviteDataCollectionEndpointRequest) Set(val *InviteDataCollectionEndpointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteDataCollectionEndpointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteDataCollectionEndpointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteDataCollectionEndpointRequest(val *InviteDataCollectionEndpointRequest) *NullableInviteDataCollectionEndpointRequest {
	return &NullableInviteDataCollectionEndpointRequest{value: val, isSet: true}
}

func (v NullableInviteDataCollectionEndpointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteDataCollectionEndpointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
