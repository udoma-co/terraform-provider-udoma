/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateOrUpdateAccountDimensionValueRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateAccountDimensionValueRequest{}

// CreateOrUpdateAccountDimensionValueRequest The data required to create a new value of a dimension
type CreateOrUpdateAccountDimensionValueRequest struct {
	// Optional ID for the parent dimension. If set, this value is only available when the parent dimension has been set to the given ID.
	ParentId *string `json:"parent_id,omitempty"`
	// The unique ID this this value (typically the ID of the referenced entity that is mapped, e.g. property ID). This value must be unique for the given dimension, regardless of the parent dimension value.
	Id string `json:"id"`
	// The numeric value under the given dimension. This value is unique for the given dimension. If a parent dimension reference is set, then the value is only unique for the parent dimension value and may be repeated for other parent dimension values.
	Value *int32 `json:"value,omitempty"`
}

type _CreateOrUpdateAccountDimensionValueRequest CreateOrUpdateAccountDimensionValueRequest

// NewCreateOrUpdateAccountDimensionValueRequest instantiates a new CreateOrUpdateAccountDimensionValueRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateAccountDimensionValueRequest(id string) *CreateOrUpdateAccountDimensionValueRequest {
	this := CreateOrUpdateAccountDimensionValueRequest{}
	this.Id = id
	return &this
}

// NewCreateOrUpdateAccountDimensionValueRequestWithDefaults instantiates a new CreateOrUpdateAccountDimensionValueRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateAccountDimensionValueRequestWithDefaults() *CreateOrUpdateAccountDimensionValueRequest {
	this := CreateOrUpdateAccountDimensionValueRequest{}
	return &this
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *CreateOrUpdateAccountDimensionValueRequest) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAccountDimensionValueRequest) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *CreateOrUpdateAccountDimensionValueRequest) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *CreateOrUpdateAccountDimensionValueRequest) SetParentId(v string) {
	o.ParentId = &v
}

// GetId returns the Id field value
func (o *CreateOrUpdateAccountDimensionValueRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAccountDimensionValueRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateOrUpdateAccountDimensionValueRequest) SetId(v string) {
	o.Id = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CreateOrUpdateAccountDimensionValueRequest) GetValue() int32 {
	if o == nil || IsNil(o.Value) {
		var ret int32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAccountDimensionValueRequest) GetValueOk() (*int32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CreateOrUpdateAccountDimensionValueRequest) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given int32 and assigns it to the Value field.
func (o *CreateOrUpdateAccountDimensionValueRequest) SetValue(v int32) {
	o.Value = &v
}

func (o CreateOrUpdateAccountDimensionValueRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateAccountDimensionValueRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

func (o *CreateOrUpdateAccountDimensionValueRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrUpdateAccountDimensionValueRequest := _CreateOrUpdateAccountDimensionValueRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrUpdateAccountDimensionValueRequest)

	if err != nil {
		return err
	}

	*o = CreateOrUpdateAccountDimensionValueRequest(varCreateOrUpdateAccountDimensionValueRequest)

	return err
}

type NullableCreateOrUpdateAccountDimensionValueRequest struct {
	value *CreateOrUpdateAccountDimensionValueRequest
	isSet bool
}

func (v NullableCreateOrUpdateAccountDimensionValueRequest) Get() *CreateOrUpdateAccountDimensionValueRequest {
	return v.value
}

func (v *NullableCreateOrUpdateAccountDimensionValueRequest) Set(val *CreateOrUpdateAccountDimensionValueRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateAccountDimensionValueRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateAccountDimensionValueRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateAccountDimensionValueRequest(val *CreateOrUpdateAccountDimensionValueRequest) *NullableCreateOrUpdateAccountDimensionValueRequest {
	return &NullableCreateOrUpdateAccountDimensionValueRequest{value: val, isSet: true}
}

func (v NullableCreateOrUpdateAccountDimensionValueRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateAccountDimensionValueRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
