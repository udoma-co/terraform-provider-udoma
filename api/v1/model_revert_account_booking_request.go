/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the RevertAccountBookingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevertAccountBookingRequest{}

// RevertAccountBookingRequest The data required to revert a previously created booking of a financial transaction
type RevertAccountBookingRequest struct {
	// The timestamp of the reverting booking
	Date *int64 `json:"date,omitempty"`
	// The reason for reverting the booking
	Reason *string `json:"reason,omitempty"`
}

// NewRevertAccountBookingRequest instantiates a new RevertAccountBookingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevertAccountBookingRequest() *RevertAccountBookingRequest {
	this := RevertAccountBookingRequest{}
	return &this
}

// NewRevertAccountBookingRequestWithDefaults instantiates a new RevertAccountBookingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevertAccountBookingRequestWithDefaults() *RevertAccountBookingRequest {
	this := RevertAccountBookingRequest{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *RevertAccountBookingRequest) GetDate() int64 {
	if o == nil || IsNil(o.Date) {
		var ret int64
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevertAccountBookingRequest) GetDateOk() (*int64, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *RevertAccountBookingRequest) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given int64 and assigns it to the Date field.
func (o *RevertAccountBookingRequest) SetDate(v int64) {
	o.Date = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *RevertAccountBookingRequest) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevertAccountBookingRequest) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *RevertAccountBookingRequest) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *RevertAccountBookingRequest) SetReason(v string) {
	o.Reason = &v
}

func (o RevertAccountBookingRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevertAccountBookingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullableRevertAccountBookingRequest struct {
	value *RevertAccountBookingRequest
	isSet bool
}

func (v NullableRevertAccountBookingRequest) Get() *RevertAccountBookingRequest {
	return v.value
}

func (v *NullableRevertAccountBookingRequest) Set(val *RevertAccountBookingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRevertAccountBookingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRevertAccountBookingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevertAccountBookingRequest(val *RevertAccountBookingRequest) *NullableRevertAccountBookingRequest {
	return &NullableRevertAccountBookingRequest{value: val, isSet: true}
}

func (v NullableRevertAccountBookingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevertAccountBookingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
