/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DocumentGeneration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentGeneration{}

// DocumentGeneration The status and content of a document generation
type DocumentGeneration struct {
	// Unique and immutable ID attribute of the entity that is generated when  the instance is created. The ID is unique within the system accross all accounts and it can be used to reference the entity in other entities  or to retrieve it from the backend.
	Id string `json:"id"`
	// The date and time the entity was created
	CreatedAt int64 `json:"created_at"`
	// The date and time the entity was last updated
	UpdatedAt int64 `json:"updated_at"`
	// True if the document generation has been archived
	Archived *bool `json:"archived,omitempty"`
	// The ID of the template used to generate the document
	TemplateRef string `json:"template_ref"`
	// The name of the document, as computed using the name expression of the template
	Name string `json:"name"`
	// The data from the template custom form, serialised as JSON
	InputData *string `json:"input_data,omitempty"`
	// Optional EditorJS data used to generate the document (JSON of the data object)
	Data *string `json:"data,omitempty"`
	// The reference to the generated document
	PdfUrl *string `json:"pdf_url,omitempty"`
	// The date and time the document was generated
	PdfGenerationDate *int64 `json:"pdf_generation_date,omitempty"`
	// True if the document was sent to the signing service
	EsignatureTriggered *bool `json:"esignature_triggered,omitempty"`
}

type _DocumentGeneration DocumentGeneration

// NewDocumentGeneration instantiates a new DocumentGeneration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentGeneration(id string, createdAt int64, updatedAt int64, templateRef string, name string) *DocumentGeneration {
	this := DocumentGeneration{}
	this.Id = id
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.TemplateRef = templateRef
	this.Name = name
	return &this
}

// NewDocumentGenerationWithDefaults instantiates a new DocumentGeneration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentGenerationWithDefaults() *DocumentGeneration {
	this := DocumentGeneration{}
	return &this
}

// GetId returns the Id field value
func (o *DocumentGeneration) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DocumentGeneration) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DocumentGeneration) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DocumentGeneration) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *DocumentGeneration) GetUpdatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *DocumentGeneration) SetUpdatedAt(v int64) {
	o.UpdatedAt = v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *DocumentGeneration) GetArchived() bool {
	if o == nil || IsNil(o.Archived) {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.Archived) {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *DocumentGeneration) HasArchived() bool {
	if o != nil && !IsNil(o.Archived) {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *DocumentGeneration) SetArchived(v bool) {
	o.Archived = &v
}

// GetTemplateRef returns the TemplateRef field value
func (o *DocumentGeneration) GetTemplateRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemplateRef
}

// GetTemplateRefOk returns a tuple with the TemplateRef field value
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetTemplateRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateRef, true
}

// SetTemplateRef sets field value
func (o *DocumentGeneration) SetTemplateRef(v string) {
	o.TemplateRef = v
}

// GetName returns the Name field value
func (o *DocumentGeneration) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DocumentGeneration) SetName(v string) {
	o.Name = v
}

// GetInputData returns the InputData field value if set, zero value otherwise.
func (o *DocumentGeneration) GetInputData() string {
	if o == nil || IsNil(o.InputData) {
		var ret string
		return ret
	}
	return *o.InputData
}

// GetInputDataOk returns a tuple with the InputData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetInputDataOk() (*string, bool) {
	if o == nil || IsNil(o.InputData) {
		return nil, false
	}
	return o.InputData, true
}

// HasInputData returns a boolean if a field has been set.
func (o *DocumentGeneration) HasInputData() bool {
	if o != nil && !IsNil(o.InputData) {
		return true
	}

	return false
}

// SetInputData gets a reference to the given string and assigns it to the InputData field.
func (o *DocumentGeneration) SetInputData(v string) {
	o.InputData = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *DocumentGeneration) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *DocumentGeneration) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *DocumentGeneration) SetData(v string) {
	o.Data = &v
}

// GetPdfUrl returns the PdfUrl field value if set, zero value otherwise.
func (o *DocumentGeneration) GetPdfUrl() string {
	if o == nil || IsNil(o.PdfUrl) {
		var ret string
		return ret
	}
	return *o.PdfUrl
}

// GetPdfUrlOk returns a tuple with the PdfUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetPdfUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PdfUrl) {
		return nil, false
	}
	return o.PdfUrl, true
}

// HasPdfUrl returns a boolean if a field has been set.
func (o *DocumentGeneration) HasPdfUrl() bool {
	if o != nil && !IsNil(o.PdfUrl) {
		return true
	}

	return false
}

// SetPdfUrl gets a reference to the given string and assigns it to the PdfUrl field.
func (o *DocumentGeneration) SetPdfUrl(v string) {
	o.PdfUrl = &v
}

// GetPdfGenerationDate returns the PdfGenerationDate field value if set, zero value otherwise.
func (o *DocumentGeneration) GetPdfGenerationDate() int64 {
	if o == nil || IsNil(o.PdfGenerationDate) {
		var ret int64
		return ret
	}
	return *o.PdfGenerationDate
}

// GetPdfGenerationDateOk returns a tuple with the PdfGenerationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetPdfGenerationDateOk() (*int64, bool) {
	if o == nil || IsNil(o.PdfGenerationDate) {
		return nil, false
	}
	return o.PdfGenerationDate, true
}

// HasPdfGenerationDate returns a boolean if a field has been set.
func (o *DocumentGeneration) HasPdfGenerationDate() bool {
	if o != nil && !IsNil(o.PdfGenerationDate) {
		return true
	}

	return false
}

// SetPdfGenerationDate gets a reference to the given int64 and assigns it to the PdfGenerationDate field.
func (o *DocumentGeneration) SetPdfGenerationDate(v int64) {
	o.PdfGenerationDate = &v
}

// GetEsignatureTriggered returns the EsignatureTriggered field value if set, zero value otherwise.
func (o *DocumentGeneration) GetEsignatureTriggered() bool {
	if o == nil || IsNil(o.EsignatureTriggered) {
		var ret bool
		return ret
	}
	return *o.EsignatureTriggered
}

// GetEsignatureTriggeredOk returns a tuple with the EsignatureTriggered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetEsignatureTriggeredOk() (*bool, bool) {
	if o == nil || IsNil(o.EsignatureTriggered) {
		return nil, false
	}
	return o.EsignatureTriggered, true
}

// HasEsignatureTriggered returns a boolean if a field has been set.
func (o *DocumentGeneration) HasEsignatureTriggered() bool {
	if o != nil && !IsNil(o.EsignatureTriggered) {
		return true
	}

	return false
}

// SetEsignatureTriggered gets a reference to the given bool and assigns it to the EsignatureTriggered field.
func (o *DocumentGeneration) SetEsignatureTriggered(v bool) {
	o.EsignatureTriggered = &v
}

func (o DocumentGeneration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentGeneration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.Archived) {
		toSerialize["archived"] = o.Archived
	}
	toSerialize["template_ref"] = o.TemplateRef
	toSerialize["name"] = o.Name
	if !IsNil(o.InputData) {
		toSerialize["input_data"] = o.InputData
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.PdfUrl) {
		toSerialize["pdf_url"] = o.PdfUrl
	}
	if !IsNil(o.PdfGenerationDate) {
		toSerialize["pdf_generation_date"] = o.PdfGenerationDate
	}
	if !IsNil(o.EsignatureTriggered) {
		toSerialize["esignature_triggered"] = o.EsignatureTriggered
	}
	return toSerialize, nil
}

func (o *DocumentGeneration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"updated_at",
		"template_ref",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDocumentGeneration := _DocumentGeneration{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDocumentGeneration)

	if err != nil {
		return err
	}

	*o = DocumentGeneration(varDocumentGeneration)

	return err
}

type NullableDocumentGeneration struct {
	value *DocumentGeneration
	isSet bool
}

func (v NullableDocumentGeneration) Get() *DocumentGeneration {
	return v.value
}

func (v *NullableDocumentGeneration) Set(val *DocumentGeneration) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentGeneration) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentGeneration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentGeneration(val *DocumentGeneration) *NullableDocumentGeneration {
	return &NullableDocumentGeneration{value: val, isSet: true}
}

func (v NullableDocumentGeneration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentGeneration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
