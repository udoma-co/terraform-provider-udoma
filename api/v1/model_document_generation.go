/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// DocumentGeneration The status and content of a document generation
type DocumentGeneration struct {
	// The unique ID of the document generation
	Id *string `json:"id,omitempty"`
	// The date the document generation was created
	CreatedAt *int64 `json:"created_at,omitempty"`
	// The date the document generation was last updated
	UpdatedAt *int64 `json:"updated_at,omitempty"`
	// True if the document generation has been archived
	Archived *bool `json:"archived,omitempty"`
	// The ID of the template used to generate the document
	Template *string `json:"template,omitempty"`
	// The name of the document, as computed using the name expression of the template
	Name *string `json:"name,omitempty"`
	// The data from the template custom form, serialised as JSON
	InputData *string `json:"input_data,omitempty"`
	// Optional EditorJS data used to generate the document (JSON of the data object)
	Data *string `json:"data,omitempty"`
	// The reference to the generated document
	PdfUrl *string `json:"pdf_url,omitempty"`
	// The date and time the document was generated
	PdfGenerationDate *int64 `json:"pdf_generation_date,omitempty"`
	// True if the document was sent to the signing service
	EsignatureTriggered *bool `json:"esignature_triggered,omitempty"`
}

// NewDocumentGeneration instantiates a new DocumentGeneration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentGeneration() *DocumentGeneration {
	this := DocumentGeneration{}
	return &this
}

// NewDocumentGenerationWithDefaults instantiates a new DocumentGeneration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentGenerationWithDefaults() *DocumentGeneration {
	this := DocumentGeneration{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DocumentGeneration) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DocumentGeneration) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DocumentGeneration) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DocumentGeneration) GetCreatedAt() int64 {
	if o == nil || o.CreatedAt == nil {
		var ret int64
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetCreatedAtOk() (*int64, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DocumentGeneration) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int64 and assigns it to the CreatedAt field.
func (o *DocumentGeneration) SetCreatedAt(v int64) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *DocumentGeneration) GetUpdatedAt() int64 {
	if o == nil || o.UpdatedAt == nil {
		var ret int64
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetUpdatedAtOk() (*int64, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *DocumentGeneration) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int64 and assigns it to the UpdatedAt field.
func (o *DocumentGeneration) SetUpdatedAt(v int64) {
	o.UpdatedAt = &v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *DocumentGeneration) GetArchived() bool {
	if o == nil || o.Archived == nil {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetArchivedOk() (*bool, bool) {
	if o == nil || o.Archived == nil {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *DocumentGeneration) HasArchived() bool {
	if o != nil && o.Archived != nil {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *DocumentGeneration) SetArchived(v bool) {
	o.Archived = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *DocumentGeneration) GetTemplate() string {
	if o == nil || o.Template == nil {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetTemplateOk() (*string, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *DocumentGeneration) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *DocumentGeneration) SetTemplate(v string) {
	o.Template = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DocumentGeneration) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DocumentGeneration) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DocumentGeneration) SetName(v string) {
	o.Name = &v
}

// GetInputData returns the InputData field value if set, zero value otherwise.
func (o *DocumentGeneration) GetInputData() string {
	if o == nil || o.InputData == nil {
		var ret string
		return ret
	}
	return *o.InputData
}

// GetInputDataOk returns a tuple with the InputData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetInputDataOk() (*string, bool) {
	if o == nil || o.InputData == nil {
		return nil, false
	}
	return o.InputData, true
}

// HasInputData returns a boolean if a field has been set.
func (o *DocumentGeneration) HasInputData() bool {
	if o != nil && o.InputData != nil {
		return true
	}

	return false
}

// SetInputData gets a reference to the given string and assigns it to the InputData field.
func (o *DocumentGeneration) SetInputData(v string) {
	o.InputData = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *DocumentGeneration) GetData() string {
	if o == nil || o.Data == nil {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetDataOk() (*string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *DocumentGeneration) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *DocumentGeneration) SetData(v string) {
	o.Data = &v
}

// GetPdfUrl returns the PdfUrl field value if set, zero value otherwise.
func (o *DocumentGeneration) GetPdfUrl() string {
	if o == nil || o.PdfUrl == nil {
		var ret string
		return ret
	}
	return *o.PdfUrl
}

// GetPdfUrlOk returns a tuple with the PdfUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetPdfUrlOk() (*string, bool) {
	if o == nil || o.PdfUrl == nil {
		return nil, false
	}
	return o.PdfUrl, true
}

// HasPdfUrl returns a boolean if a field has been set.
func (o *DocumentGeneration) HasPdfUrl() bool {
	if o != nil && o.PdfUrl != nil {
		return true
	}

	return false
}

// SetPdfUrl gets a reference to the given string and assigns it to the PdfUrl field.
func (o *DocumentGeneration) SetPdfUrl(v string) {
	o.PdfUrl = &v
}

// GetPdfGenerationDate returns the PdfGenerationDate field value if set, zero value otherwise.
func (o *DocumentGeneration) GetPdfGenerationDate() int64 {
	if o == nil || o.PdfGenerationDate == nil {
		var ret int64
		return ret
	}
	return *o.PdfGenerationDate
}

// GetPdfGenerationDateOk returns a tuple with the PdfGenerationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetPdfGenerationDateOk() (*int64, bool) {
	if o == nil || o.PdfGenerationDate == nil {
		return nil, false
	}
	return o.PdfGenerationDate, true
}

// HasPdfGenerationDate returns a boolean if a field has been set.
func (o *DocumentGeneration) HasPdfGenerationDate() bool {
	if o != nil && o.PdfGenerationDate != nil {
		return true
	}

	return false
}

// SetPdfGenerationDate gets a reference to the given int64 and assigns it to the PdfGenerationDate field.
func (o *DocumentGeneration) SetPdfGenerationDate(v int64) {
	o.PdfGenerationDate = &v
}

// GetEsignatureTriggered returns the EsignatureTriggered field value if set, zero value otherwise.
func (o *DocumentGeneration) GetEsignatureTriggered() bool {
	if o == nil || o.EsignatureTriggered == nil {
		var ret bool
		return ret
	}
	return *o.EsignatureTriggered
}

// GetEsignatureTriggeredOk returns a tuple with the EsignatureTriggered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentGeneration) GetEsignatureTriggeredOk() (*bool, bool) {
	if o == nil || o.EsignatureTriggered == nil {
		return nil, false
	}
	return o.EsignatureTriggered, true
}

// HasEsignatureTriggered returns a boolean if a field has been set.
func (o *DocumentGeneration) HasEsignatureTriggered() bool {
	if o != nil && o.EsignatureTriggered != nil {
		return true
	}

	return false
}

// SetEsignatureTriggered gets a reference to the given bool and assigns it to the EsignatureTriggered field.
func (o *DocumentGeneration) SetEsignatureTriggered(v bool) {
	o.EsignatureTriggered = &v
}

func (o DocumentGeneration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Archived != nil {
		toSerialize["archived"] = o.Archived
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.InputData != nil {
		toSerialize["input_data"] = o.InputData
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.PdfUrl != nil {
		toSerialize["pdf_url"] = o.PdfUrl
	}
	if o.PdfGenerationDate != nil {
		toSerialize["pdf_generation_date"] = o.PdfGenerationDate
	}
	if o.EsignatureTriggered != nil {
		toSerialize["esignature_triggered"] = o.EsignatureTriggered
	}
	return json.Marshal(toSerialize)
}

type NullableDocumentGeneration struct {
	value *DocumentGeneration
	isSet bool
}

func (v NullableDocumentGeneration) Get() *DocumentGeneration {
	return v.value
}

func (v *NullableDocumentGeneration) Set(val *DocumentGeneration) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentGeneration) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentGeneration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentGeneration(val *DocumentGeneration) *NullableDocumentGeneration {
	return &NullableDocumentGeneration{value: val, isSet: true}
}

func (v NullableDocumentGeneration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentGeneration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
