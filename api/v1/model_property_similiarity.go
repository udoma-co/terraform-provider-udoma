/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the PropertySimiliarity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PropertySimiliarity{}

// PropertySimiliarity struct for PropertySimiliarity
type PropertySimiliarity struct {
	Property *Property `json:"property,omitempty"`
	// A metric indicating the similarity of the property to a given address
	Similarity *int64 `json:"similarity,omitempty"`
}

// NewPropertySimiliarity instantiates a new PropertySimiliarity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropertySimiliarity() *PropertySimiliarity {
	this := PropertySimiliarity{}
	return &this
}

// NewPropertySimiliarityWithDefaults instantiates a new PropertySimiliarity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertySimiliarityWithDefaults() *PropertySimiliarity {
	this := PropertySimiliarity{}
	return &this
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *PropertySimiliarity) GetProperty() Property {
	if o == nil || IsNil(o.Property) {
		var ret Property
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertySimiliarity) GetPropertyOk() (*Property, bool) {
	if o == nil || IsNil(o.Property) {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *PropertySimiliarity) HasProperty() bool {
	if o != nil && !IsNil(o.Property) {
		return true
	}

	return false
}

// SetProperty gets a reference to the given Property and assigns it to the Property field.
func (o *PropertySimiliarity) SetProperty(v Property) {
	o.Property = &v
}

// GetSimilarity returns the Similarity field value if set, zero value otherwise.
func (o *PropertySimiliarity) GetSimilarity() int64 {
	if o == nil || IsNil(o.Similarity) {
		var ret int64
		return ret
	}
	return *o.Similarity
}

// GetSimilarityOk returns a tuple with the Similarity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertySimiliarity) GetSimilarityOk() (*int64, bool) {
	if o == nil || IsNil(o.Similarity) {
		return nil, false
	}
	return o.Similarity, true
}

// HasSimilarity returns a boolean if a field has been set.
func (o *PropertySimiliarity) HasSimilarity() bool {
	if o != nil && !IsNil(o.Similarity) {
		return true
	}

	return false
}

// SetSimilarity gets a reference to the given int64 and assigns it to the Similarity field.
func (o *PropertySimiliarity) SetSimilarity(v int64) {
	o.Similarity = &v
}

func (o PropertySimiliarity) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PropertySimiliarity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Property) {
		toSerialize["property"] = o.Property
	}
	if !IsNil(o.Similarity) {
		toSerialize["similarity"] = o.Similarity
	}
	return toSerialize, nil
}

type NullablePropertySimiliarity struct {
	value *PropertySimiliarity
	isSet bool
}

func (v NullablePropertySimiliarity) Get() *PropertySimiliarity {
	return v.value
}

func (v *NullablePropertySimiliarity) Set(val *PropertySimiliarity) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertySimiliarity) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertySimiliarity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertySimiliarity(val *PropertySimiliarity) *NullablePropertySimiliarity {
	return &NullablePropertySimiliarity{value: val, isSet: true}
}

func (v NullablePropertySimiliarity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertySimiliarity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
