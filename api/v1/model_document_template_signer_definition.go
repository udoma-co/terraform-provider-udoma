/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DocumentTemplateSignerDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentTemplateSignerDefinition{}

// DocumentTemplateSignerDefinition Indicates where to get data to generate info of a signer
type DocumentTemplateSignerDefinition struct {
	ContactData NullableContactData `json:"contact_data"`
	// JS expression to compute the contact data of the signer
	ContactDataExpression *string `json:"contact_data_expression,omitempty"`
	// If set to true, the signer definition will be repeated for each value of the name and contract data expressions.
	Repeated *bool `json:"repeated,omitempty"`
}

type _DocumentTemplateSignerDefinition DocumentTemplateSignerDefinition

// NewDocumentTemplateSignerDefinition instantiates a new DocumentTemplateSignerDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentTemplateSignerDefinition(contactData NullableContactData) *DocumentTemplateSignerDefinition {
	this := DocumentTemplateSignerDefinition{}
	this.ContactData = contactData
	return &this
}

// NewDocumentTemplateSignerDefinitionWithDefaults instantiates a new DocumentTemplateSignerDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentTemplateSignerDefinitionWithDefaults() *DocumentTemplateSignerDefinition {
	this := DocumentTemplateSignerDefinition{}
	return &this
}

// GetContactData returns the ContactData field value
// If the value is explicit nil, the zero value for ContactData will be returned
func (o *DocumentTemplateSignerDefinition) GetContactData() ContactData {
	if o == nil || o.ContactData.Get() == nil {
		var ret ContactData
		return ret
	}

	return *o.ContactData.Get()
}

// GetContactDataOk returns a tuple with the ContactData field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocumentTemplateSignerDefinition) GetContactDataOk() (*ContactData, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContactData.Get(), o.ContactData.IsSet()
}

// SetContactData sets field value
func (o *DocumentTemplateSignerDefinition) SetContactData(v ContactData) {
	o.ContactData.Set(&v)
}

// GetContactDataExpression returns the ContactDataExpression field value if set, zero value otherwise.
func (o *DocumentTemplateSignerDefinition) GetContactDataExpression() string {
	if o == nil || IsNil(o.ContactDataExpression) {
		var ret string
		return ret
	}
	return *o.ContactDataExpression
}

// GetContactDataExpressionOk returns a tuple with the ContactDataExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentTemplateSignerDefinition) GetContactDataExpressionOk() (*string, bool) {
	if o == nil || IsNil(o.ContactDataExpression) {
		return nil, false
	}
	return o.ContactDataExpression, true
}

// HasContactDataExpression returns a boolean if a field has been set.
func (o *DocumentTemplateSignerDefinition) HasContactDataExpression() bool {
	if o != nil && !IsNil(o.ContactDataExpression) {
		return true
	}

	return false
}

// SetContactDataExpression gets a reference to the given string and assigns it to the ContactDataExpression field.
func (o *DocumentTemplateSignerDefinition) SetContactDataExpression(v string) {
	o.ContactDataExpression = &v
}

// GetRepeated returns the Repeated field value if set, zero value otherwise.
func (o *DocumentTemplateSignerDefinition) GetRepeated() bool {
	if o == nil || IsNil(o.Repeated) {
		var ret bool
		return ret
	}
	return *o.Repeated
}

// GetRepeatedOk returns a tuple with the Repeated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentTemplateSignerDefinition) GetRepeatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Repeated) {
		return nil, false
	}
	return o.Repeated, true
}

// HasRepeated returns a boolean if a field has been set.
func (o *DocumentTemplateSignerDefinition) HasRepeated() bool {
	if o != nil && !IsNil(o.Repeated) {
		return true
	}

	return false
}

// SetRepeated gets a reference to the given bool and assigns it to the Repeated field.
func (o *DocumentTemplateSignerDefinition) SetRepeated(v bool) {
	o.Repeated = &v
}

func (o DocumentTemplateSignerDefinition) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentTemplateSignerDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contact_data"] = o.ContactData.Get()
	if !IsNil(o.ContactDataExpression) {
		toSerialize["contact_data_expression"] = o.ContactDataExpression
	}
	if !IsNil(o.Repeated) {
		toSerialize["repeated"] = o.Repeated
	}
	return toSerialize, nil
}

func (o *DocumentTemplateSignerDefinition) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contact_data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDocumentTemplateSignerDefinition := _DocumentTemplateSignerDefinition{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDocumentTemplateSignerDefinition)

	if err != nil {
		return err
	}

	*o = DocumentTemplateSignerDefinition(varDocumentTemplateSignerDefinition)

	return err
}

type NullableDocumentTemplateSignerDefinition struct {
	value *DocumentTemplateSignerDefinition
	isSet bool
}

func (v NullableDocumentTemplateSignerDefinition) Get() *DocumentTemplateSignerDefinition {
	return v.value
}

func (v *NullableDocumentTemplateSignerDefinition) Set(val *DocumentTemplateSignerDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentTemplateSignerDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentTemplateSignerDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentTemplateSignerDefinition(val *DocumentTemplateSignerDefinition) *NullableDocumentTemplateSignerDefinition {
	return &NullableDocumentTemplateSignerDefinition{value: val, isSet: true}
}

func (v NullableDocumentTemplateSignerDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentTemplateSignerDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
