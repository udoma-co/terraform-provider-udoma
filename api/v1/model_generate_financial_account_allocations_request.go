/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the GenerateFinancialAccountAllocationsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateFinancialAccountAllocationsRequest{}

// GenerateFinancialAccountAllocationsRequest When generating allocations using financial account script we need provide booking information.
type GenerateFinancialAccountAllocationsRequest struct {
	// The total amount of the booking.
	Amount *float64 `json:"amount,omitempty"`
}

// NewGenerateFinancialAccountAllocationsRequest instantiates a new GenerateFinancialAccountAllocationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateFinancialAccountAllocationsRequest() *GenerateFinancialAccountAllocationsRequest {
	this := GenerateFinancialAccountAllocationsRequest{}
	return &this
}

// NewGenerateFinancialAccountAllocationsRequestWithDefaults instantiates a new GenerateFinancialAccountAllocationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateFinancialAccountAllocationsRequestWithDefaults() *GenerateFinancialAccountAllocationsRequest {
	this := GenerateFinancialAccountAllocationsRequest{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GenerateFinancialAccountAllocationsRequest) GetAmount() float64 {
	if o == nil || IsNil(o.Amount) {
		var ret float64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateFinancialAccountAllocationsRequest) GetAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GenerateFinancialAccountAllocationsRequest) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float64 and assigns it to the Amount field.
func (o *GenerateFinancialAccountAllocationsRequest) SetAmount(v float64) {
	o.Amount = &v
}

func (o GenerateFinancialAccountAllocationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateFinancialAccountAllocationsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	return toSerialize, nil
}

type NullableGenerateFinancialAccountAllocationsRequest struct {
	value *GenerateFinancialAccountAllocationsRequest
	isSet bool
}

func (v NullableGenerateFinancialAccountAllocationsRequest) Get() *GenerateFinancialAccountAllocationsRequest {
	return v.value
}

func (v *NullableGenerateFinancialAccountAllocationsRequest) Set(val *GenerateFinancialAccountAllocationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateFinancialAccountAllocationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateFinancialAccountAllocationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateFinancialAccountAllocationsRequest(val *GenerateFinancialAccountAllocationsRequest) *NullableGenerateFinancialAccountAllocationsRequest {
	return &NullableGenerateFinancialAccountAllocationsRequest{value: val, isSet: true}
}

func (v NullableGenerateFinancialAccountAllocationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateFinancialAccountAllocationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
