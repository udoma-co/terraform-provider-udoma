/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the QueryPropertyOwnersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryPropertyOwnersResponse{}

// QueryPropertyOwnersResponse A list of all property owners that are requested by the user
type QueryPropertyOwnersResponse struct {
	// The maximum number of entities to return from the query
	Limit *int32 `json:"limit,omitempty"`
	// The number of entities to skip before returning the result
	Offset *int32 `json:"offset,omitempty"`
	// list of property owners that match the query request
	PropertyOwners []PropertyOwner `json:"property_owners,omitempty"`
	// total number of owners available
	TotalCount *int64 `json:"total_count,omitempty"`
}

// NewQueryPropertyOwnersResponse instantiates a new QueryPropertyOwnersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryPropertyOwnersResponse() *QueryPropertyOwnersResponse {
	this := QueryPropertyOwnersResponse{}
	return &this
}

// NewQueryPropertyOwnersResponseWithDefaults instantiates a new QueryPropertyOwnersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryPropertyOwnersResponseWithDefaults() *QueryPropertyOwnersResponse {
	this := QueryPropertyOwnersResponse{}
	return &this
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *QueryPropertyOwnersResponse) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPropertyOwnersResponse) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *QueryPropertyOwnersResponse) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *QueryPropertyOwnersResponse) SetLimit(v int32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *QueryPropertyOwnersResponse) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPropertyOwnersResponse) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *QueryPropertyOwnersResponse) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *QueryPropertyOwnersResponse) SetOffset(v int32) {
	o.Offset = &v
}

// GetPropertyOwners returns the PropertyOwners field value if set, zero value otherwise.
func (o *QueryPropertyOwnersResponse) GetPropertyOwners() []PropertyOwner {
	if o == nil || IsNil(o.PropertyOwners) {
		var ret []PropertyOwner
		return ret
	}
	return o.PropertyOwners
}

// GetPropertyOwnersOk returns a tuple with the PropertyOwners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPropertyOwnersResponse) GetPropertyOwnersOk() ([]PropertyOwner, bool) {
	if o == nil || IsNil(o.PropertyOwners) {
		return nil, false
	}
	return o.PropertyOwners, true
}

// HasPropertyOwners returns a boolean if a field has been set.
func (o *QueryPropertyOwnersResponse) HasPropertyOwners() bool {
	if o != nil && !IsNil(o.PropertyOwners) {
		return true
	}

	return false
}

// SetPropertyOwners gets a reference to the given []PropertyOwner and assigns it to the PropertyOwners field.
func (o *QueryPropertyOwnersResponse) SetPropertyOwners(v []PropertyOwner) {
	o.PropertyOwners = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *QueryPropertyOwnersResponse) GetTotalCount() int64 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryPropertyOwnersResponse) GetTotalCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *QueryPropertyOwnersResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *QueryPropertyOwnersResponse) SetTotalCount(v int64) {
	o.TotalCount = &v
}

func (o QueryPropertyOwnersResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryPropertyOwnersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.PropertyOwners) {
		toSerialize["property_owners"] = o.PropertyOwners
	}
	if !IsNil(o.TotalCount) {
		toSerialize["total_count"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableQueryPropertyOwnersResponse struct {
	value *QueryPropertyOwnersResponse
	isSet bool
}

func (v NullableQueryPropertyOwnersResponse) Get() *QueryPropertyOwnersResponse {
	return v.value
}

func (v *NullableQueryPropertyOwnersResponse) Set(val *QueryPropertyOwnersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryPropertyOwnersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryPropertyOwnersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryPropertyOwnersResponse(val *QueryPropertyOwnersResponse) *NullableQueryPropertyOwnersResponse {
	return &NullableQueryPropertyOwnersResponse{value: val, isSet: true}
}

func (v NullableQueryPropertyOwnersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryPropertyOwnersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
