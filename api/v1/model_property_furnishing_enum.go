/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// PropertyFurnishingEnum the model 'PropertyFurnishingEnum'
type PropertyFurnishingEnum string

// List of PropertyFurnishingEnum
const (
	PROPERTYFURNISHINGENUM_FULL_FURNISHING    PropertyFurnishingEnum = "FULL_FURNISHING"
	PROPERTYFURNISHINGENUM_PARTIAL_FURNISHING PropertyFurnishingEnum = "PARTIAL_FURNISHING"
	PROPERTYFURNISHINGENUM_NO_FURNISHING      PropertyFurnishingEnum = "NO_FURNISHING"
)

// All allowed values of PropertyFurnishingEnum enum
var AllowedPropertyFurnishingEnumEnumValues = []PropertyFurnishingEnum{
	"FULL_FURNISHING",
	"PARTIAL_FURNISHING",
	"NO_FURNISHING",
}

func (v *PropertyFurnishingEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyFurnishingEnum(value)
	for _, existing := range AllowedPropertyFurnishingEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyFurnishingEnum", value)
}

// NewPropertyFurnishingEnumFromValue returns a pointer to a valid PropertyFurnishingEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyFurnishingEnumFromValue(v string) (*PropertyFurnishingEnum, error) {
	ev := PropertyFurnishingEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyFurnishingEnum: valid values are %v", v, AllowedPropertyFurnishingEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyFurnishingEnum) IsValid() bool {
	for _, existing := range AllowedPropertyFurnishingEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyFurnishingEnum value
func (v PropertyFurnishingEnum) Ptr() *PropertyFurnishingEnum {
	return &v
}

type NullablePropertyFurnishingEnum struct {
	value *PropertyFurnishingEnum
	isSet bool
}

func (v NullablePropertyFurnishingEnum) Get() *PropertyFurnishingEnum {
	return v.value
}

func (v *NullablePropertyFurnishingEnum) Set(val *PropertyFurnishingEnum) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyFurnishingEnum) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyFurnishingEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyFurnishingEnum(val *PropertyFurnishingEnum) *NullablePropertyFurnishingEnum {
	return &NullablePropertyFurnishingEnum{value: val, isSet: true}
}

func (v NullablePropertyFurnishingEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyFurnishingEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
