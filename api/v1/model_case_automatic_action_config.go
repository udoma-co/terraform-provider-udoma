/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CaseAutomaticActionConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CaseAutomaticActionConfig{}

// CaseAutomaticActionConfig Defines the configuration for an automatic action a case.
type CaseAutomaticActionConfig struct {
	Status CaseStatusEnum `json:"status"`
	// The number of days after which the status change should be triggered. The  schedule is reset, whenever the case is updated. A negative value means that  the action should be triggered immediately.
	Schedule int32 `json:"schedule"`
	// JS script of the action that should be executed, if the schedule and execution check are successful.
	Action string `json:"action"`
}

type _CaseAutomaticActionConfig CaseAutomaticActionConfig

// NewCaseAutomaticActionConfig instantiates a new CaseAutomaticActionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaseAutomaticActionConfig(status CaseStatusEnum, schedule int32, action string) *CaseAutomaticActionConfig {
	this := CaseAutomaticActionConfig{}
	this.Status = status
	this.Schedule = schedule
	this.Action = action
	return &this
}

// NewCaseAutomaticActionConfigWithDefaults instantiates a new CaseAutomaticActionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaseAutomaticActionConfigWithDefaults() *CaseAutomaticActionConfig {
	this := CaseAutomaticActionConfig{}
	return &this
}

// GetStatus returns the Status field value
func (o *CaseAutomaticActionConfig) GetStatus() CaseStatusEnum {
	if o == nil {
		var ret CaseStatusEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CaseAutomaticActionConfig) GetStatusOk() (*CaseStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CaseAutomaticActionConfig) SetStatus(v CaseStatusEnum) {
	o.Status = v
}

// GetSchedule returns the Schedule field value
func (o *CaseAutomaticActionConfig) GetSchedule() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *CaseAutomaticActionConfig) GetScheduleOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Schedule, true
}

// SetSchedule sets field value
func (o *CaseAutomaticActionConfig) SetSchedule(v int32) {
	o.Schedule = v
}

// GetAction returns the Action field value
func (o *CaseAutomaticActionConfig) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *CaseAutomaticActionConfig) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *CaseAutomaticActionConfig) SetAction(v string) {
	o.Action = v
}

func (o CaseAutomaticActionConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CaseAutomaticActionConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["schedule"] = o.Schedule
	toSerialize["action"] = o.Action
	return toSerialize, nil
}

func (o *CaseAutomaticActionConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
		"schedule",
		"action",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCaseAutomaticActionConfig := _CaseAutomaticActionConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCaseAutomaticActionConfig)

	if err != nil {
		return err
	}

	*o = CaseAutomaticActionConfig(varCaseAutomaticActionConfig)

	return err
}

type NullableCaseAutomaticActionConfig struct {
	value *CaseAutomaticActionConfig
	isSet bool
}

func (v NullableCaseAutomaticActionConfig) Get() *CaseAutomaticActionConfig {
	return v.value
}

func (v *NullableCaseAutomaticActionConfig) Set(val *CaseAutomaticActionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCaseAutomaticActionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCaseAutomaticActionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaseAutomaticActionConfig(val *CaseAutomaticActionConfig) *NullableCaseAutomaticActionConfig {
	return &NullableCaseAutomaticActionConfig{value: val, isSet: true}
}

func (v NullableCaseAutomaticActionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaseAutomaticActionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
