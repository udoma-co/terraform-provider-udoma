/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// UpdateWorkflowExecutionRequest a request for updating a workflow execution
type UpdateWorkflowExecutionRequest struct {
	Status *WorkflowExecutionStatus `json:"status,omitempty"`
}

// NewUpdateWorkflowExecutionRequest instantiates a new UpdateWorkflowExecutionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWorkflowExecutionRequest() *UpdateWorkflowExecutionRequest {
	this := UpdateWorkflowExecutionRequest{}
	return &this
}

// NewUpdateWorkflowExecutionRequestWithDefaults instantiates a new UpdateWorkflowExecutionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWorkflowExecutionRequestWithDefaults() *UpdateWorkflowExecutionRequest {
	this := UpdateWorkflowExecutionRequest{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateWorkflowExecutionRequest) GetStatus() WorkflowExecutionStatus {
	if o == nil || o.Status == nil {
		var ret WorkflowExecutionStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkflowExecutionRequest) GetStatusOk() (*WorkflowExecutionStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateWorkflowExecutionRequest) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given WorkflowExecutionStatus and assigns it to the Status field.
func (o *UpdateWorkflowExecutionRequest) SetStatus(v WorkflowExecutionStatus) {
	o.Status = &v
}

func (o UpdateWorkflowExecutionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateWorkflowExecutionRequest struct {
	value *UpdateWorkflowExecutionRequest
	isSet bool
}

func (v NullableUpdateWorkflowExecutionRequest) Get() *UpdateWorkflowExecutionRequest {
	return v.value
}

func (v *NullableUpdateWorkflowExecutionRequest) Set(val *UpdateWorkflowExecutionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWorkflowExecutionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWorkflowExecutionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWorkflowExecutionRequest(val *UpdateWorkflowExecutionRequest) *NullableUpdateWorkflowExecutionRequest {
	return &NullableUpdateWorkflowExecutionRequest{value: val, isSet: true}
}

func (v NullableUpdateWorkflowExecutionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWorkflowExecutionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
