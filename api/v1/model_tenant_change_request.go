/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the TenantChangeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantChangeRequest{}

// TenantChangeRequest A change to the tenants of a property. This is used to indicate that a tenant has moved out or moved in.
type TenantChangeRequest struct {
	Tenant *ContactData `json:"tenant,omitempty"`
	// Optional date when the change will enter into force
	EntryIntoForce *int64                  `json:"entry_into_force,omitempty"`
	Action         *TenantChangeActionEnum `json:"action,omitempty"`
}

// NewTenantChangeRequest instantiates a new TenantChangeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantChangeRequest() *TenantChangeRequest {
	this := TenantChangeRequest{}
	return &this
}

// NewTenantChangeRequestWithDefaults instantiates a new TenantChangeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantChangeRequestWithDefaults() *TenantChangeRequest {
	this := TenantChangeRequest{}
	return &this
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *TenantChangeRequest) GetTenant() ContactData {
	if o == nil || IsNil(o.Tenant) {
		var ret ContactData
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantChangeRequest) GetTenantOk() (*ContactData, bool) {
	if o == nil || IsNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *TenantChangeRequest) HasTenant() bool {
	if o != nil && !IsNil(o.Tenant) {
		return true
	}

	return false
}

// SetTenant gets a reference to the given ContactData and assigns it to the Tenant field.
func (o *TenantChangeRequest) SetTenant(v ContactData) {
	o.Tenant = &v
}

// GetEntryIntoForce returns the EntryIntoForce field value if set, zero value otherwise.
func (o *TenantChangeRequest) GetEntryIntoForce() int64 {
	if o == nil || IsNil(o.EntryIntoForce) {
		var ret int64
		return ret
	}
	return *o.EntryIntoForce
}

// GetEntryIntoForceOk returns a tuple with the EntryIntoForce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantChangeRequest) GetEntryIntoForceOk() (*int64, bool) {
	if o == nil || IsNil(o.EntryIntoForce) {
		return nil, false
	}
	return o.EntryIntoForce, true
}

// HasEntryIntoForce returns a boolean if a field has been set.
func (o *TenantChangeRequest) HasEntryIntoForce() bool {
	if o != nil && !IsNil(o.EntryIntoForce) {
		return true
	}

	return false
}

// SetEntryIntoForce gets a reference to the given int64 and assigns it to the EntryIntoForce field.
func (o *TenantChangeRequest) SetEntryIntoForce(v int64) {
	o.EntryIntoForce = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *TenantChangeRequest) GetAction() TenantChangeActionEnum {
	if o == nil || IsNil(o.Action) {
		var ret TenantChangeActionEnum
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantChangeRequest) GetActionOk() (*TenantChangeActionEnum, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *TenantChangeRequest) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given TenantChangeActionEnum and assigns it to the Action field.
func (o *TenantChangeRequest) SetAction(v TenantChangeActionEnum) {
	o.Action = &v
}

func (o TenantChangeRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantChangeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tenant) {
		toSerialize["tenant"] = o.Tenant
	}
	if !IsNil(o.EntryIntoForce) {
		toSerialize["entry_into_force"] = o.EntryIntoForce
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	return toSerialize, nil
}

type NullableTenantChangeRequest struct {
	value *TenantChangeRequest
	isSet bool
}

func (v NullableTenantChangeRequest) Get() *TenantChangeRequest {
	return v.value
}

func (v *NullableTenantChangeRequest) Set(val *TenantChangeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantChangeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantChangeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantChangeRequest(val *TenantChangeRequest) *NullableTenantChangeRequest {
	return &NullableTenantChangeRequest{value: val, isSet: true}
}

func (v NullableTenantChangeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantChangeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
