/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the QueryBookingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryBookingsRequest{}

// QueryBookingsRequest The data required to query the bookings of a financial account
type QueryBookingsRequest struct {
	// The lowest date to include in the result
	DateMin *int64 `json:"date_min,omitempty"`
	// The highest date to include in the result
	DateMax   *int64       `json:"date_max,omitempty"`
	AmountMin *FloatNumber `json:"amount_min,omitempty"`
	AmountMax *FloatNumber `json:"amount_max,omitempty"`
	// The values of the dimensions that are assigned to the booking for the account
	Dimensions []AccountDimensionValue `json:"dimensions,omitempty"`
}

// NewQueryBookingsRequest instantiates a new QueryBookingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryBookingsRequest() *QueryBookingsRequest {
	this := QueryBookingsRequest{}
	return &this
}

// NewQueryBookingsRequestWithDefaults instantiates a new QueryBookingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryBookingsRequestWithDefaults() *QueryBookingsRequest {
	this := QueryBookingsRequest{}
	return &this
}

// GetDateMin returns the DateMin field value if set, zero value otherwise.
func (o *QueryBookingsRequest) GetDateMin() int64 {
	if o == nil || IsNil(o.DateMin) {
		var ret int64
		return ret
	}
	return *o.DateMin
}

// GetDateMinOk returns a tuple with the DateMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryBookingsRequest) GetDateMinOk() (*int64, bool) {
	if o == nil || IsNil(o.DateMin) {
		return nil, false
	}
	return o.DateMin, true
}

// HasDateMin returns a boolean if a field has been set.
func (o *QueryBookingsRequest) HasDateMin() bool {
	if o != nil && !IsNil(o.DateMin) {
		return true
	}

	return false
}

// SetDateMin gets a reference to the given int64 and assigns it to the DateMin field.
func (o *QueryBookingsRequest) SetDateMin(v int64) {
	o.DateMin = &v
}

// GetDateMax returns the DateMax field value if set, zero value otherwise.
func (o *QueryBookingsRequest) GetDateMax() int64 {
	if o == nil || IsNil(o.DateMax) {
		var ret int64
		return ret
	}
	return *o.DateMax
}

// GetDateMaxOk returns a tuple with the DateMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryBookingsRequest) GetDateMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.DateMax) {
		return nil, false
	}
	return o.DateMax, true
}

// HasDateMax returns a boolean if a field has been set.
func (o *QueryBookingsRequest) HasDateMax() bool {
	if o != nil && !IsNil(o.DateMax) {
		return true
	}

	return false
}

// SetDateMax gets a reference to the given int64 and assigns it to the DateMax field.
func (o *QueryBookingsRequest) SetDateMax(v int64) {
	o.DateMax = &v
}

// GetAmountMin returns the AmountMin field value if set, zero value otherwise.
func (o *QueryBookingsRequest) GetAmountMin() FloatNumber {
	if o == nil || IsNil(o.AmountMin) {
		var ret FloatNumber
		return ret
	}
	return *o.AmountMin
}

// GetAmountMinOk returns a tuple with the AmountMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryBookingsRequest) GetAmountMinOk() (*FloatNumber, bool) {
	if o == nil || IsNil(o.AmountMin) {
		return nil, false
	}
	return o.AmountMin, true
}

// HasAmountMin returns a boolean if a field has been set.
func (o *QueryBookingsRequest) HasAmountMin() bool {
	if o != nil && !IsNil(o.AmountMin) {
		return true
	}

	return false
}

// SetAmountMin gets a reference to the given FloatNumber and assigns it to the AmountMin field.
func (o *QueryBookingsRequest) SetAmountMin(v FloatNumber) {
	o.AmountMin = &v
}

// GetAmountMax returns the AmountMax field value if set, zero value otherwise.
func (o *QueryBookingsRequest) GetAmountMax() FloatNumber {
	if o == nil || IsNil(o.AmountMax) {
		var ret FloatNumber
		return ret
	}
	return *o.AmountMax
}

// GetAmountMaxOk returns a tuple with the AmountMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryBookingsRequest) GetAmountMaxOk() (*FloatNumber, bool) {
	if o == nil || IsNil(o.AmountMax) {
		return nil, false
	}
	return o.AmountMax, true
}

// HasAmountMax returns a boolean if a field has been set.
func (o *QueryBookingsRequest) HasAmountMax() bool {
	if o != nil && !IsNil(o.AmountMax) {
		return true
	}

	return false
}

// SetAmountMax gets a reference to the given FloatNumber and assigns it to the AmountMax field.
func (o *QueryBookingsRequest) SetAmountMax(v FloatNumber) {
	o.AmountMax = &v
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *QueryBookingsRequest) GetDimensions() []AccountDimensionValue {
	if o == nil || IsNil(o.Dimensions) {
		var ret []AccountDimensionValue
		return ret
	}
	return o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryBookingsRequest) GetDimensionsOk() ([]AccountDimensionValue, bool) {
	if o == nil || IsNil(o.Dimensions) {
		return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *QueryBookingsRequest) HasDimensions() bool {
	if o != nil && !IsNil(o.Dimensions) {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given []AccountDimensionValue and assigns it to the Dimensions field.
func (o *QueryBookingsRequest) SetDimensions(v []AccountDimensionValue) {
	o.Dimensions = v
}

func (o QueryBookingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryBookingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateMin) {
		toSerialize["date_min"] = o.DateMin
	}
	if !IsNil(o.DateMax) {
		toSerialize["date_max"] = o.DateMax
	}
	if !IsNil(o.AmountMin) {
		toSerialize["amount_min"] = o.AmountMin
	}
	if !IsNil(o.AmountMax) {
		toSerialize["amount_max"] = o.AmountMax
	}
	if !IsNil(o.Dimensions) {
		toSerialize["dimensions"] = o.Dimensions
	}
	return toSerialize, nil
}

type NullableQueryBookingsRequest struct {
	value *QueryBookingsRequest
	isSet bool
}

func (v NullableQueryBookingsRequest) Get() *QueryBookingsRequest {
	return v.value
}

func (v *NullableQueryBookingsRequest) Set(val *QueryBookingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryBookingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryBookingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryBookingsRequest(val *QueryBookingsRequest) *NullableQueryBookingsRequest {
	return &NullableQueryBookingsRequest{value: val, isSet: true}
}

func (v NullableQueryBookingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryBookingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
