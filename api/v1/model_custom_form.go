/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CustomForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomForm{}

// CustomForm A custom form definition that is used to collect data from the user
type CustomForm struct {
	// the layout of the form, which groups and inputs will be displayed
	Layout []FormItem `json:"layout"`
	// the groups of inputs that will be displayed to the user
	Groups []FormGroup `json:"groups,omitempty"`
	// the inputs that will be displayed to the user
	Inputs []FormInput `json:"inputs"`
	// the validations that will be performed on the data provided by the user
	Validations []FormValidation `json:"validations,omitempty"`
}

type _CustomForm CustomForm

// NewCustomForm instantiates a new CustomForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomForm(layout []FormItem, inputs []FormInput) *CustomForm {
	this := CustomForm{}
	this.Layout = layout
	this.Inputs = inputs
	return &this
}

// NewCustomFormWithDefaults instantiates a new CustomForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomFormWithDefaults() *CustomForm {
	this := CustomForm{}
	return &this
}

// GetLayout returns the Layout field value
func (o *CustomForm) GetLayout() []FormItem {
	if o == nil {
		var ret []FormItem
		return ret
	}

	return o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value
// and a boolean to check if the value has been set.
func (o *CustomForm) GetLayoutOk() ([]FormItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Layout, true
}

// SetLayout sets field value
func (o *CustomForm) SetLayout(v []FormItem) {
	o.Layout = v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *CustomForm) GetGroups() []FormGroup {
	if o == nil || IsNil(o.Groups) {
		var ret []FormGroup
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomForm) GetGroupsOk() ([]FormGroup, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *CustomForm) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []FormGroup and assigns it to the Groups field.
func (o *CustomForm) SetGroups(v []FormGroup) {
	o.Groups = v
}

// GetInputs returns the Inputs field value
func (o *CustomForm) GetInputs() []FormInput {
	if o == nil {
		var ret []FormInput
		return ret
	}

	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value
// and a boolean to check if the value has been set.
func (o *CustomForm) GetInputsOk() ([]FormInput, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inputs, true
}

// SetInputs sets field value
func (o *CustomForm) SetInputs(v []FormInput) {
	o.Inputs = v
}

// GetValidations returns the Validations field value if set, zero value otherwise.
func (o *CustomForm) GetValidations() []FormValidation {
	if o == nil || IsNil(o.Validations) {
		var ret []FormValidation
		return ret
	}
	return o.Validations
}

// GetValidationsOk returns a tuple with the Validations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomForm) GetValidationsOk() ([]FormValidation, bool) {
	if o == nil || IsNil(o.Validations) {
		return nil, false
	}
	return o.Validations, true
}

// HasValidations returns a boolean if a field has been set.
func (o *CustomForm) HasValidations() bool {
	if o != nil && !IsNil(o.Validations) {
		return true
	}

	return false
}

// SetValidations gets a reference to the given []FormValidation and assigns it to the Validations field.
func (o *CustomForm) SetValidations(v []FormValidation) {
	o.Validations = v
}

func (o CustomForm) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["layout"] = o.Layout
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	toSerialize["inputs"] = o.Inputs
	if !IsNil(o.Validations) {
		toSerialize["validations"] = o.Validations
	}
	return toSerialize, nil
}

func (o *CustomForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"layout",
		"inputs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomForm := _CustomForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomForm)

	if err != nil {
		return err
	}

	*o = CustomForm(varCustomForm)

	return err
}

type NullableCustomForm struct {
	value *CustomForm
	isSet bool
}

func (v NullableCustomForm) Get() *CustomForm {
	return v.value
}

func (v *NullableCustomForm) Set(val *CustomForm) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomForm) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomForm(val *CustomForm) *NullableCustomForm {
	return &NullableCustomForm{value: val, isSet: true}
}

func (v NullableCustomForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
