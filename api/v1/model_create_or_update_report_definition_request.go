/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the CreateOrUpdateReportDefinitionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateReportDefinitionRequest{}

// CreateOrUpdateReportDefinitionRequest struct for CreateOrUpdateReportDefinitionRequest
type CreateOrUpdateReportDefinitionRequest struct {
	// The name of the report
	Name *string `json:"name,omitempty"`
	// The description of the report
	Description  *string             `json:"description,omitempty"`
	ResultSchema *ReportResultSchema `json:"result_schema,omitempty"`
	// The JS script to execute to map the result to the result schema
	ResultMapper *string     `json:"result_mapper,omitempty"`
	Parameters   *CustomForm `json:"parameters,omitempty"`
	// The JS script to execute to generate the report result
	Script *string `json:"script,omitempty"`
}

// NewCreateOrUpdateReportDefinitionRequest instantiates a new CreateOrUpdateReportDefinitionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateReportDefinitionRequest() *CreateOrUpdateReportDefinitionRequest {
	this := CreateOrUpdateReportDefinitionRequest{}
	return &this
}

// NewCreateOrUpdateReportDefinitionRequestWithDefaults instantiates a new CreateOrUpdateReportDefinitionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateReportDefinitionRequestWithDefaults() *CreateOrUpdateReportDefinitionRequest {
	this := CreateOrUpdateReportDefinitionRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateOrUpdateReportDefinitionRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateReportDefinitionRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateOrUpdateReportDefinitionRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateOrUpdateReportDefinitionRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateOrUpdateReportDefinitionRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateReportDefinitionRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateOrUpdateReportDefinitionRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateOrUpdateReportDefinitionRequest) SetDescription(v string) {
	o.Description = &v
}

// GetResultSchema returns the ResultSchema field value if set, zero value otherwise.
func (o *CreateOrUpdateReportDefinitionRequest) GetResultSchema() ReportResultSchema {
	if o == nil || IsNil(o.ResultSchema) {
		var ret ReportResultSchema
		return ret
	}
	return *o.ResultSchema
}

// GetResultSchemaOk returns a tuple with the ResultSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateReportDefinitionRequest) GetResultSchemaOk() (*ReportResultSchema, bool) {
	if o == nil || IsNil(o.ResultSchema) {
		return nil, false
	}
	return o.ResultSchema, true
}

// HasResultSchema returns a boolean if a field has been set.
func (o *CreateOrUpdateReportDefinitionRequest) HasResultSchema() bool {
	if o != nil && !IsNil(o.ResultSchema) {
		return true
	}

	return false
}

// SetResultSchema gets a reference to the given ReportResultSchema and assigns it to the ResultSchema field.
func (o *CreateOrUpdateReportDefinitionRequest) SetResultSchema(v ReportResultSchema) {
	o.ResultSchema = &v
}

// GetResultMapper returns the ResultMapper field value if set, zero value otherwise.
func (o *CreateOrUpdateReportDefinitionRequest) GetResultMapper() string {
	if o == nil || IsNil(o.ResultMapper) {
		var ret string
		return ret
	}
	return *o.ResultMapper
}

// GetResultMapperOk returns a tuple with the ResultMapper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateReportDefinitionRequest) GetResultMapperOk() (*string, bool) {
	if o == nil || IsNil(o.ResultMapper) {
		return nil, false
	}
	return o.ResultMapper, true
}

// HasResultMapper returns a boolean if a field has been set.
func (o *CreateOrUpdateReportDefinitionRequest) HasResultMapper() bool {
	if o != nil && !IsNil(o.ResultMapper) {
		return true
	}

	return false
}

// SetResultMapper gets a reference to the given string and assigns it to the ResultMapper field.
func (o *CreateOrUpdateReportDefinitionRequest) SetResultMapper(v string) {
	o.ResultMapper = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *CreateOrUpdateReportDefinitionRequest) GetParameters() CustomForm {
	if o == nil || IsNil(o.Parameters) {
		var ret CustomForm
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateReportDefinitionRequest) GetParametersOk() (*CustomForm, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *CreateOrUpdateReportDefinitionRequest) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given CustomForm and assigns it to the Parameters field.
func (o *CreateOrUpdateReportDefinitionRequest) SetParameters(v CustomForm) {
	o.Parameters = &v
}

// GetScript returns the Script field value if set, zero value otherwise.
func (o *CreateOrUpdateReportDefinitionRequest) GetScript() string {
	if o == nil || IsNil(o.Script) {
		var ret string
		return ret
	}
	return *o.Script
}

// GetScriptOk returns a tuple with the Script field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateReportDefinitionRequest) GetScriptOk() (*string, bool) {
	if o == nil || IsNil(o.Script) {
		return nil, false
	}
	return o.Script, true
}

// HasScript returns a boolean if a field has been set.
func (o *CreateOrUpdateReportDefinitionRequest) HasScript() bool {
	if o != nil && !IsNil(o.Script) {
		return true
	}

	return false
}

// SetScript gets a reference to the given string and assigns it to the Script field.
func (o *CreateOrUpdateReportDefinitionRequest) SetScript(v string) {
	o.Script = &v
}

func (o CreateOrUpdateReportDefinitionRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateReportDefinitionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ResultSchema) {
		toSerialize["result_schema"] = o.ResultSchema
	}
	if !IsNil(o.ResultMapper) {
		toSerialize["result_mapper"] = o.ResultMapper
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.Script) {
		toSerialize["script"] = o.Script
	}
	return toSerialize, nil
}

type NullableCreateOrUpdateReportDefinitionRequest struct {
	value *CreateOrUpdateReportDefinitionRequest
	isSet bool
}

func (v NullableCreateOrUpdateReportDefinitionRequest) Get() *CreateOrUpdateReportDefinitionRequest {
	return v.value
}

func (v *NullableCreateOrUpdateReportDefinitionRequest) Set(val *CreateOrUpdateReportDefinitionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateReportDefinitionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateReportDefinitionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateReportDefinitionRequest(val *CreateOrUpdateReportDefinitionRequest) *NullableCreateOrUpdateReportDefinitionRequest {
	return &NullableCreateOrUpdateReportDefinitionRequest{value: val, isSet: true}
}

func (v NullableCreateOrUpdateReportDefinitionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateReportDefinitionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
