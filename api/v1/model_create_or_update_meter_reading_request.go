/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CreateOrUpdateMeterReadingRequest All the information required for tracking a meter reading
type CreateOrUpdateMeterReadingRequest struct {
	Date          *int64       `json:"date,omitempty"`
	Value         *FloatNumber `json:"value,omitempty"`
	AttachmentRef *string      `json:"attachment_ref,omitempty"`
}

// NewCreateOrUpdateMeterReadingRequest instantiates a new CreateOrUpdateMeterReadingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateMeterReadingRequest() *CreateOrUpdateMeterReadingRequest {
	this := CreateOrUpdateMeterReadingRequest{}
	return &this
}

// NewCreateOrUpdateMeterReadingRequestWithDefaults instantiates a new CreateOrUpdateMeterReadingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateMeterReadingRequestWithDefaults() *CreateOrUpdateMeterReadingRequest {
	this := CreateOrUpdateMeterReadingRequest{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *CreateOrUpdateMeterReadingRequest) GetDate() int64 {
	if o == nil || o.Date == nil {
		var ret int64
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateMeterReadingRequest) GetDateOk() (*int64, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *CreateOrUpdateMeterReadingRequest) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given int64 and assigns it to the Date field.
func (o *CreateOrUpdateMeterReadingRequest) SetDate(v int64) {
	o.Date = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CreateOrUpdateMeterReadingRequest) GetValue() FloatNumber {
	if o == nil || o.Value == nil {
		var ret FloatNumber
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateMeterReadingRequest) GetValueOk() (*FloatNumber, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CreateOrUpdateMeterReadingRequest) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given FloatNumber and assigns it to the Value field.
func (o *CreateOrUpdateMeterReadingRequest) SetValue(v FloatNumber) {
	o.Value = &v
}

// GetAttachmentRef returns the AttachmentRef field value if set, zero value otherwise.
func (o *CreateOrUpdateMeterReadingRequest) GetAttachmentRef() string {
	if o == nil || o.AttachmentRef == nil {
		var ret string
		return ret
	}
	return *o.AttachmentRef
}

// GetAttachmentRefOk returns a tuple with the AttachmentRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateMeterReadingRequest) GetAttachmentRefOk() (*string, bool) {
	if o == nil || o.AttachmentRef == nil {
		return nil, false
	}
	return o.AttachmentRef, true
}

// HasAttachmentRef returns a boolean if a field has been set.
func (o *CreateOrUpdateMeterReadingRequest) HasAttachmentRef() bool {
	if o != nil && o.AttachmentRef != nil {
		return true
	}

	return false
}

// SetAttachmentRef gets a reference to the given string and assigns it to the AttachmentRef field.
func (o *CreateOrUpdateMeterReadingRequest) SetAttachmentRef(v string) {
	o.AttachmentRef = &v
}

func (o CreateOrUpdateMeterReadingRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.AttachmentRef != nil {
		toSerialize["attachment_ref"] = o.AttachmentRef
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOrUpdateMeterReadingRequest struct {
	value *CreateOrUpdateMeterReadingRequest
	isSet bool
}

func (v NullableCreateOrUpdateMeterReadingRequest) Get() *CreateOrUpdateMeterReadingRequest {
	return v.value
}

func (v *NullableCreateOrUpdateMeterReadingRequest) Set(val *CreateOrUpdateMeterReadingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateMeterReadingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateMeterReadingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateMeterReadingRequest(val *CreateOrUpdateMeterReadingRequest) *NullableCreateOrUpdateMeterReadingRequest {
	return &NullableCreateOrUpdateMeterReadingRequest{value: val, isSet: true}
}

func (v NullableCreateOrUpdateMeterReadingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateMeterReadingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
