/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CaseForwardRequest input used to send out case information to service provider
type CaseForwardRequest struct {
	ContactRef *string `json:"contact_ref,omitempty"`
	Language   *string `json:"language,omitempty"`
	// the content of the notification to be sent as an email body
	Text           *string  `json:"text,omitempty"`
	AttachmentRefs []string `json:"attachment_refs,omitempty"`
}

// NewCaseForwardRequest instantiates a new CaseForwardRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaseForwardRequest() *CaseForwardRequest {
	this := CaseForwardRequest{}
	return &this
}

// NewCaseForwardRequestWithDefaults instantiates a new CaseForwardRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaseForwardRequestWithDefaults() *CaseForwardRequest {
	this := CaseForwardRequest{}
	return &this
}

// GetContactRef returns the ContactRef field value if set, zero value otherwise.
func (o *CaseForwardRequest) GetContactRef() string {
	if o == nil || o.ContactRef == nil {
		var ret string
		return ret
	}
	return *o.ContactRef
}

// GetContactRefOk returns a tuple with the ContactRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseForwardRequest) GetContactRefOk() (*string, bool) {
	if o == nil || o.ContactRef == nil {
		return nil, false
	}
	return o.ContactRef, true
}

// HasContactRef returns a boolean if a field has been set.
func (o *CaseForwardRequest) HasContactRef() bool {
	if o != nil && o.ContactRef != nil {
		return true
	}

	return false
}

// SetContactRef gets a reference to the given string and assigns it to the ContactRef field.
func (o *CaseForwardRequest) SetContactRef(v string) {
	o.ContactRef = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *CaseForwardRequest) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseForwardRequest) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *CaseForwardRequest) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *CaseForwardRequest) SetLanguage(v string) {
	o.Language = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *CaseForwardRequest) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseForwardRequest) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *CaseForwardRequest) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *CaseForwardRequest) SetText(v string) {
	o.Text = &v
}

// GetAttachmentRefs returns the AttachmentRefs field value if set, zero value otherwise.
func (o *CaseForwardRequest) GetAttachmentRefs() []string {
	if o == nil || o.AttachmentRefs == nil {
		var ret []string
		return ret
	}
	return o.AttachmentRefs
}

// GetAttachmentRefsOk returns a tuple with the AttachmentRefs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseForwardRequest) GetAttachmentRefsOk() ([]string, bool) {
	if o == nil || o.AttachmentRefs == nil {
		return nil, false
	}
	return o.AttachmentRefs, true
}

// HasAttachmentRefs returns a boolean if a field has been set.
func (o *CaseForwardRequest) HasAttachmentRefs() bool {
	if o != nil && o.AttachmentRefs != nil {
		return true
	}

	return false
}

// SetAttachmentRefs gets a reference to the given []string and assigns it to the AttachmentRefs field.
func (o *CaseForwardRequest) SetAttachmentRefs(v []string) {
	o.AttachmentRefs = v
}

func (o CaseForwardRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContactRef != nil {
		toSerialize["contact_ref"] = o.ContactRef
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	if o.AttachmentRefs != nil {
		toSerialize["attachment_refs"] = o.AttachmentRefs
	}
	return json.Marshal(toSerialize)
}

type NullableCaseForwardRequest struct {
	value *CaseForwardRequest
	isSet bool
}

func (v NullableCaseForwardRequest) Get() *CaseForwardRequest {
	return v.value
}

func (v *NullableCaseForwardRequest) Set(val *CaseForwardRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCaseForwardRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCaseForwardRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaseForwardRequest(val *CaseForwardRequest) *NullableCaseForwardRequest {
	return &NullableCaseForwardRequest{value: val, isSet: true}
}

func (v NullableCaseForwardRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaseForwardRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
