/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// DocumentTemplateOptions Additional options for a document template
type DocumentTemplateOptions struct {
	// True if the generated document may be edited by the user
	AllowTextEdit *bool `json:"allow_text_edit,omitempty"`
	// True if the footer branding should be included in the document PDF
	IncludeFooterBranding *bool `json:"include_footer_branding,omitempty"`
	// True if page numbers should be included in the document PDF
	IncludePageNumbers *bool `json:"include_page_numbers,omitempty"`
}

// NewDocumentTemplateOptions instantiates a new DocumentTemplateOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentTemplateOptions() *DocumentTemplateOptions {
	this := DocumentTemplateOptions{}
	return &this
}

// NewDocumentTemplateOptionsWithDefaults instantiates a new DocumentTemplateOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentTemplateOptionsWithDefaults() *DocumentTemplateOptions {
	this := DocumentTemplateOptions{}
	return &this
}

// GetAllowTextEdit returns the AllowTextEdit field value if set, zero value otherwise.
func (o *DocumentTemplateOptions) GetAllowTextEdit() bool {
	if o == nil || o.AllowTextEdit == nil {
		var ret bool
		return ret
	}
	return *o.AllowTextEdit
}

// GetAllowTextEditOk returns a tuple with the AllowTextEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentTemplateOptions) GetAllowTextEditOk() (*bool, bool) {
	if o == nil || o.AllowTextEdit == nil {
		return nil, false
	}
	return o.AllowTextEdit, true
}

// HasAllowTextEdit returns a boolean if a field has been set.
func (o *DocumentTemplateOptions) HasAllowTextEdit() bool {
	if o != nil && o.AllowTextEdit != nil {
		return true
	}

	return false
}

// SetAllowTextEdit gets a reference to the given bool and assigns it to the AllowTextEdit field.
func (o *DocumentTemplateOptions) SetAllowTextEdit(v bool) {
	o.AllowTextEdit = &v
}

// GetIncludeFooterBranding returns the IncludeFooterBranding field value if set, zero value otherwise.
func (o *DocumentTemplateOptions) GetIncludeFooterBranding() bool {
	if o == nil || o.IncludeFooterBranding == nil {
		var ret bool
		return ret
	}
	return *o.IncludeFooterBranding
}

// GetIncludeFooterBrandingOk returns a tuple with the IncludeFooterBranding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentTemplateOptions) GetIncludeFooterBrandingOk() (*bool, bool) {
	if o == nil || o.IncludeFooterBranding == nil {
		return nil, false
	}
	return o.IncludeFooterBranding, true
}

// HasIncludeFooterBranding returns a boolean if a field has been set.
func (o *DocumentTemplateOptions) HasIncludeFooterBranding() bool {
	if o != nil && o.IncludeFooterBranding != nil {
		return true
	}

	return false
}

// SetIncludeFooterBranding gets a reference to the given bool and assigns it to the IncludeFooterBranding field.
func (o *DocumentTemplateOptions) SetIncludeFooterBranding(v bool) {
	o.IncludeFooterBranding = &v
}

// GetIncludePageNumbers returns the IncludePageNumbers field value if set, zero value otherwise.
func (o *DocumentTemplateOptions) GetIncludePageNumbers() bool {
	if o == nil || o.IncludePageNumbers == nil {
		var ret bool
		return ret
	}
	return *o.IncludePageNumbers
}

// GetIncludePageNumbersOk returns a tuple with the IncludePageNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentTemplateOptions) GetIncludePageNumbersOk() (*bool, bool) {
	if o == nil || o.IncludePageNumbers == nil {
		return nil, false
	}
	return o.IncludePageNumbers, true
}

// HasIncludePageNumbers returns a boolean if a field has been set.
func (o *DocumentTemplateOptions) HasIncludePageNumbers() bool {
	if o != nil && o.IncludePageNumbers != nil {
		return true
	}

	return false
}

// SetIncludePageNumbers gets a reference to the given bool and assigns it to the IncludePageNumbers field.
func (o *DocumentTemplateOptions) SetIncludePageNumbers(v bool) {
	o.IncludePageNumbers = &v
}

func (o DocumentTemplateOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowTextEdit != nil {
		toSerialize["allow_text_edit"] = o.AllowTextEdit
	}
	if o.IncludeFooterBranding != nil {
		toSerialize["include_footer_branding"] = o.IncludeFooterBranding
	}
	if o.IncludePageNumbers != nil {
		toSerialize["include_page_numbers"] = o.IncludePageNumbers
	}
	return json.Marshal(toSerialize)
}

type NullableDocumentTemplateOptions struct {
	value *DocumentTemplateOptions
	isSet bool
}

func (v NullableDocumentTemplateOptions) Get() *DocumentTemplateOptions {
	return v.value
}

func (v *NullableDocumentTemplateOptions) Set(val *DocumentTemplateOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentTemplateOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentTemplateOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentTemplateOptions(val *DocumentTemplateOptions) *NullableDocumentTemplateOptions {
	return &NullableDocumentTemplateOptions{value: val, isSet: true}
}

func (v NullableDocumentTemplateOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentTemplateOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
