/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// UpdateCaseStatusRequest All the information required for updating the status of a case
type UpdateCaseStatusRequest struct {
	Status   *CaseStatusEnum `json:"status,omitempty"`
	Assignee *CaseAssignee   `json:"assignee,omitempty"`
	// optional comment that can be provided with the status change
	Comment *string `json:"comment,omitempty"`
	// list of attachments that should be linked to the comment
	Attachments []Attachment `json:"attachments,omitempty"`
}

// NewUpdateCaseStatusRequest instantiates a new UpdateCaseStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCaseStatusRequest() *UpdateCaseStatusRequest {
	this := UpdateCaseStatusRequest{}
	return &this
}

// NewUpdateCaseStatusRequestWithDefaults instantiates a new UpdateCaseStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCaseStatusRequestWithDefaults() *UpdateCaseStatusRequest {
	this := UpdateCaseStatusRequest{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateCaseStatusRequest) GetStatus() CaseStatusEnum {
	if o == nil || o.Status == nil {
		var ret CaseStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCaseStatusRequest) GetStatusOk() (*CaseStatusEnum, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateCaseStatusRequest) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CaseStatusEnum and assigns it to the Status field.
func (o *UpdateCaseStatusRequest) SetStatus(v CaseStatusEnum) {
	o.Status = &v
}

// GetAssignee returns the Assignee field value if set, zero value otherwise.
func (o *UpdateCaseStatusRequest) GetAssignee() CaseAssignee {
	if o == nil || o.Assignee == nil {
		var ret CaseAssignee
		return ret
	}
	return *o.Assignee
}

// GetAssigneeOk returns a tuple with the Assignee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCaseStatusRequest) GetAssigneeOk() (*CaseAssignee, bool) {
	if o == nil || o.Assignee == nil {
		return nil, false
	}
	return o.Assignee, true
}

// HasAssignee returns a boolean if a field has been set.
func (o *UpdateCaseStatusRequest) HasAssignee() bool {
	if o != nil && o.Assignee != nil {
		return true
	}

	return false
}

// SetAssignee gets a reference to the given CaseAssignee and assigns it to the Assignee field.
func (o *UpdateCaseStatusRequest) SetAssignee(v CaseAssignee) {
	o.Assignee = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *UpdateCaseStatusRequest) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCaseStatusRequest) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *UpdateCaseStatusRequest) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *UpdateCaseStatusRequest) SetComment(v string) {
	o.Comment = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *UpdateCaseStatusRequest) GetAttachments() []Attachment {
	if o == nil || o.Attachments == nil {
		var ret []Attachment
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCaseStatusRequest) GetAttachmentsOk() ([]Attachment, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *UpdateCaseStatusRequest) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []Attachment and assigns it to the Attachments field.
func (o *UpdateCaseStatusRequest) SetAttachments(v []Attachment) {
	o.Attachments = v
}

func (o UpdateCaseStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Assignee != nil {
		toSerialize["assignee"] = o.Assignee
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateCaseStatusRequest struct {
	value *UpdateCaseStatusRequest
	isSet bool
}

func (v NullableUpdateCaseStatusRequest) Get() *UpdateCaseStatusRequest {
	return v.value
}

func (v *NullableUpdateCaseStatusRequest) Set(val *UpdateCaseStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCaseStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCaseStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCaseStatusRequest(val *UpdateCaseStatusRequest) *NullableUpdateCaseStatusRequest {
	return &NullableUpdateCaseStatusRequest{value: val, isSet: true}
}

func (v NullableUpdateCaseStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCaseStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
