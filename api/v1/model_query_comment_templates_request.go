/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the QueryCommentTemplatesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryCommentTemplatesRequest{}

// QueryCommentTemplatesRequest struct for QueryCommentTemplatesRequest
type QueryCommentTemplatesRequest struct {
	// The maximum number of entities to return from the query
	Limit *int32 `json:"limit,omitempty"`
	// The number of entities to skip before returning the result
	Offset *int32 `json:"offset,omitempty"`
	// A case template to query for. If not empty the request will only return comments applicable to the template.
	CaseTemplate *string `json:"case_template,omitempty"`
}

// NewQueryCommentTemplatesRequest instantiates a new QueryCommentTemplatesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryCommentTemplatesRequest() *QueryCommentTemplatesRequest {
	this := QueryCommentTemplatesRequest{}
	return &this
}

// NewQueryCommentTemplatesRequestWithDefaults instantiates a new QueryCommentTemplatesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryCommentTemplatesRequestWithDefaults() *QueryCommentTemplatesRequest {
	this := QueryCommentTemplatesRequest{}
	return &this
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *QueryCommentTemplatesRequest) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryCommentTemplatesRequest) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *QueryCommentTemplatesRequest) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *QueryCommentTemplatesRequest) SetLimit(v int32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *QueryCommentTemplatesRequest) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryCommentTemplatesRequest) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *QueryCommentTemplatesRequest) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *QueryCommentTemplatesRequest) SetOffset(v int32) {
	o.Offset = &v
}

// GetCaseTemplate returns the CaseTemplate field value if set, zero value otherwise.
func (o *QueryCommentTemplatesRequest) GetCaseTemplate() string {
	if o == nil || IsNil(o.CaseTemplate) {
		var ret string
		return ret
	}
	return *o.CaseTemplate
}

// GetCaseTemplateOk returns a tuple with the CaseTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryCommentTemplatesRequest) GetCaseTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.CaseTemplate) {
		return nil, false
	}
	return o.CaseTemplate, true
}

// HasCaseTemplate returns a boolean if a field has been set.
func (o *QueryCommentTemplatesRequest) HasCaseTemplate() bool {
	if o != nil && !IsNil(o.CaseTemplate) {
		return true
	}

	return false
}

// SetCaseTemplate gets a reference to the given string and assigns it to the CaseTemplate field.
func (o *QueryCommentTemplatesRequest) SetCaseTemplate(v string) {
	o.CaseTemplate = &v
}

func (o QueryCommentTemplatesRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryCommentTemplatesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.CaseTemplate) {
		toSerialize["case_template"] = o.CaseTemplate
	}
	return toSerialize, nil
}

type NullableQueryCommentTemplatesRequest struct {
	value *QueryCommentTemplatesRequest
	isSet bool
}

func (v NullableQueryCommentTemplatesRequest) Get() *QueryCommentTemplatesRequest {
	return v.value
}

func (v *NullableQueryCommentTemplatesRequest) Set(val *QueryCommentTemplatesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryCommentTemplatesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryCommentTemplatesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryCommentTemplatesRequest(val *QueryCommentTemplatesRequest) *NullableQueryCommentTemplatesRequest {
	return &NullableQueryCommentTemplatesRequest{value: val, isSet: true}
}

func (v NullableQueryCommentTemplatesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryCommentTemplatesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
