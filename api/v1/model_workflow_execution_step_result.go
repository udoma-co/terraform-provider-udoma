/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// WorkflowExecutionStepResult an execution result of a workflow step
type WorkflowExecutionStepResult struct {
	StepRef *string `json:"step_ref,omitempty"`
	// the ID of the action that was executed
	Action *string `json:"action,omitempty"`
	// The timestamp of when the workflow step execution was executed
	ExecutedAt *int64 `json:"executed_at,omitempty"`
	// the result of the workflow step execution as JSON
	Data *string `json:"data,omitempty"`
}

// NewWorkflowExecutionStepResult instantiates a new WorkflowExecutionStepResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowExecutionStepResult() *WorkflowExecutionStepResult {
	this := WorkflowExecutionStepResult{}
	return &this
}

// NewWorkflowExecutionStepResultWithDefaults instantiates a new WorkflowExecutionStepResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowExecutionStepResultWithDefaults() *WorkflowExecutionStepResult {
	this := WorkflowExecutionStepResult{}
	return &this
}

// GetStepRef returns the StepRef field value if set, zero value otherwise.
func (o *WorkflowExecutionStepResult) GetStepRef() string {
	if o == nil || o.StepRef == nil {
		var ret string
		return ret
	}
	return *o.StepRef
}

// GetStepRefOk returns a tuple with the StepRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowExecutionStepResult) GetStepRefOk() (*string, bool) {
	if o == nil || o.StepRef == nil {
		return nil, false
	}
	return o.StepRef, true
}

// HasStepRef returns a boolean if a field has been set.
func (o *WorkflowExecutionStepResult) HasStepRef() bool {
	if o != nil && o.StepRef != nil {
		return true
	}

	return false
}

// SetStepRef gets a reference to the given string and assigns it to the StepRef field.
func (o *WorkflowExecutionStepResult) SetStepRef(v string) {
	o.StepRef = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *WorkflowExecutionStepResult) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowExecutionStepResult) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *WorkflowExecutionStepResult) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *WorkflowExecutionStepResult) SetAction(v string) {
	o.Action = &v
}

// GetExecutedAt returns the ExecutedAt field value if set, zero value otherwise.
func (o *WorkflowExecutionStepResult) GetExecutedAt() int64 {
	if o == nil || o.ExecutedAt == nil {
		var ret int64
		return ret
	}
	return *o.ExecutedAt
}

// GetExecutedAtOk returns a tuple with the ExecutedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowExecutionStepResult) GetExecutedAtOk() (*int64, bool) {
	if o == nil || o.ExecutedAt == nil {
		return nil, false
	}
	return o.ExecutedAt, true
}

// HasExecutedAt returns a boolean if a field has been set.
func (o *WorkflowExecutionStepResult) HasExecutedAt() bool {
	if o != nil && o.ExecutedAt != nil {
		return true
	}

	return false
}

// SetExecutedAt gets a reference to the given int64 and assigns it to the ExecutedAt field.
func (o *WorkflowExecutionStepResult) SetExecutedAt(v int64) {
	o.ExecutedAt = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *WorkflowExecutionStepResult) GetData() string {
	if o == nil || o.Data == nil {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowExecutionStepResult) GetDataOk() (*string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *WorkflowExecutionStepResult) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *WorkflowExecutionStepResult) SetData(v string) {
	o.Data = &v
}

func (o WorkflowExecutionStepResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StepRef != nil {
		toSerialize["step_ref"] = o.StepRef
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.ExecutedAt != nil {
		toSerialize["executed_at"] = o.ExecutedAt
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowExecutionStepResult struct {
	value *WorkflowExecutionStepResult
	isSet bool
}

func (v NullableWorkflowExecutionStepResult) Get() *WorkflowExecutionStepResult {
	return v.value
}

func (v *NullableWorkflowExecutionStepResult) Set(val *WorkflowExecutionStepResult) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowExecutionStepResult) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowExecutionStepResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowExecutionStepResult(val *WorkflowExecutionStepResult) *NullableWorkflowExecutionStepResult {
	return &NullableWorkflowExecutionStepResult{value: val, isSet: true}
}

func (v NullableWorkflowExecutionStepResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowExecutionStepResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
