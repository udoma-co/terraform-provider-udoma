/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WorkflowExecutionStepResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowExecutionStepResult{}

// WorkflowExecutionStepResult this holds the result of the execution of a single workflow step
type WorkflowExecutionStepResult struct {
	StepRef string `json:"step_ref"`
	// the ID of the action that was executed
	Action string `json:"action"`
	// The timestamp of when the workflow step execution was executed
	ExecutedAt int64 `json:"executed_at"`
	// the result of the workflow step execution as JSON
	Data *string `json:"data,omitempty"`
}

type _WorkflowExecutionStepResult WorkflowExecutionStepResult

// NewWorkflowExecutionStepResult instantiates a new WorkflowExecutionStepResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowExecutionStepResult(stepRef string, action string, executedAt int64) *WorkflowExecutionStepResult {
	this := WorkflowExecutionStepResult{}
	this.StepRef = stepRef
	this.Action = action
	this.ExecutedAt = executedAt
	return &this
}

// NewWorkflowExecutionStepResultWithDefaults instantiates a new WorkflowExecutionStepResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowExecutionStepResultWithDefaults() *WorkflowExecutionStepResult {
	this := WorkflowExecutionStepResult{}
	return &this
}

// GetStepRef returns the StepRef field value
func (o *WorkflowExecutionStepResult) GetStepRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StepRef
}

// GetStepRefOk returns a tuple with the StepRef field value
// and a boolean to check if the value has been set.
func (o *WorkflowExecutionStepResult) GetStepRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StepRef, true
}

// SetStepRef sets field value
func (o *WorkflowExecutionStepResult) SetStepRef(v string) {
	o.StepRef = v
}

// GetAction returns the Action field value
func (o *WorkflowExecutionStepResult) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *WorkflowExecutionStepResult) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *WorkflowExecutionStepResult) SetAction(v string) {
	o.Action = v
}

// GetExecutedAt returns the ExecutedAt field value
func (o *WorkflowExecutionStepResult) GetExecutedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExecutedAt
}

// GetExecutedAtOk returns a tuple with the ExecutedAt field value
// and a boolean to check if the value has been set.
func (o *WorkflowExecutionStepResult) GetExecutedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExecutedAt, true
}

// SetExecutedAt sets field value
func (o *WorkflowExecutionStepResult) SetExecutedAt(v int64) {
	o.ExecutedAt = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *WorkflowExecutionStepResult) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowExecutionStepResult) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *WorkflowExecutionStepResult) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *WorkflowExecutionStepResult) SetData(v string) {
	o.Data = &v
}

func (o WorkflowExecutionStepResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowExecutionStepResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["step_ref"] = o.StepRef
	toSerialize["action"] = o.Action
	toSerialize["executed_at"] = o.ExecutedAt
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

func (o *WorkflowExecutionStepResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"step_ref",
		"action",
		"executed_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkflowExecutionStepResult := _WorkflowExecutionStepResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkflowExecutionStepResult)

	if err != nil {
		return err
	}

	*o = WorkflowExecutionStepResult(varWorkflowExecutionStepResult)

	return err
}

type NullableWorkflowExecutionStepResult struct {
	value *WorkflowExecutionStepResult
	isSet bool
}

func (v NullableWorkflowExecutionStepResult) Get() *WorkflowExecutionStepResult {
	return v.value
}

func (v *NullableWorkflowExecutionStepResult) Set(val *WorkflowExecutionStepResult) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowExecutionStepResult) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowExecutionStepResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowExecutionStepResult(val *WorkflowExecutionStepResult) *NullableWorkflowExecutionStepResult {
	return &NullableWorkflowExecutionStepResult{value: val, isSet: true}
}

func (v NullableWorkflowExecutionStepResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowExecutionStepResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
