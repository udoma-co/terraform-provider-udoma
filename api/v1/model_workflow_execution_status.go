/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// WorkflowExecutionStatus the model 'WorkflowExecutionStatus'
type WorkflowExecutionStatus string

// List of WorkflowExecutionStatus
const (
	WORKFLOWEXECUTIONSTATUS_STARTED  WorkflowExecutionStatus = "started"
	WORKFLOWEXECUTIONSTATUS_FINISHED WorkflowExecutionStatus = "finished"
	WORKFLOWEXECUTIONSTATUS_CANCELED WorkflowExecutionStatus = "canceled"
	WORKFLOWEXECUTIONSTATUS_ARCHIVED WorkflowExecutionStatus = "archived"
)

// All allowed values of WorkflowExecutionStatus enum
var AllowedWorkflowExecutionStatusEnumValues = []WorkflowExecutionStatus{
	"started",
	"finished",
	"canceled",
	"archived",
}

func (v *WorkflowExecutionStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WorkflowExecutionStatus(value)
	for _, existing := range AllowedWorkflowExecutionStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WorkflowExecutionStatus", value)
}

// NewWorkflowExecutionStatusFromValue returns a pointer to a valid WorkflowExecutionStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWorkflowExecutionStatusFromValue(v string) (*WorkflowExecutionStatus, error) {
	ev := WorkflowExecutionStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WorkflowExecutionStatus: valid values are %v", v, AllowedWorkflowExecutionStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WorkflowExecutionStatus) IsValid() bool {
	for _, existing := range AllowedWorkflowExecutionStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WorkflowExecutionStatus value
func (v WorkflowExecutionStatus) Ptr() *WorkflowExecutionStatus {
	return &v
}

type NullableWorkflowExecutionStatus struct {
	value *WorkflowExecutionStatus
	isSet bool
}

func (v NullableWorkflowExecutionStatus) Get() *WorkflowExecutionStatus {
	return v.value
}

func (v *NullableWorkflowExecutionStatus) Set(val *WorkflowExecutionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowExecutionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowExecutionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowExecutionStatus(val *WorkflowExecutionStatus) *NullableWorkflowExecutionStatus {
	return &NullableWorkflowExecutionStatus{value: val, isSet: true}
}

func (v NullableWorkflowExecutionStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowExecutionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
