/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ReportDefinitionAttributesPartial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReportDefinitionAttributesPartial{}

// ReportDefinitionAttributesPartial struct for ReportDefinitionAttributesPartial
type ReportDefinitionAttributesPartial struct {
	// The name of the report
	Name string `json:"name"`
	// The description of the report
	Description  *string            `json:"description,omitempty"`
	ResultSchema ReportResultSchema `json:"result_schema"`
	// The JS script to execute to map the result to the result schema
	ResultMapper string             `json:"result_mapper"`
	Parameters   NullableCustomForm `json:"parameters,omitempty"`
	// The JS script to execute to generate the report result
	Script string `json:"script"`
}

type _ReportDefinitionAttributesPartial ReportDefinitionAttributesPartial

// NewReportDefinitionAttributesPartial instantiates a new ReportDefinitionAttributesPartial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportDefinitionAttributesPartial(name string, resultSchema ReportResultSchema, resultMapper string, script string) *ReportDefinitionAttributesPartial {
	this := ReportDefinitionAttributesPartial{}
	this.Name = name
	this.ResultSchema = resultSchema
	this.ResultMapper = resultMapper
	this.Script = script
	return &this
}

// NewReportDefinitionAttributesPartialWithDefaults instantiates a new ReportDefinitionAttributesPartial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportDefinitionAttributesPartialWithDefaults() *ReportDefinitionAttributesPartial {
	this := ReportDefinitionAttributesPartial{}
	return &this
}

// GetName returns the Name field value
func (o *ReportDefinitionAttributesPartial) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ReportDefinitionAttributesPartial) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ReportDefinitionAttributesPartial) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ReportDefinitionAttributesPartial) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportDefinitionAttributesPartial) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ReportDefinitionAttributesPartial) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ReportDefinitionAttributesPartial) SetDescription(v string) {
	o.Description = &v
}

// GetResultSchema returns the ResultSchema field value
func (o *ReportDefinitionAttributesPartial) GetResultSchema() ReportResultSchema {
	if o == nil {
		var ret ReportResultSchema
		return ret
	}

	return o.ResultSchema
}

// GetResultSchemaOk returns a tuple with the ResultSchema field value
// and a boolean to check if the value has been set.
func (o *ReportDefinitionAttributesPartial) GetResultSchemaOk() (*ReportResultSchema, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResultSchema, true
}

// SetResultSchema sets field value
func (o *ReportDefinitionAttributesPartial) SetResultSchema(v ReportResultSchema) {
	o.ResultSchema = v
}

// GetResultMapper returns the ResultMapper field value
func (o *ReportDefinitionAttributesPartial) GetResultMapper() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResultMapper
}

// GetResultMapperOk returns a tuple with the ResultMapper field value
// and a boolean to check if the value has been set.
func (o *ReportDefinitionAttributesPartial) GetResultMapperOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResultMapper, true
}

// SetResultMapper sets field value
func (o *ReportDefinitionAttributesPartial) SetResultMapper(v string) {
	o.ResultMapper = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReportDefinitionAttributesPartial) GetParameters() CustomForm {
	if o == nil || IsNil(o.Parameters.Get()) {
		var ret CustomForm
		return ret
	}
	return *o.Parameters.Get()
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReportDefinitionAttributesPartial) GetParametersOk() (*CustomForm, bool) {
	if o == nil {
		return nil, false
	}
	return o.Parameters.Get(), o.Parameters.IsSet()
}

// HasParameters returns a boolean if a field has been set.
func (o *ReportDefinitionAttributesPartial) HasParameters() bool {
	if o != nil && o.Parameters.IsSet() {
		return true
	}

	return false
}

// SetParameters gets a reference to the given NullableCustomForm and assigns it to the Parameters field.
func (o *ReportDefinitionAttributesPartial) SetParameters(v CustomForm) {
	o.Parameters.Set(&v)
}

// SetParametersNil sets the value for Parameters to be an explicit nil
func (o *ReportDefinitionAttributesPartial) SetParametersNil() {
	o.Parameters.Set(nil)
}

// UnsetParameters ensures that no value is present for Parameters, not even an explicit nil
func (o *ReportDefinitionAttributesPartial) UnsetParameters() {
	o.Parameters.Unset()
}

// GetScript returns the Script field value
func (o *ReportDefinitionAttributesPartial) GetScript() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Script
}

// GetScriptOk returns a tuple with the Script field value
// and a boolean to check if the value has been set.
func (o *ReportDefinitionAttributesPartial) GetScriptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Script, true
}

// SetScript sets field value
func (o *ReportDefinitionAttributesPartial) SetScript(v string) {
	o.Script = v
}

func (o ReportDefinitionAttributesPartial) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReportDefinitionAttributesPartial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["result_schema"] = o.ResultSchema
	toSerialize["result_mapper"] = o.ResultMapper
	if o.Parameters.IsSet() {
		toSerialize["parameters"] = o.Parameters.Get()
	}
	toSerialize["script"] = o.Script
	return toSerialize, nil
}

func (o *ReportDefinitionAttributesPartial) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"result_schema",
		"result_mapper",
		"script",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReportDefinitionAttributesPartial := _ReportDefinitionAttributesPartial{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReportDefinitionAttributesPartial)

	if err != nil {
		return err
	}

	*o = ReportDefinitionAttributesPartial(varReportDefinitionAttributesPartial)

	return err
}

type NullableReportDefinitionAttributesPartial struct {
	value *ReportDefinitionAttributesPartial
	isSet bool
}

func (v NullableReportDefinitionAttributesPartial) Get() *ReportDefinitionAttributesPartial {
	return v.value
}

func (v *NullableReportDefinitionAttributesPartial) Set(val *ReportDefinitionAttributesPartial) {
	v.value = val
	v.isSet = true
}

func (v NullableReportDefinitionAttributesPartial) IsSet() bool {
	return v.isSet
}

func (v *NullableReportDefinitionAttributesPartial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportDefinitionAttributesPartial(val *ReportDefinitionAttributesPartial) *NullableReportDefinitionAttributesPartial {
	return &NullableReportDefinitionAttributesPartial{value: val, isSet: true}
}

func (v NullableReportDefinitionAttributesPartial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportDefinitionAttributesPartial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
