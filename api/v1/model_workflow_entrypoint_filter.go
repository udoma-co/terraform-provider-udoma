/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WorkflowEntrypointFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowEntrypointFilter{}

// WorkflowEntrypointFilter a filter that controls which entrypoints are shown in the UI
type WorkflowEntrypointFilter struct {
	// the name of the attribute to filter by. This can be any attribute of the entity that is used to trigger the workflow execution. This can also be a nested attribute, e.g. \"case.template.id\".
	Attribute string `json:"attribute"`
	// the value of the attribute to filter by, as a static string.
	Value string `json:"value"`
	// optional group name to which this filter belongs. Filters in the same group will evaluated with an OR operator, while filters in different groups will be evaluated with an AND operator. If no group is provided, the filter will be evaluated with an AND operator.
	Group *string `json:"group,omitempty"`
}

type _WorkflowEntrypointFilter WorkflowEntrypointFilter

// NewWorkflowEntrypointFilter instantiates a new WorkflowEntrypointFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowEntrypointFilter(attribute string, value string) *WorkflowEntrypointFilter {
	this := WorkflowEntrypointFilter{}
	this.Attribute = attribute
	this.Value = value
	return &this
}

// NewWorkflowEntrypointFilterWithDefaults instantiates a new WorkflowEntrypointFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowEntrypointFilterWithDefaults() *WorkflowEntrypointFilter {
	this := WorkflowEntrypointFilter{}
	return &this
}

// GetAttribute returns the Attribute field value
func (o *WorkflowEntrypointFilter) GetAttribute() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value
// and a boolean to check if the value has been set.
func (o *WorkflowEntrypointFilter) GetAttributeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attribute, true
}

// SetAttribute sets field value
func (o *WorkflowEntrypointFilter) SetAttribute(v string) {
	o.Attribute = v
}

// GetValue returns the Value field value
func (o *WorkflowEntrypointFilter) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *WorkflowEntrypointFilter) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *WorkflowEntrypointFilter) SetValue(v string) {
	o.Value = v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *WorkflowEntrypointFilter) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowEntrypointFilter) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *WorkflowEntrypointFilter) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *WorkflowEntrypointFilter) SetGroup(v string) {
	o.Group = &v
}

func (o WorkflowEntrypointFilter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowEntrypointFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attribute"] = o.Attribute
	toSerialize["value"] = o.Value
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	return toSerialize, nil
}

func (o *WorkflowEntrypointFilter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attribute",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkflowEntrypointFilter := _WorkflowEntrypointFilter{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkflowEntrypointFilter)

	if err != nil {
		return err
	}

	*o = WorkflowEntrypointFilter(varWorkflowEntrypointFilter)

	return err
}

type NullableWorkflowEntrypointFilter struct {
	value *WorkflowEntrypointFilter
	isSet bool
}

func (v NullableWorkflowEntrypointFilter) Get() *WorkflowEntrypointFilter {
	return v.value
}

func (v *NullableWorkflowEntrypointFilter) Set(val *WorkflowEntrypointFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowEntrypointFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowEntrypointFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowEntrypointFilter(val *WorkflowEntrypointFilter) *NullableWorkflowEntrypointFilter {
	return &NullableWorkflowEntrypointFilter{value: val, isSet: true}
}

func (v NullableWorkflowEntrypointFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowEntrypointFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
