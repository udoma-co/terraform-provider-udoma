/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateOrUpdateCaseTemplateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateCaseTemplateRequest{}

// CreateOrUpdateCaseTemplateRequest struct for CreateOrUpdateCaseTemplateRequest
type CreateOrUpdateCaseTemplateRequest struct {
	// The name of the case template
	Name string `json:"name"`
	// The list of access possibilities for the template. This is used to determine  in which parts of the webapp the template can be used.
	Access []CaseTemplateAccessibility `json:"access"`
	// Optional JS expression used to generate the name of the actual case
	NameExpression *string `json:"name_expression,omitempty"`
	// a map of values, where the key and values are strings
	Label *map[string]string `json:"label,omitempty"`
	// a map of values, where the key and values are strings
	Description *map[string]string `json:"description,omitempty"`
	// a map of values, where the key and values are strings
	InfoText *map[string]string `json:"info_text,omitempty"`
	// The font-awesome icon to use for this template
	Icon         *string                      `json:"icon,omitempty"`
	CustomInputs NullableCustomForm           `json:"custom_inputs"`
	Config       CaseConfig                   `json:"config"`
	AdCategories []CaseTemplateAdCategoryEnum `json:"ad_categories,omitempty"`
	// a map of values, where the key and values are strings
	ConfirmationText *map[string]string `json:"confirmation_text,omitempty"`
}

type _CreateOrUpdateCaseTemplateRequest CreateOrUpdateCaseTemplateRequest

// NewCreateOrUpdateCaseTemplateRequest instantiates a new CreateOrUpdateCaseTemplateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateCaseTemplateRequest(name string, access []CaseTemplateAccessibility, customInputs NullableCustomForm, config CaseConfig) *CreateOrUpdateCaseTemplateRequest {
	this := CreateOrUpdateCaseTemplateRequest{}
	this.Name = name
	this.Access = access
	this.CustomInputs = customInputs
	this.Config = config
	return &this
}

// NewCreateOrUpdateCaseTemplateRequestWithDefaults instantiates a new CreateOrUpdateCaseTemplateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateCaseTemplateRequestWithDefaults() *CreateOrUpdateCaseTemplateRequest {
	this := CreateOrUpdateCaseTemplateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateOrUpdateCaseTemplateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateCaseTemplateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateOrUpdateCaseTemplateRequest) SetName(v string) {
	o.Name = v
}

// GetAccess returns the Access field value
func (o *CreateOrUpdateCaseTemplateRequest) GetAccess() []CaseTemplateAccessibility {
	if o == nil {
		var ret []CaseTemplateAccessibility
		return ret
	}

	return o.Access
}

// GetAccessOk returns a tuple with the Access field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateCaseTemplateRequest) GetAccessOk() ([]CaseTemplateAccessibility, bool) {
	if o == nil {
		return nil, false
	}
	return o.Access, true
}

// SetAccess sets field value
func (o *CreateOrUpdateCaseTemplateRequest) SetAccess(v []CaseTemplateAccessibility) {
	o.Access = v
}

// GetNameExpression returns the NameExpression field value if set, zero value otherwise.
func (o *CreateOrUpdateCaseTemplateRequest) GetNameExpression() string {
	if o == nil || IsNil(o.NameExpression) {
		var ret string
		return ret
	}
	return *o.NameExpression
}

// GetNameExpressionOk returns a tuple with the NameExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateCaseTemplateRequest) GetNameExpressionOk() (*string, bool) {
	if o == nil || IsNil(o.NameExpression) {
		return nil, false
	}
	return o.NameExpression, true
}

// HasNameExpression returns a boolean if a field has been set.
func (o *CreateOrUpdateCaseTemplateRequest) HasNameExpression() bool {
	if o != nil && !IsNil(o.NameExpression) {
		return true
	}

	return false
}

// SetNameExpression gets a reference to the given string and assigns it to the NameExpression field.
func (o *CreateOrUpdateCaseTemplateRequest) SetNameExpression(v string) {
	o.NameExpression = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CreateOrUpdateCaseTemplateRequest) GetLabel() map[string]string {
	if o == nil || IsNil(o.Label) {
		var ret map[string]string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateCaseTemplateRequest) GetLabelOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CreateOrUpdateCaseTemplateRequest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given map[string]string and assigns it to the Label field.
func (o *CreateOrUpdateCaseTemplateRequest) SetLabel(v map[string]string) {
	o.Label = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateOrUpdateCaseTemplateRequest) GetDescription() map[string]string {
	if o == nil || IsNil(o.Description) {
		var ret map[string]string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateCaseTemplateRequest) GetDescriptionOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateOrUpdateCaseTemplateRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given map[string]string and assigns it to the Description field.
func (o *CreateOrUpdateCaseTemplateRequest) SetDescription(v map[string]string) {
	o.Description = &v
}

// GetInfoText returns the InfoText field value if set, zero value otherwise.
func (o *CreateOrUpdateCaseTemplateRequest) GetInfoText() map[string]string {
	if o == nil || IsNil(o.InfoText) {
		var ret map[string]string
		return ret
	}
	return *o.InfoText
}

// GetInfoTextOk returns a tuple with the InfoText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateCaseTemplateRequest) GetInfoTextOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.InfoText) {
		return nil, false
	}
	return o.InfoText, true
}

// HasInfoText returns a boolean if a field has been set.
func (o *CreateOrUpdateCaseTemplateRequest) HasInfoText() bool {
	if o != nil && !IsNil(o.InfoText) {
		return true
	}

	return false
}

// SetInfoText gets a reference to the given map[string]string and assigns it to the InfoText field.
func (o *CreateOrUpdateCaseTemplateRequest) SetInfoText(v map[string]string) {
	o.InfoText = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *CreateOrUpdateCaseTemplateRequest) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateCaseTemplateRequest) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *CreateOrUpdateCaseTemplateRequest) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *CreateOrUpdateCaseTemplateRequest) SetIcon(v string) {
	o.Icon = &v
}

// GetCustomInputs returns the CustomInputs field value
// If the value is explicit nil, the zero value for CustomForm will be returned
func (o *CreateOrUpdateCaseTemplateRequest) GetCustomInputs() CustomForm {
	if o == nil || o.CustomInputs.Get() == nil {
		var ret CustomForm
		return ret
	}

	return *o.CustomInputs.Get()
}

// GetCustomInputsOk returns a tuple with the CustomInputs field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateCaseTemplateRequest) GetCustomInputsOk() (*CustomForm, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomInputs.Get(), o.CustomInputs.IsSet()
}

// SetCustomInputs sets field value
func (o *CreateOrUpdateCaseTemplateRequest) SetCustomInputs(v CustomForm) {
	o.CustomInputs.Set(&v)
}

// GetConfig returns the Config field value
func (o *CreateOrUpdateCaseTemplateRequest) GetConfig() CaseConfig {
	if o == nil {
		var ret CaseConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateCaseTemplateRequest) GetConfigOk() (*CaseConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *CreateOrUpdateCaseTemplateRequest) SetConfig(v CaseConfig) {
	o.Config = v
}

// GetAdCategories returns the AdCategories field value if set, zero value otherwise.
func (o *CreateOrUpdateCaseTemplateRequest) GetAdCategories() []CaseTemplateAdCategoryEnum {
	if o == nil || IsNil(o.AdCategories) {
		var ret []CaseTemplateAdCategoryEnum
		return ret
	}
	return o.AdCategories
}

// GetAdCategoriesOk returns a tuple with the AdCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateCaseTemplateRequest) GetAdCategoriesOk() ([]CaseTemplateAdCategoryEnum, bool) {
	if o == nil || IsNil(o.AdCategories) {
		return nil, false
	}
	return o.AdCategories, true
}

// HasAdCategories returns a boolean if a field has been set.
func (o *CreateOrUpdateCaseTemplateRequest) HasAdCategories() bool {
	if o != nil && !IsNil(o.AdCategories) {
		return true
	}

	return false
}

// SetAdCategories gets a reference to the given []CaseTemplateAdCategoryEnum and assigns it to the AdCategories field.
func (o *CreateOrUpdateCaseTemplateRequest) SetAdCategories(v []CaseTemplateAdCategoryEnum) {
	o.AdCategories = v
}

// GetConfirmationText returns the ConfirmationText field value if set, zero value otherwise.
func (o *CreateOrUpdateCaseTemplateRequest) GetConfirmationText() map[string]string {
	if o == nil || IsNil(o.ConfirmationText) {
		var ret map[string]string
		return ret
	}
	return *o.ConfirmationText
}

// GetConfirmationTextOk returns a tuple with the ConfirmationText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateCaseTemplateRequest) GetConfirmationTextOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ConfirmationText) {
		return nil, false
	}
	return o.ConfirmationText, true
}

// HasConfirmationText returns a boolean if a field has been set.
func (o *CreateOrUpdateCaseTemplateRequest) HasConfirmationText() bool {
	if o != nil && !IsNil(o.ConfirmationText) {
		return true
	}

	return false
}

// SetConfirmationText gets a reference to the given map[string]string and assigns it to the ConfirmationText field.
func (o *CreateOrUpdateCaseTemplateRequest) SetConfirmationText(v map[string]string) {
	o.ConfirmationText = &v
}

func (o CreateOrUpdateCaseTemplateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateCaseTemplateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["access"] = o.Access
	if !IsNil(o.NameExpression) {
		toSerialize["name_expression"] = o.NameExpression
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.InfoText) {
		toSerialize["info_text"] = o.InfoText
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	toSerialize["custom_inputs"] = o.CustomInputs.Get()
	toSerialize["config"] = o.Config
	if !IsNil(o.AdCategories) {
		toSerialize["ad_categories"] = o.AdCategories
	}
	if !IsNil(o.ConfirmationText) {
		toSerialize["confirmation_text"] = o.ConfirmationText
	}
	return toSerialize, nil
}

func (o *CreateOrUpdateCaseTemplateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"access",
		"custom_inputs",
		"config",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrUpdateCaseTemplateRequest := _CreateOrUpdateCaseTemplateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrUpdateCaseTemplateRequest)

	if err != nil {
		return err
	}

	*o = CreateOrUpdateCaseTemplateRequest(varCreateOrUpdateCaseTemplateRequest)

	return err
}

type NullableCreateOrUpdateCaseTemplateRequest struct {
	value *CreateOrUpdateCaseTemplateRequest
	isSet bool
}

func (v NullableCreateOrUpdateCaseTemplateRequest) Get() *CreateOrUpdateCaseTemplateRequest {
	return v.value
}

func (v *NullableCreateOrUpdateCaseTemplateRequest) Set(val *CreateOrUpdateCaseTemplateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateCaseTemplateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateCaseTemplateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateCaseTemplateRequest(val *CreateOrUpdateCaseTemplateRequest) *NullableCreateOrUpdateCaseTemplateRequest {
	return &NullableCreateOrUpdateCaseTemplateRequest{value: val, isSet: true}
}

func (v NullableCreateOrUpdateCaseTemplateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateCaseTemplateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
