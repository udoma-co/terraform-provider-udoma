/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WorkflowStepDefinitionAttributesPartial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowStepDefinitionAttributesPartial{}

// WorkflowStepDefinitionAttributesPartial the definition of a single step within a workflow
type WorkflowStepDefinitionAttributesPartial struct {
	// the ID of the step, unique within the workflow. This is used to handle  the flow of the workflow execution.
	Id string `json:"id"`
	// the type of the step, which defines how it will be rendered in the UI and how it will be executed in the backend.
	Type string `json:"type"`
	// a parameter of a workflow step or step action. The value of the parameter is contextual and can vary in type and meaning depending on the step or action that uses it. If used in a step, the parameter will be available in the UI and will not be interpreted, i.e. JS expressions are not allowed. In actions however, the parameter might be interpreted as a JS expression, if the action type requires it.
	Parameters map[string]interface{} `json:"parameters,omitempty"`
	// a map of values, where the key and values are strings
	DynamicParameters *map[string]string `json:"dynamic_parameters,omitempty"`
}

type _WorkflowStepDefinitionAttributesPartial WorkflowStepDefinitionAttributesPartial

// NewWorkflowStepDefinitionAttributesPartial instantiates a new WorkflowStepDefinitionAttributesPartial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowStepDefinitionAttributesPartial(id string, type_ string) *WorkflowStepDefinitionAttributesPartial {
	this := WorkflowStepDefinitionAttributesPartial{}
	this.Id = id
	this.Type = type_
	return &this
}

// NewWorkflowStepDefinitionAttributesPartialWithDefaults instantiates a new WorkflowStepDefinitionAttributesPartial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowStepDefinitionAttributesPartialWithDefaults() *WorkflowStepDefinitionAttributesPartial {
	this := WorkflowStepDefinitionAttributesPartial{}
	return &this
}

// GetId returns the Id field value
func (o *WorkflowStepDefinitionAttributesPartial) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkflowStepDefinitionAttributesPartial) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkflowStepDefinitionAttributesPartial) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *WorkflowStepDefinitionAttributesPartial) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *WorkflowStepDefinitionAttributesPartial) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *WorkflowStepDefinitionAttributesPartial) SetType(v string) {
	o.Type = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *WorkflowStepDefinitionAttributesPartial) GetParameters() map[string]interface{} {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStepDefinitionAttributesPartial) GetParametersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Parameters) {
		return map[string]interface{}{}, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *WorkflowStepDefinitionAttributesPartial) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]interface{} and assigns it to the Parameters field.
func (o *WorkflowStepDefinitionAttributesPartial) SetParameters(v map[string]interface{}) {
	o.Parameters = v
}

// GetDynamicParameters returns the DynamicParameters field value if set, zero value otherwise.
func (o *WorkflowStepDefinitionAttributesPartial) GetDynamicParameters() map[string]string {
	if o == nil || IsNil(o.DynamicParameters) {
		var ret map[string]string
		return ret
	}
	return *o.DynamicParameters
}

// GetDynamicParametersOk returns a tuple with the DynamicParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStepDefinitionAttributesPartial) GetDynamicParametersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.DynamicParameters) {
		return nil, false
	}
	return o.DynamicParameters, true
}

// HasDynamicParameters returns a boolean if a field has been set.
func (o *WorkflowStepDefinitionAttributesPartial) HasDynamicParameters() bool {
	if o != nil && !IsNil(o.DynamicParameters) {
		return true
	}

	return false
}

// SetDynamicParameters gets a reference to the given map[string]string and assigns it to the DynamicParameters field.
func (o *WorkflowStepDefinitionAttributesPartial) SetDynamicParameters(v map[string]string) {
	o.DynamicParameters = &v
}

func (o WorkflowStepDefinitionAttributesPartial) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowStepDefinitionAttributesPartial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.DynamicParameters) {
		toSerialize["dynamic_parameters"] = o.DynamicParameters
	}
	return toSerialize, nil
}

func (o *WorkflowStepDefinitionAttributesPartial) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkflowStepDefinitionAttributesPartial := _WorkflowStepDefinitionAttributesPartial{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkflowStepDefinitionAttributesPartial)

	if err != nil {
		return err
	}

	*o = WorkflowStepDefinitionAttributesPartial(varWorkflowStepDefinitionAttributesPartial)

	return err
}

type NullableWorkflowStepDefinitionAttributesPartial struct {
	value *WorkflowStepDefinitionAttributesPartial
	isSet bool
}

func (v NullableWorkflowStepDefinitionAttributesPartial) Get() *WorkflowStepDefinitionAttributesPartial {
	return v.value
}

func (v *NullableWorkflowStepDefinitionAttributesPartial) Set(val *WorkflowStepDefinitionAttributesPartial) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowStepDefinitionAttributesPartial) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowStepDefinitionAttributesPartial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowStepDefinitionAttributesPartial(val *WorkflowStepDefinitionAttributesPartial) *NullableWorkflowStepDefinitionAttributesPartial {
	return &NullableWorkflowStepDefinitionAttributesPartial{value: val, isSet: true}
}

func (v NullableWorkflowStepDefinitionAttributesPartial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowStepDefinitionAttributesPartial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
