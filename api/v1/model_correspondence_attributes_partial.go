/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CorrespondenceAttributesPartial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorrespondenceAttributesPartial{}

// CorrespondenceAttributesPartial Attributes used within a tenants correspondence
type CorrespondenceAttributesPartial struct {
	// A descriptive display name
	DisplayName string `json:"display_name"`
	// A reference to the document generation that is being shared with the tenant
	DocumentRef string       `json:"document_ref"`
	Recipient   *ContactData `json:"recipient,omitempty"`
}

type _CorrespondenceAttributesPartial CorrespondenceAttributesPartial

// NewCorrespondenceAttributesPartial instantiates a new CorrespondenceAttributesPartial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorrespondenceAttributesPartial(displayName string, documentRef string) *CorrespondenceAttributesPartial {
	this := CorrespondenceAttributesPartial{}
	this.DisplayName = displayName
	this.DocumentRef = documentRef
	return &this
}

// NewCorrespondenceAttributesPartialWithDefaults instantiates a new CorrespondenceAttributesPartial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorrespondenceAttributesPartialWithDefaults() *CorrespondenceAttributesPartial {
	this := CorrespondenceAttributesPartial{}
	return &this
}

// GetDisplayName returns the DisplayName field value
func (o *CorrespondenceAttributesPartial) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *CorrespondenceAttributesPartial) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *CorrespondenceAttributesPartial) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetDocumentRef returns the DocumentRef field value
func (o *CorrespondenceAttributesPartial) GetDocumentRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DocumentRef
}

// GetDocumentRefOk returns a tuple with the DocumentRef field value
// and a boolean to check if the value has been set.
func (o *CorrespondenceAttributesPartial) GetDocumentRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DocumentRef, true
}

// SetDocumentRef sets field value
func (o *CorrespondenceAttributesPartial) SetDocumentRef(v string) {
	o.DocumentRef = v
}

// GetRecipient returns the Recipient field value if set, zero value otherwise.
func (o *CorrespondenceAttributesPartial) GetRecipient() ContactData {
	if o == nil || IsNil(o.Recipient) {
		var ret ContactData
		return ret
	}
	return *o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrespondenceAttributesPartial) GetRecipientOk() (*ContactData, bool) {
	if o == nil || IsNil(o.Recipient) {
		return nil, false
	}
	return o.Recipient, true
}

// HasRecipient returns a boolean if a field has been set.
func (o *CorrespondenceAttributesPartial) HasRecipient() bool {
	if o != nil && !IsNil(o.Recipient) {
		return true
	}

	return false
}

// SetRecipient gets a reference to the given ContactData and assigns it to the Recipient field.
func (o *CorrespondenceAttributesPartial) SetRecipient(v ContactData) {
	o.Recipient = &v
}

func (o CorrespondenceAttributesPartial) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorrespondenceAttributesPartial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["display_name"] = o.DisplayName
	toSerialize["document_ref"] = o.DocumentRef
	if !IsNil(o.Recipient) {
		toSerialize["recipient"] = o.Recipient
	}
	return toSerialize, nil
}

func (o *CorrespondenceAttributesPartial) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"display_name",
		"document_ref",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorrespondenceAttributesPartial := _CorrespondenceAttributesPartial{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorrespondenceAttributesPartial)

	if err != nil {
		return err
	}

	*o = CorrespondenceAttributesPartial(varCorrespondenceAttributesPartial)

	return err
}

type NullableCorrespondenceAttributesPartial struct {
	value *CorrespondenceAttributesPartial
	isSet bool
}

func (v NullableCorrespondenceAttributesPartial) Get() *CorrespondenceAttributesPartial {
	return v.value
}

func (v *NullableCorrespondenceAttributesPartial) Set(val *CorrespondenceAttributesPartial) {
	v.value = val
	v.isSet = true
}

func (v NullableCorrespondenceAttributesPartial) IsSet() bool {
	return v.isSet
}

func (v *NullableCorrespondenceAttributesPartial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorrespondenceAttributesPartial(val *CorrespondenceAttributesPartial) *NullableCorrespondenceAttributesPartial {
	return &NullableCorrespondenceAttributesPartial{value: val, isSet: true}
}

func (v NullableCorrespondenceAttributesPartial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorrespondenceAttributesPartial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
