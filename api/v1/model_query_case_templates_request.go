/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// QueryCaseTemplatesRequest struct for QueryCaseTemplatesRequest
type QueryCaseTemplatesRequest struct {
	// The maximum number of case templates to return.
	Limit *int32 `json:"limit,omitempty"`
}

// NewQueryCaseTemplatesRequest instantiates a new QueryCaseTemplatesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryCaseTemplatesRequest() *QueryCaseTemplatesRequest {
	this := QueryCaseTemplatesRequest{}
	return &this
}

// NewQueryCaseTemplatesRequestWithDefaults instantiates a new QueryCaseTemplatesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryCaseTemplatesRequestWithDefaults() *QueryCaseTemplatesRequest {
	this := QueryCaseTemplatesRequest{}
	return &this
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *QueryCaseTemplatesRequest) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryCaseTemplatesRequest) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *QueryCaseTemplatesRequest) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *QueryCaseTemplatesRequest) SetLimit(v int32) {
	o.Limit = &v
}

func (o QueryCaseTemplatesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	return json.Marshal(toSerialize)
}

type NullableQueryCaseTemplatesRequest struct {
	value *QueryCaseTemplatesRequest
	isSet bool
}

func (v NullableQueryCaseTemplatesRequest) Get() *QueryCaseTemplatesRequest {
	return v.value
}

func (v *NullableQueryCaseTemplatesRequest) Set(val *QueryCaseTemplatesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryCaseTemplatesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryCaseTemplatesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryCaseTemplatesRequest(val *QueryCaseTemplatesRequest) *NullableQueryCaseTemplatesRequest {
	return &NullableQueryCaseTemplatesRequest{value: val, isSet: true}
}

func (v NullableQueryCaseTemplatesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryCaseTemplatesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
