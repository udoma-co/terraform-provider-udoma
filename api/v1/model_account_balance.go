/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the AccountBalance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountBalance{}

// AccountBalance The current balance of a financial account
type AccountBalance struct {
	// The flat number associated with the account
	FlatNumber *string `json:"flat_number,omitempty"`
	// The current balance of the account
	Balance *float64 `json:"balance,omitempty"`
}

// NewAccountBalance instantiates a new AccountBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountBalance() *AccountBalance {
	this := AccountBalance{}
	return &this
}

// NewAccountBalanceWithDefaults instantiates a new AccountBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountBalanceWithDefaults() *AccountBalance {
	this := AccountBalance{}
	return &this
}

// GetFlatNumber returns the FlatNumber field value if set, zero value otherwise.
func (o *AccountBalance) GetFlatNumber() string {
	if o == nil || IsNil(o.FlatNumber) {
		var ret string
		return ret
	}
	return *o.FlatNumber
}

// GetFlatNumberOk returns a tuple with the FlatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBalance) GetFlatNumberOk() (*string, bool) {
	if o == nil || IsNil(o.FlatNumber) {
		return nil, false
	}
	return o.FlatNumber, true
}

// HasFlatNumber returns a boolean if a field has been set.
func (o *AccountBalance) HasFlatNumber() bool {
	if o != nil && !IsNil(o.FlatNumber) {
		return true
	}

	return false
}

// SetFlatNumber gets a reference to the given string and assigns it to the FlatNumber field.
func (o *AccountBalance) SetFlatNumber(v string) {
	o.FlatNumber = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *AccountBalance) GetBalance() float64 {
	if o == nil || IsNil(o.Balance) {
		var ret float64
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBalance) GetBalanceOk() (*float64, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *AccountBalance) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given float64 and assigns it to the Balance field.
func (o *AccountBalance) SetBalance(v float64) {
	o.Balance = &v
}

func (o AccountBalance) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountBalance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FlatNumber) {
		toSerialize["flat_number"] = o.FlatNumber
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	return toSerialize, nil
}

type NullableAccountBalance struct {
	value *AccountBalance
	isSet bool
}

func (v NullableAccountBalance) Get() *AccountBalance {
	return v.value
}

func (v *NullableAccountBalance) Set(val *AccountBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountBalance(val *AccountBalance) *NullableAccountBalance {
	return &NullableAccountBalance{value: val, isSet: true}
}

func (v NullableAccountBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
