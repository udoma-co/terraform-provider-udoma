/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CaseReportingEndpointCategory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CaseReportingEndpointCategory{}

// CaseReportingEndpointCategory struct for CaseReportingEndpointCategory
type CaseReportingEndpointCategory struct {
	// a map of values, where the key and values are strings
	Name map[string]string `json:"name"`
	// The priority of the category, used to decide the order in which to display the categories on the reporting endpoint page.
	Priority *int32 `json:"priority,omitempty"`
	// A list of Template objects, that contain the unique IDs of the template and priorities.
	Templates []CaseReportingEndpointCategoryTemplatesInner `json:"templates"`
}

type _CaseReportingEndpointCategory CaseReportingEndpointCategory

// NewCaseReportingEndpointCategory instantiates a new CaseReportingEndpointCategory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaseReportingEndpointCategory(name map[string]string, templates []CaseReportingEndpointCategoryTemplatesInner) *CaseReportingEndpointCategory {
	this := CaseReportingEndpointCategory{}
	this.Name = name
	this.Templates = templates
	return &this
}

// NewCaseReportingEndpointCategoryWithDefaults instantiates a new CaseReportingEndpointCategory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaseReportingEndpointCategoryWithDefaults() *CaseReportingEndpointCategory {
	this := CaseReportingEndpointCategory{}
	return &this
}

// GetName returns the Name field value
func (o *CaseReportingEndpointCategory) GetName() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CaseReportingEndpointCategory) GetNameOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CaseReportingEndpointCategory) SetName(v map[string]string) {
	o.Name = v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *CaseReportingEndpointCategory) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseReportingEndpointCategory) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *CaseReportingEndpointCategory) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *CaseReportingEndpointCategory) SetPriority(v int32) {
	o.Priority = &v
}

// GetTemplates returns the Templates field value
func (o *CaseReportingEndpointCategory) GetTemplates() []CaseReportingEndpointCategoryTemplatesInner {
	if o == nil {
		var ret []CaseReportingEndpointCategoryTemplatesInner
		return ret
	}

	return o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value
// and a boolean to check if the value has been set.
func (o *CaseReportingEndpointCategory) GetTemplatesOk() ([]CaseReportingEndpointCategoryTemplatesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Templates, true
}

// SetTemplates sets field value
func (o *CaseReportingEndpointCategory) SetTemplates(v []CaseReportingEndpointCategoryTemplatesInner) {
	o.Templates = v
}

func (o CaseReportingEndpointCategory) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CaseReportingEndpointCategory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	toSerialize["templates"] = o.Templates
	return toSerialize, nil
}

func (o *CaseReportingEndpointCategory) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"templates",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCaseReportingEndpointCategory := _CaseReportingEndpointCategory{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCaseReportingEndpointCategory)

	if err != nil {
		return err
	}

	*o = CaseReportingEndpointCategory(varCaseReportingEndpointCategory)

	return err
}

type NullableCaseReportingEndpointCategory struct {
	value *CaseReportingEndpointCategory
	isSet bool
}

func (v NullableCaseReportingEndpointCategory) Get() *CaseReportingEndpointCategory {
	return v.value
}

func (v *NullableCaseReportingEndpointCategory) Set(val *CaseReportingEndpointCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableCaseReportingEndpointCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableCaseReportingEndpointCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaseReportingEndpointCategory(val *CaseReportingEndpointCategory) *NullableCaseReportingEndpointCategory {
	return &NullableCaseReportingEndpointCategory{value: val, isSet: true}
}

func (v NullableCaseReportingEndpointCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaseReportingEndpointCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
