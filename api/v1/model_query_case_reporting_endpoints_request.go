/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// QueryCaseReportingEndpointsRequest struct for QueryCaseReportingEndpointsRequest
type QueryCaseReportingEndpointsRequest struct {
	// The maximum number of case endpoints to return
	Limit *int32 `json:"limit,omitempty"`
}

// NewQueryCaseReportingEndpointsRequest instantiates a new QueryCaseReportingEndpointsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryCaseReportingEndpointsRequest() *QueryCaseReportingEndpointsRequest {
	this := QueryCaseReportingEndpointsRequest{}
	return &this
}

// NewQueryCaseReportingEndpointsRequestWithDefaults instantiates a new QueryCaseReportingEndpointsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryCaseReportingEndpointsRequestWithDefaults() *QueryCaseReportingEndpointsRequest {
	this := QueryCaseReportingEndpointsRequest{}
	return &this
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *QueryCaseReportingEndpointsRequest) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryCaseReportingEndpointsRequest) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *QueryCaseReportingEndpointsRequest) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *QueryCaseReportingEndpointsRequest) SetLimit(v int32) {
	o.Limit = &v
}

func (o QueryCaseReportingEndpointsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	return json.Marshal(toSerialize)
}

type NullableQueryCaseReportingEndpointsRequest struct {
	value *QueryCaseReportingEndpointsRequest
	isSet bool
}

func (v NullableQueryCaseReportingEndpointsRequest) Get() *QueryCaseReportingEndpointsRequest {
	return v.value
}

func (v *NullableQueryCaseReportingEndpointsRequest) Set(val *QueryCaseReportingEndpointsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryCaseReportingEndpointsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryCaseReportingEndpointsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryCaseReportingEndpointsRequest(val *QueryCaseReportingEndpointsRequest) *NullableQueryCaseReportingEndpointsRequest {
	return &NullableQueryCaseReportingEndpointsRequest{value: val, isSet: true}
}

func (v NullableQueryCaseReportingEndpointsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryCaseReportingEndpointsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
