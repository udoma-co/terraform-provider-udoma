/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CaseFeedbackConfig struct for CaseFeedbackConfig
type CaseFeedbackConfig struct {
	// The ID of the feedback entry, used to map responses against the config
	Id *string `json:"id,omitempty"`
	// The visibility of the feedback entry. This is used to determine which  parties can see the feedback entry.
	Visibility []UserTypeEnum        `json:"visibility,omitempty"`
	Mode       *CaseFeedbackModeEnum `json:"mode,omitempty"`
	Form       *CustomForm           `json:"form,omitempty"`
}

// NewCaseFeedbackConfig instantiates a new CaseFeedbackConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaseFeedbackConfig() *CaseFeedbackConfig {
	this := CaseFeedbackConfig{}
	return &this
}

// NewCaseFeedbackConfigWithDefaults instantiates a new CaseFeedbackConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaseFeedbackConfigWithDefaults() *CaseFeedbackConfig {
	this := CaseFeedbackConfig{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CaseFeedbackConfig) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseFeedbackConfig) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CaseFeedbackConfig) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CaseFeedbackConfig) SetId(v string) {
	o.Id = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *CaseFeedbackConfig) GetVisibility() []UserTypeEnum {
	if o == nil || o.Visibility == nil {
		var ret []UserTypeEnum
		return ret
	}
	return o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseFeedbackConfig) GetVisibilityOk() ([]UserTypeEnum, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *CaseFeedbackConfig) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given []UserTypeEnum and assigns it to the Visibility field.
func (o *CaseFeedbackConfig) SetVisibility(v []UserTypeEnum) {
	o.Visibility = v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *CaseFeedbackConfig) GetMode() CaseFeedbackModeEnum {
	if o == nil || o.Mode == nil {
		var ret CaseFeedbackModeEnum
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseFeedbackConfig) GetModeOk() (*CaseFeedbackModeEnum, bool) {
	if o == nil || o.Mode == nil {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *CaseFeedbackConfig) HasMode() bool {
	if o != nil && o.Mode != nil {
		return true
	}

	return false
}

// SetMode gets a reference to the given CaseFeedbackModeEnum and assigns it to the Mode field.
func (o *CaseFeedbackConfig) SetMode(v CaseFeedbackModeEnum) {
	o.Mode = &v
}

// GetForm returns the Form field value if set, zero value otherwise.
func (o *CaseFeedbackConfig) GetForm() CustomForm {
	if o == nil || o.Form == nil {
		var ret CustomForm
		return ret
	}
	return *o.Form
}

// GetFormOk returns a tuple with the Form field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseFeedbackConfig) GetFormOk() (*CustomForm, bool) {
	if o == nil || o.Form == nil {
		return nil, false
	}
	return o.Form, true
}

// HasForm returns a boolean if a field has been set.
func (o *CaseFeedbackConfig) HasForm() bool {
	if o != nil && o.Form != nil {
		return true
	}

	return false
}

// SetForm gets a reference to the given CustomForm and assigns it to the Form field.
func (o *CaseFeedbackConfig) SetForm(v CustomForm) {
	o.Form = &v
}

func (o CaseFeedbackConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.Mode != nil {
		toSerialize["mode"] = o.Mode
	}
	if o.Form != nil {
		toSerialize["form"] = o.Form
	}
	return json.Marshal(toSerialize)
}

type NullableCaseFeedbackConfig struct {
	value *CaseFeedbackConfig
	isSet bool
}

func (v NullableCaseFeedbackConfig) Get() *CaseFeedbackConfig {
	return v.value
}

func (v *NullableCaseFeedbackConfig) Set(val *CaseFeedbackConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCaseFeedbackConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCaseFeedbackConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaseFeedbackConfig(val *CaseFeedbackConfig) *NullableCaseFeedbackConfig {
	return &NullableCaseFeedbackConfig{value: val, isSet: true}
}

func (v NullableCaseFeedbackConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaseFeedbackConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
