/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CreateOrUpdateCustomIDGeneratorRequest struct for CreateOrUpdateCustomIDGeneratorRequest
type CreateOrUpdateCustomIDGeneratorRequest struct {
	// The user friendly name of the ID generator.
	Name *string `json:"name,omitempty"`
	// A JS script code that will be used to generate the ID.
	GenerationScript *string `json:"generation_script,omitempty"`
	// The last generated ID. This is used to keep track of the last generated ID.
	LastGeneratedId *string `json:"last_generated_id,omitempty"`
}

// NewCreateOrUpdateCustomIDGeneratorRequest instantiates a new CreateOrUpdateCustomIDGeneratorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateCustomIDGeneratorRequest() *CreateOrUpdateCustomIDGeneratorRequest {
	this := CreateOrUpdateCustomIDGeneratorRequest{}
	return &this
}

// NewCreateOrUpdateCustomIDGeneratorRequestWithDefaults instantiates a new CreateOrUpdateCustomIDGeneratorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateCustomIDGeneratorRequestWithDefaults() *CreateOrUpdateCustomIDGeneratorRequest {
	this := CreateOrUpdateCustomIDGeneratorRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateOrUpdateCustomIDGeneratorRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateCustomIDGeneratorRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateOrUpdateCustomIDGeneratorRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateOrUpdateCustomIDGeneratorRequest) SetName(v string) {
	o.Name = &v
}

// GetGenerationScript returns the GenerationScript field value if set, zero value otherwise.
func (o *CreateOrUpdateCustomIDGeneratorRequest) GetGenerationScript() string {
	if o == nil || o.GenerationScript == nil {
		var ret string
		return ret
	}
	return *o.GenerationScript
}

// GetGenerationScriptOk returns a tuple with the GenerationScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateCustomIDGeneratorRequest) GetGenerationScriptOk() (*string, bool) {
	if o == nil || o.GenerationScript == nil {
		return nil, false
	}
	return o.GenerationScript, true
}

// HasGenerationScript returns a boolean if a field has been set.
func (o *CreateOrUpdateCustomIDGeneratorRequest) HasGenerationScript() bool {
	if o != nil && o.GenerationScript != nil {
		return true
	}

	return false
}

// SetGenerationScript gets a reference to the given string and assigns it to the GenerationScript field.
func (o *CreateOrUpdateCustomIDGeneratorRequest) SetGenerationScript(v string) {
	o.GenerationScript = &v
}

// GetLastGeneratedId returns the LastGeneratedId field value if set, zero value otherwise.
func (o *CreateOrUpdateCustomIDGeneratorRequest) GetLastGeneratedId() string {
	if o == nil || o.LastGeneratedId == nil {
		var ret string
		return ret
	}
	return *o.LastGeneratedId
}

// GetLastGeneratedIdOk returns a tuple with the LastGeneratedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateCustomIDGeneratorRequest) GetLastGeneratedIdOk() (*string, bool) {
	if o == nil || o.LastGeneratedId == nil {
		return nil, false
	}
	return o.LastGeneratedId, true
}

// HasLastGeneratedId returns a boolean if a field has been set.
func (o *CreateOrUpdateCustomIDGeneratorRequest) HasLastGeneratedId() bool {
	if o != nil && o.LastGeneratedId != nil {
		return true
	}

	return false
}

// SetLastGeneratedId gets a reference to the given string and assigns it to the LastGeneratedId field.
func (o *CreateOrUpdateCustomIDGeneratorRequest) SetLastGeneratedId(v string) {
	o.LastGeneratedId = &v
}

func (o CreateOrUpdateCustomIDGeneratorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.GenerationScript != nil {
		toSerialize["generation_script"] = o.GenerationScript
	}
	if o.LastGeneratedId != nil {
		toSerialize["last_generated_id"] = o.LastGeneratedId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOrUpdateCustomIDGeneratorRequest struct {
	value *CreateOrUpdateCustomIDGeneratorRequest
	isSet bool
}

func (v NullableCreateOrUpdateCustomIDGeneratorRequest) Get() *CreateOrUpdateCustomIDGeneratorRequest {
	return v.value
}

func (v *NullableCreateOrUpdateCustomIDGeneratorRequest) Set(val *CreateOrUpdateCustomIDGeneratorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateCustomIDGeneratorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateCustomIDGeneratorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateCustomIDGeneratorRequest(val *CreateOrUpdateCustomIDGeneratorRequest) *NullableCreateOrUpdateCustomIDGeneratorRequest {
	return &NullableCreateOrUpdateCustomIDGeneratorRequest{value: val, isSet: true}
}

func (v NullableCreateOrUpdateCustomIDGeneratorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateCustomIDGeneratorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
