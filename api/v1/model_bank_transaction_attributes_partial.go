/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the BankTransactionAttributesPartial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BankTransactionAttributesPartial{}

// BankTransactionAttributesPartial Attributes of a bank transaction that can be updated
type BankTransactionAttributesPartial struct {
	// The timestamp of the transaction
	Date int64 `json:"date"`
	// The type of the transaction (e.g. 'deposit', 'withdrawal', etc.)
	Type string `json:"type"`
	// The amount of the transaction
	Amount float64 `json:"amount"`
	// The description text provided for the transaction
	Description string `json:"description"`
	// The name of holder of the source/target account of the transaction
	SourceTargetName string `json:"source_target_name"`
	// The IBAN of the source/target account of the transaction
	SourceTargetIban string `json:"source_target_iban"`
}

type _BankTransactionAttributesPartial BankTransactionAttributesPartial

// NewBankTransactionAttributesPartial instantiates a new BankTransactionAttributesPartial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankTransactionAttributesPartial(date int64, type_ string, amount float64, description string, sourceTargetName string, sourceTargetIban string) *BankTransactionAttributesPartial {
	this := BankTransactionAttributesPartial{}
	this.Date = date
	this.Type = type_
	this.Amount = amount
	this.Description = description
	this.SourceTargetName = sourceTargetName
	this.SourceTargetIban = sourceTargetIban
	return &this
}

// NewBankTransactionAttributesPartialWithDefaults instantiates a new BankTransactionAttributesPartial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankTransactionAttributesPartialWithDefaults() *BankTransactionAttributesPartial {
	this := BankTransactionAttributesPartial{}
	return &this
}

// GetDate returns the Date field value
func (o *BankTransactionAttributesPartial) GetDate() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *BankTransactionAttributesPartial) GetDateOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *BankTransactionAttributesPartial) SetDate(v int64) {
	o.Date = v
}

// GetType returns the Type field value
func (o *BankTransactionAttributesPartial) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BankTransactionAttributesPartial) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BankTransactionAttributesPartial) SetType(v string) {
	o.Type = v
}

// GetAmount returns the Amount field value
func (o *BankTransactionAttributesPartial) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *BankTransactionAttributesPartial) GetAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *BankTransactionAttributesPartial) SetAmount(v float64) {
	o.Amount = v
}

// GetDescription returns the Description field value
func (o *BankTransactionAttributesPartial) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *BankTransactionAttributesPartial) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *BankTransactionAttributesPartial) SetDescription(v string) {
	o.Description = v
}

// GetSourceTargetName returns the SourceTargetName field value
func (o *BankTransactionAttributesPartial) GetSourceTargetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceTargetName
}

// GetSourceTargetNameOk returns a tuple with the SourceTargetName field value
// and a boolean to check if the value has been set.
func (o *BankTransactionAttributesPartial) GetSourceTargetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceTargetName, true
}

// SetSourceTargetName sets field value
func (o *BankTransactionAttributesPartial) SetSourceTargetName(v string) {
	o.SourceTargetName = v
}

// GetSourceTargetIban returns the SourceTargetIban field value
func (o *BankTransactionAttributesPartial) GetSourceTargetIban() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceTargetIban
}

// GetSourceTargetIbanOk returns a tuple with the SourceTargetIban field value
// and a boolean to check if the value has been set.
func (o *BankTransactionAttributesPartial) GetSourceTargetIbanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceTargetIban, true
}

// SetSourceTargetIban sets field value
func (o *BankTransactionAttributesPartial) SetSourceTargetIban(v string) {
	o.SourceTargetIban = v
}

func (o BankTransactionAttributesPartial) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BankTransactionAttributesPartial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["date"] = o.Date
	toSerialize["type"] = o.Type
	toSerialize["amount"] = o.Amount
	toSerialize["description"] = o.Description
	toSerialize["source_target_name"] = o.SourceTargetName
	toSerialize["source_target_iban"] = o.SourceTargetIban
	return toSerialize, nil
}

func (o *BankTransactionAttributesPartial) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"date",
		"type",
		"amount",
		"description",
		"source_target_name",
		"source_target_iban",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBankTransactionAttributesPartial := _BankTransactionAttributesPartial{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBankTransactionAttributesPartial)

	if err != nil {
		return err
	}

	*o = BankTransactionAttributesPartial(varBankTransactionAttributesPartial)

	return err
}

type NullableBankTransactionAttributesPartial struct {
	value *BankTransactionAttributesPartial
	isSet bool
}

func (v NullableBankTransactionAttributesPartial) Get() *BankTransactionAttributesPartial {
	return v.value
}

func (v *NullableBankTransactionAttributesPartial) Set(val *BankTransactionAttributesPartial) {
	v.value = val
	v.isSet = true
}

func (v NullableBankTransactionAttributesPartial) IsSet() bool {
	return v.isSet
}

func (v *NullableBankTransactionAttributesPartial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankTransactionAttributesPartial(val *BankTransactionAttributesPartial) *NullableBankTransactionAttributesPartial {
	return &NullableBankTransactionAttributesPartial{value: val, isSet: true}
}

func (v NullableBankTransactionAttributesPartial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankTransactionAttributesPartial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
