/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the SignatureRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignatureRequest{}

// SignatureRequest The request to start a document signing process
type SignatureRequest struct {
	// The list of signers
	Signers []SignatureSignerRequest `json:"signers,omitempty"`
	// The message to be included in the invitation to the signers
	Message *string `json:"message,omitempty"`
	// The date the document signing request expires
	ExpirationDate *int64 `json:"expiration_date,omitempty"`
	// Whether the document shall be signed using QES
	Qes *bool `json:"qes,omitempty"`
}

// NewSignatureRequest instantiates a new SignatureRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignatureRequest() *SignatureRequest {
	this := SignatureRequest{}
	return &this
}

// NewSignatureRequestWithDefaults instantiates a new SignatureRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignatureRequestWithDefaults() *SignatureRequest {
	this := SignatureRequest{}
	return &this
}

// GetSigners returns the Signers field value if set, zero value otherwise.
func (o *SignatureRequest) GetSigners() []SignatureSignerRequest {
	if o == nil || IsNil(o.Signers) {
		var ret []SignatureSignerRequest
		return ret
	}
	return o.Signers
}

// GetSignersOk returns a tuple with the Signers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequest) GetSignersOk() ([]SignatureSignerRequest, bool) {
	if o == nil || IsNil(o.Signers) {
		return nil, false
	}
	return o.Signers, true
}

// HasSigners returns a boolean if a field has been set.
func (o *SignatureRequest) HasSigners() bool {
	if o != nil && !IsNil(o.Signers) {
		return true
	}

	return false
}

// SetSigners gets a reference to the given []SignatureSignerRequest and assigns it to the Signers field.
func (o *SignatureRequest) SetSigners(v []SignatureSignerRequest) {
	o.Signers = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *SignatureRequest) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequest) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *SignatureRequest) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *SignatureRequest) SetMessage(v string) {
	o.Message = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *SignatureRequest) GetExpirationDate() int64 {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret int64
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequest) GetExpirationDateOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *SignatureRequest) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given int64 and assigns it to the ExpirationDate field.
func (o *SignatureRequest) SetExpirationDate(v int64) {
	o.ExpirationDate = &v
}

// GetQes returns the Qes field value if set, zero value otherwise.
func (o *SignatureRequest) GetQes() bool {
	if o == nil || IsNil(o.Qes) {
		var ret bool
		return ret
	}
	return *o.Qes
}

// GetQesOk returns a tuple with the Qes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequest) GetQesOk() (*bool, bool) {
	if o == nil || IsNil(o.Qes) {
		return nil, false
	}
	return o.Qes, true
}

// HasQes returns a boolean if a field has been set.
func (o *SignatureRequest) HasQes() bool {
	if o != nil && !IsNil(o.Qes) {
		return true
	}

	return false
}

// SetQes gets a reference to the given bool and assigns it to the Qes field.
func (o *SignatureRequest) SetQes(v bool) {
	o.Qes = &v
}

func (o SignatureRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignatureRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Signers) {
		toSerialize["signers"] = o.Signers
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expiration_date"] = o.ExpirationDate
	}
	if !IsNil(o.Qes) {
		toSerialize["qes"] = o.Qes
	}
	return toSerialize, nil
}

type NullableSignatureRequest struct {
	value *SignatureRequest
	isSet bool
}

func (v NullableSignatureRequest) Get() *SignatureRequest {
	return v.value
}

func (v *NullableSignatureRequest) Set(val *SignatureRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSignatureRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSignatureRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignatureRequest(val *SignatureRequest) *NullableSignatureRequest {
	return &NullableSignatureRequest{value: val, isSet: true}
}

func (v NullableSignatureRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignatureRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
