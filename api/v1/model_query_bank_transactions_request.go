/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the QueryBankTransactionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryBankTransactionsRequest{}

// QueryBankTransactionsRequest The data required to query the transactions of a bank account
type QueryBankTransactionsRequest struct {
	// The lowest date to include in the result
	DateMin *int64 `json:"date_min,omitempty"`
	// The highest date to include in the result
	DateMax *int64 `json:"date_max,omitempty"`
}

// NewQueryBankTransactionsRequest instantiates a new QueryBankTransactionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryBankTransactionsRequest() *QueryBankTransactionsRequest {
	this := QueryBankTransactionsRequest{}
	return &this
}

// NewQueryBankTransactionsRequestWithDefaults instantiates a new QueryBankTransactionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryBankTransactionsRequestWithDefaults() *QueryBankTransactionsRequest {
	this := QueryBankTransactionsRequest{}
	return &this
}

// GetDateMin returns the DateMin field value if set, zero value otherwise.
func (o *QueryBankTransactionsRequest) GetDateMin() int64 {
	if o == nil || IsNil(o.DateMin) {
		var ret int64
		return ret
	}
	return *o.DateMin
}

// GetDateMinOk returns a tuple with the DateMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryBankTransactionsRequest) GetDateMinOk() (*int64, bool) {
	if o == nil || IsNil(o.DateMin) {
		return nil, false
	}
	return o.DateMin, true
}

// HasDateMin returns a boolean if a field has been set.
func (o *QueryBankTransactionsRequest) HasDateMin() bool {
	if o != nil && !IsNil(o.DateMin) {
		return true
	}

	return false
}

// SetDateMin gets a reference to the given int64 and assigns it to the DateMin field.
func (o *QueryBankTransactionsRequest) SetDateMin(v int64) {
	o.DateMin = &v
}

// GetDateMax returns the DateMax field value if set, zero value otherwise.
func (o *QueryBankTransactionsRequest) GetDateMax() int64 {
	if o == nil || IsNil(o.DateMax) {
		var ret int64
		return ret
	}
	return *o.DateMax
}

// GetDateMaxOk returns a tuple with the DateMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryBankTransactionsRequest) GetDateMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.DateMax) {
		return nil, false
	}
	return o.DateMax, true
}

// HasDateMax returns a boolean if a field has been set.
func (o *QueryBankTransactionsRequest) HasDateMax() bool {
	if o != nil && !IsNil(o.DateMax) {
		return true
	}

	return false
}

// SetDateMax gets a reference to the given int64 and assigns it to the DateMax field.
func (o *QueryBankTransactionsRequest) SetDateMax(v int64) {
	o.DateMax = &v
}

func (o QueryBankTransactionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryBankTransactionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateMin) {
		toSerialize["date_min"] = o.DateMin
	}
	if !IsNil(o.DateMax) {
		toSerialize["date_max"] = o.DateMax
	}
	return toSerialize, nil
}

type NullableQueryBankTransactionsRequest struct {
	value *QueryBankTransactionsRequest
	isSet bool
}

func (v NullableQueryBankTransactionsRequest) Get() *QueryBankTransactionsRequest {
	return v.value
}

func (v *NullableQueryBankTransactionsRequest) Set(val *QueryBankTransactionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryBankTransactionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryBankTransactionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryBankTransactionsRequest(val *QueryBankTransactionsRequest) *NullableQueryBankTransactionsRequest {
	return &NullableQueryBankTransactionsRequest{value: val, isSet: true}
}

func (v NullableQueryBankTransactionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryBankTransactionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
