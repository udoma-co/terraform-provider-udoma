/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// QueryWorkflowDefinitionsResponse a response for querying workflow definitions
type QueryWorkflowDefinitionsResponse struct {
	Workflows []WorkflowDefinition `json:"workflows,omitempty"`
}

// NewQueryWorkflowDefinitionsResponse instantiates a new QueryWorkflowDefinitionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryWorkflowDefinitionsResponse() *QueryWorkflowDefinitionsResponse {
	this := QueryWorkflowDefinitionsResponse{}
	return &this
}

// NewQueryWorkflowDefinitionsResponseWithDefaults instantiates a new QueryWorkflowDefinitionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryWorkflowDefinitionsResponseWithDefaults() *QueryWorkflowDefinitionsResponse {
	this := QueryWorkflowDefinitionsResponse{}
	return &this
}

// GetWorkflows returns the Workflows field value if set, zero value otherwise.
func (o *QueryWorkflowDefinitionsResponse) GetWorkflows() []WorkflowDefinition {
	if o == nil || o.Workflows == nil {
		var ret []WorkflowDefinition
		return ret
	}
	return o.Workflows
}

// GetWorkflowsOk returns a tuple with the Workflows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryWorkflowDefinitionsResponse) GetWorkflowsOk() ([]WorkflowDefinition, bool) {
	if o == nil || o.Workflows == nil {
		return nil, false
	}
	return o.Workflows, true
}

// HasWorkflows returns a boolean if a field has been set.
func (o *QueryWorkflowDefinitionsResponse) HasWorkflows() bool {
	if o != nil && o.Workflows != nil {
		return true
	}

	return false
}

// SetWorkflows gets a reference to the given []WorkflowDefinition and assigns it to the Workflows field.
func (o *QueryWorkflowDefinitionsResponse) SetWorkflows(v []WorkflowDefinition) {
	o.Workflows = v
}

func (o QueryWorkflowDefinitionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Workflows != nil {
		toSerialize["workflows"] = o.Workflows
	}
	return json.Marshal(toSerialize)
}

type NullableQueryWorkflowDefinitionsResponse struct {
	value *QueryWorkflowDefinitionsResponse
	isSet bool
}

func (v NullableQueryWorkflowDefinitionsResponse) Get() *QueryWorkflowDefinitionsResponse {
	return v.value
}

func (v *NullableQueryWorkflowDefinitionsResponse) Set(val *QueryWorkflowDefinitionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryWorkflowDefinitionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryWorkflowDefinitionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryWorkflowDefinitionsResponse(val *QueryWorkflowDefinitionsResponse) *NullableQueryWorkflowDefinitionsResponse {
	return &NullableQueryWorkflowDefinitionsResponse{value: val, isSet: true}
}

func (v NullableQueryWorkflowDefinitionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryWorkflowDefinitionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
