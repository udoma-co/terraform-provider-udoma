/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DocumentCreateAttributesPartial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentCreateAttributesPartial{}

// DocumentCreateAttributesPartial Attributes of a document that must be provided upon creation
type DocumentCreateAttributesPartial struct {
	RefType DocumentRefTypeEnum `json:"ref_type"`
	// The ID of the entity for which the document is uploaded. Can be empty, if the  reference type is 'static'.
	RefId *string `json:"ref_id,omitempty"`
	// The ID of the already uploaded attachment
	AttachmentRef string `json:"attachment_ref"`
}

type _DocumentCreateAttributesPartial DocumentCreateAttributesPartial

// NewDocumentCreateAttributesPartial instantiates a new DocumentCreateAttributesPartial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentCreateAttributesPartial(refType DocumentRefTypeEnum, attachmentRef string) *DocumentCreateAttributesPartial {
	this := DocumentCreateAttributesPartial{}
	this.RefType = refType
	this.AttachmentRef = attachmentRef
	return &this
}

// NewDocumentCreateAttributesPartialWithDefaults instantiates a new DocumentCreateAttributesPartial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentCreateAttributesPartialWithDefaults() *DocumentCreateAttributesPartial {
	this := DocumentCreateAttributesPartial{}
	return &this
}

// GetRefType returns the RefType field value
func (o *DocumentCreateAttributesPartial) GetRefType() DocumentRefTypeEnum {
	if o == nil {
		var ret DocumentRefTypeEnum
		return ret
	}

	return o.RefType
}

// GetRefTypeOk returns a tuple with the RefType field value
// and a boolean to check if the value has been set.
func (o *DocumentCreateAttributesPartial) GetRefTypeOk() (*DocumentRefTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefType, true
}

// SetRefType sets field value
func (o *DocumentCreateAttributesPartial) SetRefType(v DocumentRefTypeEnum) {
	o.RefType = v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *DocumentCreateAttributesPartial) GetRefId() string {
	if o == nil || IsNil(o.RefId) {
		var ret string
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentCreateAttributesPartial) GetRefIdOk() (*string, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// HasRefId returns a boolean if a field has been set.
func (o *DocumentCreateAttributesPartial) HasRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given string and assigns it to the RefId field.
func (o *DocumentCreateAttributesPartial) SetRefId(v string) {
	o.RefId = &v
}

// GetAttachmentRef returns the AttachmentRef field value
func (o *DocumentCreateAttributesPartial) GetAttachmentRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttachmentRef
}

// GetAttachmentRefOk returns a tuple with the AttachmentRef field value
// and a boolean to check if the value has been set.
func (o *DocumentCreateAttributesPartial) GetAttachmentRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttachmentRef, true
}

// SetAttachmentRef sets field value
func (o *DocumentCreateAttributesPartial) SetAttachmentRef(v string) {
	o.AttachmentRef = v
}

func (o DocumentCreateAttributesPartial) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentCreateAttributesPartial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ref_type"] = o.RefType
	if !IsNil(o.RefId) {
		toSerialize["ref_id"] = o.RefId
	}
	toSerialize["attachment_ref"] = o.AttachmentRef
	return toSerialize, nil
}

func (o *DocumentCreateAttributesPartial) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ref_type",
		"attachment_ref",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDocumentCreateAttributesPartial := _DocumentCreateAttributesPartial{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDocumentCreateAttributesPartial)

	if err != nil {
		return err
	}

	*o = DocumentCreateAttributesPartial(varDocumentCreateAttributesPartial)

	return err
}

type NullableDocumentCreateAttributesPartial struct {
	value *DocumentCreateAttributesPartial
	isSet bool
}

func (v NullableDocumentCreateAttributesPartial) Get() *DocumentCreateAttributesPartial {
	return v.value
}

func (v *NullableDocumentCreateAttributesPartial) Set(val *DocumentCreateAttributesPartial) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentCreateAttributesPartial) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentCreateAttributesPartial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentCreateAttributesPartial(val *DocumentCreateAttributesPartial) *NullableDocumentCreateAttributesPartial {
	return &NullableDocumentCreateAttributesPartial{value: val, isSet: true}
}

func (v NullableDocumentCreateAttributesPartial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentCreateAttributesPartial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
