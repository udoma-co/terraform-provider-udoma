/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the QueryFinancialAccountBalancesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryFinancialAccountBalancesRequest{}

// QueryFinancialAccountBalancesRequest A request to query the current balances of the financial accounts that  match the given flat number pattern
type QueryFinancialAccountBalancesRequest struct {
	// The flat number pattern to use to retrieve the financial account balances.
	Pattern string `json:"pattern"`
	// If true, the flat number must match the pattern exactly. If false, the flat number can be a substring of the pattern.
	Strict *bool `json:"strict,omitempty"`
}

type _QueryFinancialAccountBalancesRequest QueryFinancialAccountBalancesRequest

// NewQueryFinancialAccountBalancesRequest instantiates a new QueryFinancialAccountBalancesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryFinancialAccountBalancesRequest(pattern string) *QueryFinancialAccountBalancesRequest {
	this := QueryFinancialAccountBalancesRequest{}
	this.Pattern = pattern
	return &this
}

// NewQueryFinancialAccountBalancesRequestWithDefaults instantiates a new QueryFinancialAccountBalancesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryFinancialAccountBalancesRequestWithDefaults() *QueryFinancialAccountBalancesRequest {
	this := QueryFinancialAccountBalancesRequest{}
	return &this
}

// GetPattern returns the Pattern field value
func (o *QueryFinancialAccountBalancesRequest) GetPattern() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pattern
}

// GetPatternOk returns a tuple with the Pattern field value
// and a boolean to check if the value has been set.
func (o *QueryFinancialAccountBalancesRequest) GetPatternOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pattern, true
}

// SetPattern sets field value
func (o *QueryFinancialAccountBalancesRequest) SetPattern(v string) {
	o.Pattern = v
}

// GetStrict returns the Strict field value if set, zero value otherwise.
func (o *QueryFinancialAccountBalancesRequest) GetStrict() bool {
	if o == nil || IsNil(o.Strict) {
		var ret bool
		return ret
	}
	return *o.Strict
}

// GetStrictOk returns a tuple with the Strict field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryFinancialAccountBalancesRequest) GetStrictOk() (*bool, bool) {
	if o == nil || IsNil(o.Strict) {
		return nil, false
	}
	return o.Strict, true
}

// HasStrict returns a boolean if a field has been set.
func (o *QueryFinancialAccountBalancesRequest) HasStrict() bool {
	if o != nil && !IsNil(o.Strict) {
		return true
	}

	return false
}

// SetStrict gets a reference to the given bool and assigns it to the Strict field.
func (o *QueryFinancialAccountBalancesRequest) SetStrict(v bool) {
	o.Strict = &v
}

func (o QueryFinancialAccountBalancesRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryFinancialAccountBalancesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pattern"] = o.Pattern
	if !IsNil(o.Strict) {
		toSerialize["strict"] = o.Strict
	}
	return toSerialize, nil
}

func (o *QueryFinancialAccountBalancesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pattern",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueryFinancialAccountBalancesRequest := _QueryFinancialAccountBalancesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueryFinancialAccountBalancesRequest)

	if err != nil {
		return err
	}

	*o = QueryFinancialAccountBalancesRequest(varQueryFinancialAccountBalancesRequest)

	return err
}

type NullableQueryFinancialAccountBalancesRequest struct {
	value *QueryFinancialAccountBalancesRequest
	isSet bool
}

func (v NullableQueryFinancialAccountBalancesRequest) Get() *QueryFinancialAccountBalancesRequest {
	return v.value
}

func (v *NullableQueryFinancialAccountBalancesRequest) Set(val *QueryFinancialAccountBalancesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryFinancialAccountBalancesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryFinancialAccountBalancesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryFinancialAccountBalancesRequest(val *QueryFinancialAccountBalancesRequest) *NullableQueryFinancialAccountBalancesRequest {
	return &NullableQueryFinancialAccountBalancesRequest{value: val, isSet: true}
}

func (v NullableQueryFinancialAccountBalancesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryFinancialAccountBalancesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
