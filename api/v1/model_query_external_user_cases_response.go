/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the QueryExternalUserCasesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryExternalUserCasesResponse{}

// QueryExternalUserCasesResponse struct for QueryExternalUserCasesResponse
type QueryExternalUserCasesResponse struct {
	Cases []Case `json:"cases,omitempty"`
}

// NewQueryExternalUserCasesResponse instantiates a new QueryExternalUserCasesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryExternalUserCasesResponse() *QueryExternalUserCasesResponse {
	this := QueryExternalUserCasesResponse{}
	return &this
}

// NewQueryExternalUserCasesResponseWithDefaults instantiates a new QueryExternalUserCasesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryExternalUserCasesResponseWithDefaults() *QueryExternalUserCasesResponse {
	this := QueryExternalUserCasesResponse{}
	return &this
}

// GetCases returns the Cases field value if set, zero value otherwise.
func (o *QueryExternalUserCasesResponse) GetCases() []Case {
	if o == nil || IsNil(o.Cases) {
		var ret []Case
		return ret
	}
	return o.Cases
}

// GetCasesOk returns a tuple with the Cases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryExternalUserCasesResponse) GetCasesOk() ([]Case, bool) {
	if o == nil || IsNil(o.Cases) {
		return nil, false
	}
	return o.Cases, true
}

// HasCases returns a boolean if a field has been set.
func (o *QueryExternalUserCasesResponse) HasCases() bool {
	if o != nil && !IsNil(o.Cases) {
		return true
	}

	return false
}

// SetCases gets a reference to the given []Case and assigns it to the Cases field.
func (o *QueryExternalUserCasesResponse) SetCases(v []Case) {
	o.Cases = v
}

func (o QueryExternalUserCasesResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryExternalUserCasesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cases) {
		toSerialize["cases"] = o.Cases
	}
	return toSerialize, nil
}

type NullableQueryExternalUserCasesResponse struct {
	value *QueryExternalUserCasesResponse
	isSet bool
}

func (v NullableQueryExternalUserCasesResponse) Get() *QueryExternalUserCasesResponse {
	return v.value
}

func (v *NullableQueryExternalUserCasesResponse) Set(val *QueryExternalUserCasesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryExternalUserCasesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryExternalUserCasesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryExternalUserCasesResponse(val *QueryExternalUserCasesResponse) *NullableQueryExternalUserCasesResponse {
	return &NullableQueryExternalUserCasesResponse{value: val, isSet: true}
}

func (v NullableQueryExternalUserCasesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryExternalUserCasesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
