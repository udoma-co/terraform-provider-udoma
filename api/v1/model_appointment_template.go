/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// AppointmentTemplate struct for AppointmentTemplate
type AppointmentTemplate struct {
	// The unique identifier of the appointment template
	Id string `json:"id"`
	// The name of the appointment template
	Name string `json:"name"`
	// The expression that is used to generate the name of the appointment from the data that the user has entered when booking the appointment
	NameExpression string `json:"name_expression"`
	// The description of the appointment template
	Description *string `json:"description,omitempty"`
	// Constrain the minimum amount of time between the scheduling and the beginning of the appointment in minutes. Set this to 10 and people won't be able to schedule an appointment that's in less than 10 minutes.
	ScheduleBefore *int32     `json:"schedule_before,omitempty"`
	Form           CustomForm `json:"form"`
}

// NewAppointmentTemplate instantiates a new AppointmentTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppointmentTemplate(id string, name string, nameExpression string, form CustomForm) *AppointmentTemplate {
	this := AppointmentTemplate{}
	this.Id = id
	this.Name = name
	this.NameExpression = nameExpression
	this.Form = form
	return &this
}

// NewAppointmentTemplateWithDefaults instantiates a new AppointmentTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppointmentTemplateWithDefaults() *AppointmentTemplate {
	this := AppointmentTemplate{}
	return &this
}

// GetId returns the Id field value
func (o *AppointmentTemplate) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AppointmentTemplate) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AppointmentTemplate) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AppointmentTemplate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AppointmentTemplate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AppointmentTemplate) SetName(v string) {
	o.Name = v
}

// GetNameExpression returns the NameExpression field value
func (o *AppointmentTemplate) GetNameExpression() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NameExpression
}

// GetNameExpressionOk returns a tuple with the NameExpression field value
// and a boolean to check if the value has been set.
func (o *AppointmentTemplate) GetNameExpressionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NameExpression, true
}

// SetNameExpression sets field value
func (o *AppointmentTemplate) SetNameExpression(v string) {
	o.NameExpression = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AppointmentTemplate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppointmentTemplate) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AppointmentTemplate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AppointmentTemplate) SetDescription(v string) {
	o.Description = &v
}

// GetScheduleBefore returns the ScheduleBefore field value if set, zero value otherwise.
func (o *AppointmentTemplate) GetScheduleBefore() int32 {
	if o == nil || o.ScheduleBefore == nil {
		var ret int32
		return ret
	}
	return *o.ScheduleBefore
}

// GetScheduleBeforeOk returns a tuple with the ScheduleBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppointmentTemplate) GetScheduleBeforeOk() (*int32, bool) {
	if o == nil || o.ScheduleBefore == nil {
		return nil, false
	}
	return o.ScheduleBefore, true
}

// HasScheduleBefore returns a boolean if a field has been set.
func (o *AppointmentTemplate) HasScheduleBefore() bool {
	if o != nil && o.ScheduleBefore != nil {
		return true
	}

	return false
}

// SetScheduleBefore gets a reference to the given int32 and assigns it to the ScheduleBefore field.
func (o *AppointmentTemplate) SetScheduleBefore(v int32) {
	o.ScheduleBefore = &v
}

// GetForm returns the Form field value
func (o *AppointmentTemplate) GetForm() CustomForm {
	if o == nil {
		var ret CustomForm
		return ret
	}

	return o.Form
}

// GetFormOk returns a tuple with the Form field value
// and a boolean to check if the value has been set.
func (o *AppointmentTemplate) GetFormOk() (*CustomForm, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Form, true
}

// SetForm sets field value
func (o *AppointmentTemplate) SetForm(v CustomForm) {
	o.Form = v
}

func (o AppointmentTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["name_expression"] = o.NameExpression
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ScheduleBefore != nil {
		toSerialize["schedule_before"] = o.ScheduleBefore
	}
	if true {
		toSerialize["form"] = o.Form
	}
	return json.Marshal(toSerialize)
}

type NullableAppointmentTemplate struct {
	value *AppointmentTemplate
	isSet bool
}

func (v NullableAppointmentTemplate) Get() *AppointmentTemplate {
	return v.value
}

func (v *NullableAppointmentTemplate) Set(val *AppointmentTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableAppointmentTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableAppointmentTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppointmentTemplate(val *AppointmentTemplate) *NullableAppointmentTemplate {
	return &NullableAppointmentTemplate{value: val, isSet: true}
}

func (v NullableAppointmentTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppointmentTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
