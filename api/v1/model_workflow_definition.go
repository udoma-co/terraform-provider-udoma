/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// WorkflowDefinition a workflow that can guide the user through a process
type WorkflowDefinition struct {
	Id *string `json:"id,omitempty"`
	// The timestamp of when the workflow was created
	CreatedAt *int64 `json:"created_at,omitempty"`
	// The timestamp of when the workflow was last updated
	UpdatedAt   *int64  `json:"updated_at,omitempty"`
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	// The icon of the workflow (shown in the menu). If empty, a default icon  will be used.
	Icon *string `json:"icon,omitempty"`
	// a JS expression that determines the name of the workflow execution
	NameExpression *string `json:"name_expression,omitempty"`
	// a map of values, where the key and values are strings
	EnvVars *map[string]string `json:"env_vars,omitempty"`
	// The ID of the step that will cause billing to be triggered for an  execution of this workflow. If empty, billing will be triggered upon creation of the workflow execution.
	BillingGate *string `json:"billing_gate,omitempty"`
	// The ID of the billing plan that will be used for billing of this workflow. If empty, no billing will be triggered.
	BillingId *string `json:"billing_id,omitempty"`
	// a JS expression that determines the billing plan of the workflow execution. If set, this will override the billing_id.
	BillingExpression *string `json:"billing_expression,omitempty"`
	// whether the workflow is released or not
	Released *bool                          `json:"released,omitempty"`
	InitStep NullableWorkflowStepDefinition `json:"init_step,omitempty"`
	// ID of the first step of the workflow, which will be executed when the workflow is started
	FirstStepId *string                  `json:"first_step_id,omitempty"`
	Steps       []WorkflowStepDefinition `json:"steps,omitempty"`
}

// NewWorkflowDefinition instantiates a new WorkflowDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowDefinition() *WorkflowDefinition {
	this := WorkflowDefinition{}
	return &this
}

// NewWorkflowDefinitionWithDefaults instantiates a new WorkflowDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowDefinitionWithDefaults() *WorkflowDefinition {
	this := WorkflowDefinition{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkflowDefinition) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetCreatedAt() int64 {
	if o == nil || o.CreatedAt == nil {
		var ret int64
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetCreatedAtOk() (*int64, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int64 and assigns it to the CreatedAt field.
func (o *WorkflowDefinition) SetCreatedAt(v int64) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetUpdatedAt() int64 {
	if o == nil || o.UpdatedAt == nil {
		var ret int64
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetUpdatedAtOk() (*int64, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int64 and assigns it to the UpdatedAt field.
func (o *WorkflowDefinition) SetUpdatedAt(v int64) {
	o.UpdatedAt = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkflowDefinition) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WorkflowDefinition) SetDescription(v string) {
	o.Description = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetIcon() string {
	if o == nil || o.Icon == nil {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetIconOk() (*string, bool) {
	if o == nil || o.Icon == nil {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasIcon() bool {
	if o != nil && o.Icon != nil {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *WorkflowDefinition) SetIcon(v string) {
	o.Icon = &v
}

// GetNameExpression returns the NameExpression field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetNameExpression() string {
	if o == nil || o.NameExpression == nil {
		var ret string
		return ret
	}
	return *o.NameExpression
}

// GetNameExpressionOk returns a tuple with the NameExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetNameExpressionOk() (*string, bool) {
	if o == nil || o.NameExpression == nil {
		return nil, false
	}
	return o.NameExpression, true
}

// HasNameExpression returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasNameExpression() bool {
	if o != nil && o.NameExpression != nil {
		return true
	}

	return false
}

// SetNameExpression gets a reference to the given string and assigns it to the NameExpression field.
func (o *WorkflowDefinition) SetNameExpression(v string) {
	o.NameExpression = &v
}

// GetEnvVars returns the EnvVars field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetEnvVars() map[string]string {
	if o == nil || o.EnvVars == nil {
		var ret map[string]string
		return ret
	}
	return *o.EnvVars
}

// GetEnvVarsOk returns a tuple with the EnvVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetEnvVarsOk() (*map[string]string, bool) {
	if o == nil || o.EnvVars == nil {
		return nil, false
	}
	return o.EnvVars, true
}

// HasEnvVars returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasEnvVars() bool {
	if o != nil && o.EnvVars != nil {
		return true
	}

	return false
}

// SetEnvVars gets a reference to the given map[string]string and assigns it to the EnvVars field.
func (o *WorkflowDefinition) SetEnvVars(v map[string]string) {
	o.EnvVars = &v
}

// GetBillingGate returns the BillingGate field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetBillingGate() string {
	if o == nil || o.BillingGate == nil {
		var ret string
		return ret
	}
	return *o.BillingGate
}

// GetBillingGateOk returns a tuple with the BillingGate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetBillingGateOk() (*string, bool) {
	if o == nil || o.BillingGate == nil {
		return nil, false
	}
	return o.BillingGate, true
}

// HasBillingGate returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasBillingGate() bool {
	if o != nil && o.BillingGate != nil {
		return true
	}

	return false
}

// SetBillingGate gets a reference to the given string and assigns it to the BillingGate field.
func (o *WorkflowDefinition) SetBillingGate(v string) {
	o.BillingGate = &v
}

// GetBillingId returns the BillingId field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetBillingId() string {
	if o == nil || o.BillingId == nil {
		var ret string
		return ret
	}
	return *o.BillingId
}

// GetBillingIdOk returns a tuple with the BillingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetBillingIdOk() (*string, bool) {
	if o == nil || o.BillingId == nil {
		return nil, false
	}
	return o.BillingId, true
}

// HasBillingId returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasBillingId() bool {
	if o != nil && o.BillingId != nil {
		return true
	}

	return false
}

// SetBillingId gets a reference to the given string and assigns it to the BillingId field.
func (o *WorkflowDefinition) SetBillingId(v string) {
	o.BillingId = &v
}

// GetBillingExpression returns the BillingExpression field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetBillingExpression() string {
	if o == nil || o.BillingExpression == nil {
		var ret string
		return ret
	}
	return *o.BillingExpression
}

// GetBillingExpressionOk returns a tuple with the BillingExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetBillingExpressionOk() (*string, bool) {
	if o == nil || o.BillingExpression == nil {
		return nil, false
	}
	return o.BillingExpression, true
}

// HasBillingExpression returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasBillingExpression() bool {
	if o != nil && o.BillingExpression != nil {
		return true
	}

	return false
}

// SetBillingExpression gets a reference to the given string and assigns it to the BillingExpression field.
func (o *WorkflowDefinition) SetBillingExpression(v string) {
	o.BillingExpression = &v
}

// GetReleased returns the Released field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetReleased() bool {
	if o == nil || o.Released == nil {
		var ret bool
		return ret
	}
	return *o.Released
}

// GetReleasedOk returns a tuple with the Released field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetReleasedOk() (*bool, bool) {
	if o == nil || o.Released == nil {
		return nil, false
	}
	return o.Released, true
}

// HasReleased returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasReleased() bool {
	if o != nil && o.Released != nil {
		return true
	}

	return false
}

// SetReleased gets a reference to the given bool and assigns it to the Released field.
func (o *WorkflowDefinition) SetReleased(v bool) {
	o.Released = &v
}

// GetInitStep returns the InitStep field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowDefinition) GetInitStep() WorkflowStepDefinition {
	if o == nil || o.InitStep.Get() == nil {
		var ret WorkflowStepDefinition
		return ret
	}
	return *o.InitStep.Get()
}

// GetInitStepOk returns a tuple with the InitStep field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowDefinition) GetInitStepOk() (*WorkflowStepDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return o.InitStep.Get(), o.InitStep.IsSet()
}

// HasInitStep returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasInitStep() bool {
	if o != nil && o.InitStep.IsSet() {
		return true
	}

	return false
}

// SetInitStep gets a reference to the given NullableWorkflowStepDefinition and assigns it to the InitStep field.
func (o *WorkflowDefinition) SetInitStep(v WorkflowStepDefinition) {
	o.InitStep.Set(&v)
}

// SetInitStepNil sets the value for InitStep to be an explicit nil
func (o *WorkflowDefinition) SetInitStepNil() {
	o.InitStep.Set(nil)
}

// UnsetInitStep ensures that no value is present for InitStep, not even an explicit nil
func (o *WorkflowDefinition) UnsetInitStep() {
	o.InitStep.Unset()
}

// GetFirstStepId returns the FirstStepId field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetFirstStepId() string {
	if o == nil || o.FirstStepId == nil {
		var ret string
		return ret
	}
	return *o.FirstStepId
}

// GetFirstStepIdOk returns a tuple with the FirstStepId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetFirstStepIdOk() (*string, bool) {
	if o == nil || o.FirstStepId == nil {
		return nil, false
	}
	return o.FirstStepId, true
}

// HasFirstStepId returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasFirstStepId() bool {
	if o != nil && o.FirstStepId != nil {
		return true
	}

	return false
}

// SetFirstStepId gets a reference to the given string and assigns it to the FirstStepId field.
func (o *WorkflowDefinition) SetFirstStepId(v string) {
	o.FirstStepId = &v
}

// GetSteps returns the Steps field value if set, zero value otherwise.
func (o *WorkflowDefinition) GetSteps() []WorkflowStepDefinition {
	if o == nil || o.Steps == nil {
		var ret []WorkflowStepDefinition
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefinition) GetStepsOk() ([]WorkflowStepDefinition, bool) {
	if o == nil || o.Steps == nil {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *WorkflowDefinition) HasSteps() bool {
	if o != nil && o.Steps != nil {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []WorkflowStepDefinition and assigns it to the Steps field.
func (o *WorkflowDefinition) SetSteps(v []WorkflowStepDefinition) {
	o.Steps = v
}

func (o WorkflowDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Icon != nil {
		toSerialize["icon"] = o.Icon
	}
	if o.NameExpression != nil {
		toSerialize["name_expression"] = o.NameExpression
	}
	if o.EnvVars != nil {
		toSerialize["env_vars"] = o.EnvVars
	}
	if o.BillingGate != nil {
		toSerialize["billing_gate"] = o.BillingGate
	}
	if o.BillingId != nil {
		toSerialize["billing_id"] = o.BillingId
	}
	if o.BillingExpression != nil {
		toSerialize["billing_expression"] = o.BillingExpression
	}
	if o.Released != nil {
		toSerialize["released"] = o.Released
	}
	if o.InitStep.IsSet() {
		toSerialize["init_step"] = o.InitStep.Get()
	}
	if o.FirstStepId != nil {
		toSerialize["first_step_id"] = o.FirstStepId
	}
	if o.Steps != nil {
		toSerialize["steps"] = o.Steps
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowDefinition struct {
	value *WorkflowDefinition
	isSet bool
}

func (v NullableWorkflowDefinition) Get() *WorkflowDefinition {
	return v.value
}

func (v *NullableWorkflowDefinition) Set(val *WorkflowDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowDefinition(val *WorkflowDefinition) *NullableWorkflowDefinition {
	return &NullableWorkflowDefinition{value: val, isSet: true}
}

func (v NullableWorkflowDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
