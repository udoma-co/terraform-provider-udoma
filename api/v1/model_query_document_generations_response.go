/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// QueryDocumentGenerationsResponse Result of a document generation query
type QueryDocumentGenerationsResponse struct {
	Limit     *int32               `json:"limit,omitempty"`
	Offset    *int32               `json:"offset,omitempty"`
	Total     *int32               `json:"total,omitempty"`
	Documents []DocumentGeneration `json:"documents,omitempty"`
}

// NewQueryDocumentGenerationsResponse instantiates a new QueryDocumentGenerationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryDocumentGenerationsResponse() *QueryDocumentGenerationsResponse {
	this := QueryDocumentGenerationsResponse{}
	return &this
}

// NewQueryDocumentGenerationsResponseWithDefaults instantiates a new QueryDocumentGenerationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryDocumentGenerationsResponseWithDefaults() *QueryDocumentGenerationsResponse {
	this := QueryDocumentGenerationsResponse{}
	return &this
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *QueryDocumentGenerationsResponse) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryDocumentGenerationsResponse) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *QueryDocumentGenerationsResponse) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *QueryDocumentGenerationsResponse) SetLimit(v int32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *QueryDocumentGenerationsResponse) GetOffset() int32 {
	if o == nil || o.Offset == nil {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryDocumentGenerationsResponse) GetOffsetOk() (*int32, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *QueryDocumentGenerationsResponse) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *QueryDocumentGenerationsResponse) SetOffset(v int32) {
	o.Offset = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *QueryDocumentGenerationsResponse) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryDocumentGenerationsResponse) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *QueryDocumentGenerationsResponse) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *QueryDocumentGenerationsResponse) SetTotal(v int32) {
	o.Total = &v
}

// GetDocuments returns the Documents field value if set, zero value otherwise.
func (o *QueryDocumentGenerationsResponse) GetDocuments() []DocumentGeneration {
	if o == nil || o.Documents == nil {
		var ret []DocumentGeneration
		return ret
	}
	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryDocumentGenerationsResponse) GetDocumentsOk() ([]DocumentGeneration, bool) {
	if o == nil || o.Documents == nil {
		return nil, false
	}
	return o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *QueryDocumentGenerationsResponse) HasDocuments() bool {
	if o != nil && o.Documents != nil {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []DocumentGeneration and assigns it to the Documents field.
func (o *QueryDocumentGenerationsResponse) SetDocuments(v []DocumentGeneration) {
	o.Documents = v
}

func (o QueryDocumentGenerationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.Documents != nil {
		toSerialize["documents"] = o.Documents
	}
	return json.Marshal(toSerialize)
}

type NullableQueryDocumentGenerationsResponse struct {
	value *QueryDocumentGenerationsResponse
	isSet bool
}

func (v NullableQueryDocumentGenerationsResponse) Get() *QueryDocumentGenerationsResponse {
	return v.value
}

func (v *NullableQueryDocumentGenerationsResponse) Set(val *QueryDocumentGenerationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryDocumentGenerationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryDocumentGenerationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryDocumentGenerationsResponse(val *QueryDocumentGenerationsResponse) *NullableQueryDocumentGenerationsResponse {
	return &NullableQueryDocumentGenerationsResponse{value: val, isSet: true}
}

func (v NullableQueryDocumentGenerationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryDocumentGenerationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
