/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AccountBooking type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountBooking{}

// AccountBooking A booking of a financial transaction
type AccountBooking struct {
	// Unique and immutable ID attribute of the entity that is generated when the instance is created. The ID is unique within the system accross all accounts and it can be used to reference the entity in other entities or to retrieve it from the backend.
	Id string `json:"id"`
	// The date and time the entity was created
	CreatedAt int64 `json:"created_at"`
	// The date and time the entity was last updated
	UpdatedAt int64 `json:"updated_at"`
	// The total amount of the booking, accross all allocations
	Amount float64 `json:"amount"`
	// The timestamp of the booking
	Date int64 `json:"date"`
	// A short description of the booking
	Description string `json:"description"`
	// Information on how the total amount of the booking is allocated to  different accounts for the credit
	Credit []AccountBookingAllocation `json:"credit"`
	// Information on how the total amount of the booking is allocated to  different accounts for the debit
	Debit []AccountBookingAllocation `json:"debit"`
	// Optional reference to the source transaction, if the booking was made based on a transaction
	TransactionRef *string `json:"transaction_ref,omitempty"`
}

type _AccountBooking AccountBooking

// NewAccountBooking instantiates a new AccountBooking object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountBooking(id string, createdAt int64, updatedAt int64, amount float64, date int64, description string, credit []AccountBookingAllocation, debit []AccountBookingAllocation) *AccountBooking {
	this := AccountBooking{}
	this.Id = id
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Amount = amount
	this.Date = date
	this.Description = description
	this.Credit = credit
	this.Debit = debit
	return &this
}

// NewAccountBookingWithDefaults instantiates a new AccountBooking object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountBookingWithDefaults() *AccountBooking {
	this := AccountBooking{}
	return &this
}

// GetId returns the Id field value
func (o *AccountBooking) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccountBooking) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccountBooking) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AccountBooking) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AccountBooking) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AccountBooking) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *AccountBooking) GetUpdatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *AccountBooking) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *AccountBooking) SetUpdatedAt(v int64) {
	o.UpdatedAt = v
}

// GetAmount returns the Amount field value
func (o *AccountBooking) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *AccountBooking) GetAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *AccountBooking) SetAmount(v float64) {
	o.Amount = v
}

// GetDate returns the Date field value
func (o *AccountBooking) GetDate() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *AccountBooking) GetDateOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *AccountBooking) SetDate(v int64) {
	o.Date = v
}

// GetDescription returns the Description field value
func (o *AccountBooking) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AccountBooking) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AccountBooking) SetDescription(v string) {
	o.Description = v
}

// GetCredit returns the Credit field value
func (o *AccountBooking) GetCredit() []AccountBookingAllocation {
	if o == nil {
		var ret []AccountBookingAllocation
		return ret
	}

	return o.Credit
}

// GetCreditOk returns a tuple with the Credit field value
// and a boolean to check if the value has been set.
func (o *AccountBooking) GetCreditOk() ([]AccountBookingAllocation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Credit, true
}

// SetCredit sets field value
func (o *AccountBooking) SetCredit(v []AccountBookingAllocation) {
	o.Credit = v
}

// GetDebit returns the Debit field value
func (o *AccountBooking) GetDebit() []AccountBookingAllocation {
	if o == nil {
		var ret []AccountBookingAllocation
		return ret
	}

	return o.Debit
}

// GetDebitOk returns a tuple with the Debit field value
// and a boolean to check if the value has been set.
func (o *AccountBooking) GetDebitOk() ([]AccountBookingAllocation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Debit, true
}

// SetDebit sets field value
func (o *AccountBooking) SetDebit(v []AccountBookingAllocation) {
	o.Debit = v
}

// GetTransactionRef returns the TransactionRef field value if set, zero value otherwise.
func (o *AccountBooking) GetTransactionRef() string {
	if o == nil || IsNil(o.TransactionRef) {
		var ret string
		return ret
	}
	return *o.TransactionRef
}

// GetTransactionRefOk returns a tuple with the TransactionRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBooking) GetTransactionRefOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionRef) {
		return nil, false
	}
	return o.TransactionRef, true
}

// HasTransactionRef returns a boolean if a field has been set.
func (o *AccountBooking) HasTransactionRef() bool {
	if o != nil && !IsNil(o.TransactionRef) {
		return true
	}

	return false
}

// SetTransactionRef gets a reference to the given string and assigns it to the TransactionRef field.
func (o *AccountBooking) SetTransactionRef(v string) {
	o.TransactionRef = &v
}

func (o AccountBooking) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountBooking) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["amount"] = o.Amount
	toSerialize["date"] = o.Date
	toSerialize["description"] = o.Description
	toSerialize["credit"] = o.Credit
	toSerialize["debit"] = o.Debit
	if !IsNil(o.TransactionRef) {
		toSerialize["transaction_ref"] = o.TransactionRef
	}
	return toSerialize, nil
}

func (o *AccountBooking) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"updated_at",
		"amount",
		"date",
		"description",
		"credit",
		"debit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountBooking := _AccountBooking{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountBooking)

	if err != nil {
		return err
	}

	*o = AccountBooking(varAccountBooking)

	return err
}

type NullableAccountBooking struct {
	value *AccountBooking
	isSet bool
}

func (v NullableAccountBooking) Get() *AccountBooking {
	return v.value
}

func (v *NullableAccountBooking) Set(val *AccountBooking) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountBooking) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountBooking) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountBooking(val *AccountBooking) *NullableAccountBooking {
	return &NullableAccountBooking{value: val, isSet: true}
}

func (v NullableAccountBooking) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountBooking) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
