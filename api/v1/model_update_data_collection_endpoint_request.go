/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// UpdateDataCollectionEndpointRequest request used to update an existing data collection endpoint
type UpdateDataCollectionEndpointRequest struct {
	// if true, the endpoint will be disabled after it has been used once
	SingleUse           *bool       `json:"single_use,omitempty"`
	PropertyRefs        []string    `json:"property_refs,omitempty"`
	PropertyAddresses   []string    `json:"property_addresses,omitempty"`
	AdditionalQuestions *CustomForm `json:"additional_questions,omitempty"`
}

// NewUpdateDataCollectionEndpointRequest instantiates a new UpdateDataCollectionEndpointRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDataCollectionEndpointRequest() *UpdateDataCollectionEndpointRequest {
	this := UpdateDataCollectionEndpointRequest{}
	return &this
}

// NewUpdateDataCollectionEndpointRequestWithDefaults instantiates a new UpdateDataCollectionEndpointRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDataCollectionEndpointRequestWithDefaults() *UpdateDataCollectionEndpointRequest {
	this := UpdateDataCollectionEndpointRequest{}
	return &this
}

// GetSingleUse returns the SingleUse field value if set, zero value otherwise.
func (o *UpdateDataCollectionEndpointRequest) GetSingleUse() bool {
	if o == nil || o.SingleUse == nil {
		var ret bool
		return ret
	}
	return *o.SingleUse
}

// GetSingleUseOk returns a tuple with the SingleUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDataCollectionEndpointRequest) GetSingleUseOk() (*bool, bool) {
	if o == nil || o.SingleUse == nil {
		return nil, false
	}
	return o.SingleUse, true
}

// HasSingleUse returns a boolean if a field has been set.
func (o *UpdateDataCollectionEndpointRequest) HasSingleUse() bool {
	if o != nil && o.SingleUse != nil {
		return true
	}

	return false
}

// SetSingleUse gets a reference to the given bool and assigns it to the SingleUse field.
func (o *UpdateDataCollectionEndpointRequest) SetSingleUse(v bool) {
	o.SingleUse = &v
}

// GetPropertyRefs returns the PropertyRefs field value if set, zero value otherwise.
func (o *UpdateDataCollectionEndpointRequest) GetPropertyRefs() []string {
	if o == nil || o.PropertyRefs == nil {
		var ret []string
		return ret
	}
	return o.PropertyRefs
}

// GetPropertyRefsOk returns a tuple with the PropertyRefs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDataCollectionEndpointRequest) GetPropertyRefsOk() ([]string, bool) {
	if o == nil || o.PropertyRefs == nil {
		return nil, false
	}
	return o.PropertyRefs, true
}

// HasPropertyRefs returns a boolean if a field has been set.
func (o *UpdateDataCollectionEndpointRequest) HasPropertyRefs() bool {
	if o != nil && o.PropertyRefs != nil {
		return true
	}

	return false
}

// SetPropertyRefs gets a reference to the given []string and assigns it to the PropertyRefs field.
func (o *UpdateDataCollectionEndpointRequest) SetPropertyRefs(v []string) {
	o.PropertyRefs = v
}

// GetPropertyAddresses returns the PropertyAddresses field value if set, zero value otherwise.
func (o *UpdateDataCollectionEndpointRequest) GetPropertyAddresses() []string {
	if o == nil || o.PropertyAddresses == nil {
		var ret []string
		return ret
	}
	return o.PropertyAddresses
}

// GetPropertyAddressesOk returns a tuple with the PropertyAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDataCollectionEndpointRequest) GetPropertyAddressesOk() ([]string, bool) {
	if o == nil || o.PropertyAddresses == nil {
		return nil, false
	}
	return o.PropertyAddresses, true
}

// HasPropertyAddresses returns a boolean if a field has been set.
func (o *UpdateDataCollectionEndpointRequest) HasPropertyAddresses() bool {
	if o != nil && o.PropertyAddresses != nil {
		return true
	}

	return false
}

// SetPropertyAddresses gets a reference to the given []string and assigns it to the PropertyAddresses field.
func (o *UpdateDataCollectionEndpointRequest) SetPropertyAddresses(v []string) {
	o.PropertyAddresses = v
}

// GetAdditionalQuestions returns the AdditionalQuestions field value if set, zero value otherwise.
func (o *UpdateDataCollectionEndpointRequest) GetAdditionalQuestions() CustomForm {
	if o == nil || o.AdditionalQuestions == nil {
		var ret CustomForm
		return ret
	}
	return *o.AdditionalQuestions
}

// GetAdditionalQuestionsOk returns a tuple with the AdditionalQuestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDataCollectionEndpointRequest) GetAdditionalQuestionsOk() (*CustomForm, bool) {
	if o == nil || o.AdditionalQuestions == nil {
		return nil, false
	}
	return o.AdditionalQuestions, true
}

// HasAdditionalQuestions returns a boolean if a field has been set.
func (o *UpdateDataCollectionEndpointRequest) HasAdditionalQuestions() bool {
	if o != nil && o.AdditionalQuestions != nil {
		return true
	}

	return false
}

// SetAdditionalQuestions gets a reference to the given CustomForm and assigns it to the AdditionalQuestions field.
func (o *UpdateDataCollectionEndpointRequest) SetAdditionalQuestions(v CustomForm) {
	o.AdditionalQuestions = &v
}

func (o UpdateDataCollectionEndpointRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SingleUse != nil {
		toSerialize["single_use"] = o.SingleUse
	}
	if o.PropertyRefs != nil {
		toSerialize["property_refs"] = o.PropertyRefs
	}
	if o.PropertyAddresses != nil {
		toSerialize["property_addresses"] = o.PropertyAddresses
	}
	if o.AdditionalQuestions != nil {
		toSerialize["additional_questions"] = o.AdditionalQuestions
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateDataCollectionEndpointRequest struct {
	value *UpdateDataCollectionEndpointRequest
	isSet bool
}

func (v NullableUpdateDataCollectionEndpointRequest) Get() *UpdateDataCollectionEndpointRequest {
	return v.value
}

func (v *NullableUpdateDataCollectionEndpointRequest) Set(val *UpdateDataCollectionEndpointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDataCollectionEndpointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDataCollectionEndpointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDataCollectionEndpointRequest(val *UpdateDataCollectionEndpointRequest) *NullableUpdateDataCollectionEndpointRequest {
	return &NullableUpdateDataCollectionEndpointRequest{value: val, isSet: true}
}

func (v NullableUpdateDataCollectionEndpointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDataCollectionEndpointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
