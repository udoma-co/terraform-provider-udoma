/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the CreateDocumentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDocumentRequest{}

// CreateDocumentRequest Attributes needed for creating a document uploaded in the system
type CreateDocumentRequest struct {
	RefType *DocumentRefTypeEnum `json:"ref_type,omitempty"`
	// The ID of the entity for which the document is uploaded. Can be empty, if the  reference type is 'static'.
	RefId *string `json:"ref_id,omitempty"`
	// The ID of the already uploaded attachment
	AttachmentRef *string `json:"attachment_ref,omitempty"`
	// The name of the document entry
	Name *string `json:"name,omitempty"`
	// Optional path that can be used to nest documents in folder like structures
	Path *string `json:"path,omitempty"`
	// Indicator, controlling whether tenants can see the document (only relevant for  reference type 'property')
	Public *bool `json:"public,omitempty"`
}

// NewCreateDocumentRequest instantiates a new CreateDocumentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDocumentRequest() *CreateDocumentRequest {
	this := CreateDocumentRequest{}
	return &this
}

// NewCreateDocumentRequestWithDefaults instantiates a new CreateDocumentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDocumentRequestWithDefaults() *CreateDocumentRequest {
	this := CreateDocumentRequest{}
	return &this
}

// GetRefType returns the RefType field value if set, zero value otherwise.
func (o *CreateDocumentRequest) GetRefType() DocumentRefTypeEnum {
	if o == nil || IsNil(o.RefType) {
		var ret DocumentRefTypeEnum
		return ret
	}
	return *o.RefType
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDocumentRequest) GetRefTypeOk() (*DocumentRefTypeEnum, bool) {
	if o == nil || IsNil(o.RefType) {
		return nil, false
	}
	return o.RefType, true
}

// HasRefType returns a boolean if a field has been set.
func (o *CreateDocumentRequest) HasRefType() bool {
	if o != nil && !IsNil(o.RefType) {
		return true
	}

	return false
}

// SetRefType gets a reference to the given DocumentRefTypeEnum and assigns it to the RefType field.
func (o *CreateDocumentRequest) SetRefType(v DocumentRefTypeEnum) {
	o.RefType = &v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *CreateDocumentRequest) GetRefId() string {
	if o == nil || IsNil(o.RefId) {
		var ret string
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDocumentRequest) GetRefIdOk() (*string, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// HasRefId returns a boolean if a field has been set.
func (o *CreateDocumentRequest) HasRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given string and assigns it to the RefId field.
func (o *CreateDocumentRequest) SetRefId(v string) {
	o.RefId = &v
}

// GetAttachmentRef returns the AttachmentRef field value if set, zero value otherwise.
func (o *CreateDocumentRequest) GetAttachmentRef() string {
	if o == nil || IsNil(o.AttachmentRef) {
		var ret string
		return ret
	}
	return *o.AttachmentRef
}

// GetAttachmentRefOk returns a tuple with the AttachmentRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDocumentRequest) GetAttachmentRefOk() (*string, bool) {
	if o == nil || IsNil(o.AttachmentRef) {
		return nil, false
	}
	return o.AttachmentRef, true
}

// HasAttachmentRef returns a boolean if a field has been set.
func (o *CreateDocumentRequest) HasAttachmentRef() bool {
	if o != nil && !IsNil(o.AttachmentRef) {
		return true
	}

	return false
}

// SetAttachmentRef gets a reference to the given string and assigns it to the AttachmentRef field.
func (o *CreateDocumentRequest) SetAttachmentRef(v string) {
	o.AttachmentRef = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateDocumentRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDocumentRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateDocumentRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateDocumentRequest) SetName(v string) {
	o.Name = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *CreateDocumentRequest) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDocumentRequest) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *CreateDocumentRequest) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *CreateDocumentRequest) SetPath(v string) {
	o.Path = &v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *CreateDocumentRequest) GetPublic() bool {
	if o == nil || IsNil(o.Public) {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDocumentRequest) GetPublicOk() (*bool, bool) {
	if o == nil || IsNil(o.Public) {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *CreateDocumentRequest) HasPublic() bool {
	if o != nil && !IsNil(o.Public) {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *CreateDocumentRequest) SetPublic(v bool) {
	o.Public = &v
}

func (o CreateDocumentRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDocumentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RefType) {
		toSerialize["ref_type"] = o.RefType
	}
	if !IsNil(o.RefId) {
		toSerialize["ref_id"] = o.RefId
	}
	if !IsNil(o.AttachmentRef) {
		toSerialize["attachment_ref"] = o.AttachmentRef
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Public) {
		toSerialize["public"] = o.Public
	}
	return toSerialize, nil
}

type NullableCreateDocumentRequest struct {
	value *CreateDocumentRequest
	isSet bool
}

func (v NullableCreateDocumentRequest) Get() *CreateDocumentRequest {
	return v.value
}

func (v *NullableCreateDocumentRequest) Set(val *CreateDocumentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDocumentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDocumentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDocumentRequest(val *CreateDocumentRequest) *NullableCreateDocumentRequest {
	return &NullableCreateDocumentRequest{value: val, isSet: true}
}

func (v NullableCreateDocumentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDocumentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
