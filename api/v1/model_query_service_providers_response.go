/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// QueryServiceProvidersResponse Response to a query for service providers
type QueryServiceProvidersResponse struct {
	// list of service providers
	ServiceProviders []ServiceProvider `json:"service_providers,omitempty"`
}

// NewQueryServiceProvidersResponse instantiates a new QueryServiceProvidersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryServiceProvidersResponse() *QueryServiceProvidersResponse {
	this := QueryServiceProvidersResponse{}
	return &this
}

// NewQueryServiceProvidersResponseWithDefaults instantiates a new QueryServiceProvidersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryServiceProvidersResponseWithDefaults() *QueryServiceProvidersResponse {
	this := QueryServiceProvidersResponse{}
	return &this
}

// GetServiceProviders returns the ServiceProviders field value if set, zero value otherwise.
func (o *QueryServiceProvidersResponse) GetServiceProviders() []ServiceProvider {
	if o == nil || o.ServiceProviders == nil {
		var ret []ServiceProvider
		return ret
	}
	return o.ServiceProviders
}

// GetServiceProvidersOk returns a tuple with the ServiceProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryServiceProvidersResponse) GetServiceProvidersOk() ([]ServiceProvider, bool) {
	if o == nil || o.ServiceProviders == nil {
		return nil, false
	}
	return o.ServiceProviders, true
}

// HasServiceProviders returns a boolean if a field has been set.
func (o *QueryServiceProvidersResponse) HasServiceProviders() bool {
	if o != nil && o.ServiceProviders != nil {
		return true
	}

	return false
}

// SetServiceProviders gets a reference to the given []ServiceProvider and assigns it to the ServiceProviders field.
func (o *QueryServiceProvidersResponse) SetServiceProviders(v []ServiceProvider) {
	o.ServiceProviders = v
}

func (o QueryServiceProvidersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceProviders != nil {
		toSerialize["service_providers"] = o.ServiceProviders
	}
	return json.Marshal(toSerialize)
}

type NullableQueryServiceProvidersResponse struct {
	value *QueryServiceProvidersResponse
	isSet bool
}

func (v NullableQueryServiceProvidersResponse) Get() *QueryServiceProvidersResponse {
	return v.value
}

func (v *NullableQueryServiceProvidersResponse) Set(val *QueryServiceProvidersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryServiceProvidersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryServiceProvidersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryServiceProvidersResponse(val *QueryServiceProvidersResponse) *NullableQueryServiceProvidersResponse {
	return &NullableQueryServiceProvidersResponse{value: val, isSet: true}
}

func (v NullableQueryServiceProvidersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryServiceProvidersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
