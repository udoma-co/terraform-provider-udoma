/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the ExecuteReportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecuteReportRequest{}

// ExecuteReportRequest The data required to execute a report
type ExecuteReportRequest struct {
	// The parameters used to execute the report as a data map
	Parameters map[string]interface{} `json:"parameters,omitempty"`
}

// NewExecuteReportRequest instantiates a new ExecuteReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecuteReportRequest() *ExecuteReportRequest {
	this := ExecuteReportRequest{}
	return &this
}

// NewExecuteReportRequestWithDefaults instantiates a new ExecuteReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecuteReportRequestWithDefaults() *ExecuteReportRequest {
	this := ExecuteReportRequest{}
	return &this
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ExecuteReportRequest) GetParameters() map[string]interface{} {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteReportRequest) GetParametersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Parameters) {
		return map[string]interface{}{}, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *ExecuteReportRequest) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]interface{} and assigns it to the Parameters field.
func (o *ExecuteReportRequest) SetParameters(v map[string]interface{}) {
	o.Parameters = v
}

func (o ExecuteReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecuteReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableExecuteReportRequest struct {
	value *ExecuteReportRequest
	isSet bool
}

func (v NullableExecuteReportRequest) Get() *ExecuteReportRequest {
	return v.value
}

func (v *NullableExecuteReportRequest) Set(val *ExecuteReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExecuteReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExecuteReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecuteReportRequest(val *ExecuteReportRequest) *NullableExecuteReportRequest {
	return &NullableExecuteReportRequest{value: val, isSet: true}
}

func (v NullableExecuteReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecuteReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
