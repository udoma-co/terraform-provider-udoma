/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateOrUpdateHookRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateHookRequest{}

// CreateOrUpdateHookRequest struct for CreateOrUpdateHookRequest
type CreateOrUpdateHookRequest struct {
	Entity HookEntity `json:"entity"`
	Action HookAction `json:"action"`
	// The script to run when the action is performed
	Script string `json:"script"`
	// This is just the order of execution of the hooks
	Priority int32 `json:"priority"`
	// Whether the hook is enabled and should be ran
	Enabled bool `json:"enabled"`
}

type _CreateOrUpdateHookRequest CreateOrUpdateHookRequest

// NewCreateOrUpdateHookRequest instantiates a new CreateOrUpdateHookRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateHookRequest(entity HookEntity, action HookAction, script string, priority int32, enabled bool) *CreateOrUpdateHookRequest {
	this := CreateOrUpdateHookRequest{}
	this.Entity = entity
	this.Action = action
	this.Script = script
	this.Priority = priority
	this.Enabled = enabled
	return &this
}

// NewCreateOrUpdateHookRequestWithDefaults instantiates a new CreateOrUpdateHookRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateHookRequestWithDefaults() *CreateOrUpdateHookRequest {
	this := CreateOrUpdateHookRequest{}
	return &this
}

// GetEntity returns the Entity field value
func (o *CreateOrUpdateHookRequest) GetEntity() HookEntity {
	if o == nil {
		var ret HookEntity
		return ret
	}

	return o.Entity
}

// GetEntityOk returns a tuple with the Entity field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateHookRequest) GetEntityOk() (*HookEntity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entity, true
}

// SetEntity sets field value
func (o *CreateOrUpdateHookRequest) SetEntity(v HookEntity) {
	o.Entity = v
}

// GetAction returns the Action field value
func (o *CreateOrUpdateHookRequest) GetAction() HookAction {
	if o == nil {
		var ret HookAction
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateHookRequest) GetActionOk() (*HookAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *CreateOrUpdateHookRequest) SetAction(v HookAction) {
	o.Action = v
}

// GetScript returns the Script field value
func (o *CreateOrUpdateHookRequest) GetScript() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Script
}

// GetScriptOk returns a tuple with the Script field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateHookRequest) GetScriptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Script, true
}

// SetScript sets field value
func (o *CreateOrUpdateHookRequest) SetScript(v string) {
	o.Script = v
}

// GetPriority returns the Priority field value
func (o *CreateOrUpdateHookRequest) GetPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateHookRequest) GetPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *CreateOrUpdateHookRequest) SetPriority(v int32) {
	o.Priority = v
}

// GetEnabled returns the Enabled field value
func (o *CreateOrUpdateHookRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateHookRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *CreateOrUpdateHookRequest) SetEnabled(v bool) {
	o.Enabled = v
}

func (o CreateOrUpdateHookRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateHookRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entity"] = o.Entity
	toSerialize["action"] = o.Action
	toSerialize["script"] = o.Script
	toSerialize["priority"] = o.Priority
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

func (o *CreateOrUpdateHookRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entity",
		"action",
		"script",
		"priority",
		"enabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrUpdateHookRequest := _CreateOrUpdateHookRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrUpdateHookRequest)

	if err != nil {
		return err
	}

	*o = CreateOrUpdateHookRequest(varCreateOrUpdateHookRequest)

	return err
}

type NullableCreateOrUpdateHookRequest struct {
	value *CreateOrUpdateHookRequest
	isSet bool
}

func (v NullableCreateOrUpdateHookRequest) Get() *CreateOrUpdateHookRequest {
	return v.value
}

func (v *NullableCreateOrUpdateHookRequest) Set(val *CreateOrUpdateHookRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateHookRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateHookRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateHookRequest(val *CreateOrUpdateHookRequest) *NullableCreateOrUpdateHookRequest {
	return &NullableCreateOrUpdateHookRequest{value: val, isSet: true}
}

func (v NullableCreateOrUpdateHookRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateHookRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
