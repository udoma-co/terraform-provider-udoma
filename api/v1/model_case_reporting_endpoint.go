/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the CaseReportingEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CaseReportingEndpoint{}

// CaseReportingEndpoint Contains necessary information for displaying a publicly available form,  where tenants who don't have a login can raise cases.
type CaseReportingEndpoint struct {
	// The unique code that identifies the endpoint
	Code *string `json:"code,omitempty"`
	// The timestamp of when the endpoint was created
	CreatedAt *int64 `json:"created_at,omitempty"`
	// The timestamp of when the endpoint was last updated
	UpdatedAt *int64 `json:"updated_at,omitempty"`
	// The name of the endpoint (only used in admin pages)
	Name *string `json:"name,omitempty"`
	// Whether the endpoint is enabled or not
	Active       *bool    `json:"active,omitempty"`
	PropertyRefs []string `json:"property_refs,omitempty"`
	// Categories, used to group the templates, in order not to clutter the Case Reporting Endpoint page.
	CaseCategories []CaseReportingEndpointCategory `json:"case_categories,omitempty"`
}

// NewCaseReportingEndpoint instantiates a new CaseReportingEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaseReportingEndpoint() *CaseReportingEndpoint {
	this := CaseReportingEndpoint{}
	return &this
}

// NewCaseReportingEndpointWithDefaults instantiates a new CaseReportingEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaseReportingEndpointWithDefaults() *CaseReportingEndpoint {
	this := CaseReportingEndpoint{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CaseReportingEndpoint) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseReportingEndpoint) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CaseReportingEndpoint) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CaseReportingEndpoint) SetCode(v string) {
	o.Code = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CaseReportingEndpoint) GetCreatedAt() int64 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int64
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseReportingEndpoint) GetCreatedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CaseReportingEndpoint) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int64 and assigns it to the CreatedAt field.
func (o *CaseReportingEndpoint) SetCreatedAt(v int64) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CaseReportingEndpoint) GetUpdatedAt() int64 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int64
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseReportingEndpoint) GetUpdatedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CaseReportingEndpoint) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int64 and assigns it to the UpdatedAt field.
func (o *CaseReportingEndpoint) SetUpdatedAt(v int64) {
	o.UpdatedAt = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CaseReportingEndpoint) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseReportingEndpoint) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CaseReportingEndpoint) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CaseReportingEndpoint) SetName(v string) {
	o.Name = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CaseReportingEndpoint) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseReportingEndpoint) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CaseReportingEndpoint) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CaseReportingEndpoint) SetActive(v bool) {
	o.Active = &v
}

// GetPropertyRefs returns the PropertyRefs field value if set, zero value otherwise.
func (o *CaseReportingEndpoint) GetPropertyRefs() []string {
	if o == nil || IsNil(o.PropertyRefs) {
		var ret []string
		return ret
	}
	return o.PropertyRefs
}

// GetPropertyRefsOk returns a tuple with the PropertyRefs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseReportingEndpoint) GetPropertyRefsOk() ([]string, bool) {
	if o == nil || IsNil(o.PropertyRefs) {
		return nil, false
	}
	return o.PropertyRefs, true
}

// HasPropertyRefs returns a boolean if a field has been set.
func (o *CaseReportingEndpoint) HasPropertyRefs() bool {
	if o != nil && !IsNil(o.PropertyRefs) {
		return true
	}

	return false
}

// SetPropertyRefs gets a reference to the given []string and assigns it to the PropertyRefs field.
func (o *CaseReportingEndpoint) SetPropertyRefs(v []string) {
	o.PropertyRefs = v
}

// GetCaseCategories returns the CaseCategories field value if set, zero value otherwise.
func (o *CaseReportingEndpoint) GetCaseCategories() []CaseReportingEndpointCategory {
	if o == nil || IsNil(o.CaseCategories) {
		var ret []CaseReportingEndpointCategory
		return ret
	}
	return o.CaseCategories
}

// GetCaseCategoriesOk returns a tuple with the CaseCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseReportingEndpoint) GetCaseCategoriesOk() ([]CaseReportingEndpointCategory, bool) {
	if o == nil || IsNil(o.CaseCategories) {
		return nil, false
	}
	return o.CaseCategories, true
}

// HasCaseCategories returns a boolean if a field has been set.
func (o *CaseReportingEndpoint) HasCaseCategories() bool {
	if o != nil && !IsNil(o.CaseCategories) {
		return true
	}

	return false
}

// SetCaseCategories gets a reference to the given []CaseReportingEndpointCategory and assigns it to the CaseCategories field.
func (o *CaseReportingEndpoint) SetCaseCategories(v []CaseReportingEndpointCategory) {
	o.CaseCategories = v
}

func (o CaseReportingEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CaseReportingEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.PropertyRefs) {
		toSerialize["property_refs"] = o.PropertyRefs
	}
	if !IsNil(o.CaseCategories) {
		toSerialize["case_categories"] = o.CaseCategories
	}
	return toSerialize, nil
}

type NullableCaseReportingEndpoint struct {
	value *CaseReportingEndpoint
	isSet bool
}

func (v NullableCaseReportingEndpoint) Get() *CaseReportingEndpoint {
	return v.value
}

func (v *NullableCaseReportingEndpoint) Set(val *CaseReportingEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableCaseReportingEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableCaseReportingEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaseReportingEndpoint(val *CaseReportingEndpoint) *NullableCaseReportingEndpoint {
	return &NullableCaseReportingEndpoint{value: val, isSet: true}
}

func (v NullableCaseReportingEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaseReportingEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
