/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ExecuteWorkflowStepRequest a request for executing a workflow step
type ExecuteWorkflowStepRequest struct {
	StepRef *string `json:"step_ref,omitempty"`
	// the action that was executed on the step
	Action *string `json:"action,omitempty"`
	// the data to be used for executing the workflow step as JSON
	Data *string `json:"data,omitempty"`
}

// NewExecuteWorkflowStepRequest instantiates a new ExecuteWorkflowStepRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecuteWorkflowStepRequest() *ExecuteWorkflowStepRequest {
	this := ExecuteWorkflowStepRequest{}
	return &this
}

// NewExecuteWorkflowStepRequestWithDefaults instantiates a new ExecuteWorkflowStepRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecuteWorkflowStepRequestWithDefaults() *ExecuteWorkflowStepRequest {
	this := ExecuteWorkflowStepRequest{}
	return &this
}

// GetStepRef returns the StepRef field value if set, zero value otherwise.
func (o *ExecuteWorkflowStepRequest) GetStepRef() string {
	if o == nil || o.StepRef == nil {
		var ret string
		return ret
	}
	return *o.StepRef
}

// GetStepRefOk returns a tuple with the StepRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteWorkflowStepRequest) GetStepRefOk() (*string, bool) {
	if o == nil || o.StepRef == nil {
		return nil, false
	}
	return o.StepRef, true
}

// HasStepRef returns a boolean if a field has been set.
func (o *ExecuteWorkflowStepRequest) HasStepRef() bool {
	if o != nil && o.StepRef != nil {
		return true
	}

	return false
}

// SetStepRef gets a reference to the given string and assigns it to the StepRef field.
func (o *ExecuteWorkflowStepRequest) SetStepRef(v string) {
	o.StepRef = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ExecuteWorkflowStepRequest) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteWorkflowStepRequest) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ExecuteWorkflowStepRequest) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ExecuteWorkflowStepRequest) SetAction(v string) {
	o.Action = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ExecuteWorkflowStepRequest) GetData() string {
	if o == nil || o.Data == nil {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteWorkflowStepRequest) GetDataOk() (*string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ExecuteWorkflowStepRequest) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *ExecuteWorkflowStepRequest) SetData(v string) {
	o.Data = &v
}

func (o ExecuteWorkflowStepRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StepRef != nil {
		toSerialize["step_ref"] = o.StepRef
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableExecuteWorkflowStepRequest struct {
	value *ExecuteWorkflowStepRequest
	isSet bool
}

func (v NullableExecuteWorkflowStepRequest) Get() *ExecuteWorkflowStepRequest {
	return v.value
}

func (v *NullableExecuteWorkflowStepRequest) Set(val *ExecuteWorkflowStepRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExecuteWorkflowStepRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExecuteWorkflowStepRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecuteWorkflowStepRequest(val *ExecuteWorkflowStepRequest) *NullableExecuteWorkflowStepRequest {
	return &NullableExecuteWorkflowStepRequest{value: val, isSet: true}
}

func (v NullableExecuteWorkflowStepRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecuteWorkflowStepRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
