/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CreatePropertyRequest A requests that holds all necessary information to create a property.
type CreatePropertyRequest struct {
	// e.g. 'Whg 12', or 'Etage 2/Links'
	Name string       `json:"name"`
	Type PropertyType `json:"type"`
	// Optional reference to the property owner
	OwnerRef *string `json:"owner_ref,omitempty"`
	// Optional parent property (e.g. building) to which this property belongs
	ParentRef *string          `json:"parent_ref,omitempty"`
	Address   *Address         `json:"address,omitempty"`
	Details   *PropertyDetails `json:"details,omitempty"`
}

// NewCreatePropertyRequest instantiates a new CreatePropertyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePropertyRequest(name string, type_ PropertyType) *CreatePropertyRequest {
	this := CreatePropertyRequest{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewCreatePropertyRequestWithDefaults instantiates a new CreatePropertyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePropertyRequestWithDefaults() *CreatePropertyRequest {
	this := CreatePropertyRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreatePropertyRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreatePropertyRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreatePropertyRequest) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *CreatePropertyRequest) GetType() PropertyType {
	if o == nil {
		var ret PropertyType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreatePropertyRequest) GetTypeOk() (*PropertyType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreatePropertyRequest) SetType(v PropertyType) {
	o.Type = v
}

// GetOwnerRef returns the OwnerRef field value if set, zero value otherwise.
func (o *CreatePropertyRequest) GetOwnerRef() string {
	if o == nil || o.OwnerRef == nil {
		var ret string
		return ret
	}
	return *o.OwnerRef
}

// GetOwnerRefOk returns a tuple with the OwnerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePropertyRequest) GetOwnerRefOk() (*string, bool) {
	if o == nil || o.OwnerRef == nil {
		return nil, false
	}
	return o.OwnerRef, true
}

// HasOwnerRef returns a boolean if a field has been set.
func (o *CreatePropertyRequest) HasOwnerRef() bool {
	if o != nil && o.OwnerRef != nil {
		return true
	}

	return false
}

// SetOwnerRef gets a reference to the given string and assigns it to the OwnerRef field.
func (o *CreatePropertyRequest) SetOwnerRef(v string) {
	o.OwnerRef = &v
}

// GetParentRef returns the ParentRef field value if set, zero value otherwise.
func (o *CreatePropertyRequest) GetParentRef() string {
	if o == nil || o.ParentRef == nil {
		var ret string
		return ret
	}
	return *o.ParentRef
}

// GetParentRefOk returns a tuple with the ParentRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePropertyRequest) GetParentRefOk() (*string, bool) {
	if o == nil || o.ParentRef == nil {
		return nil, false
	}
	return o.ParentRef, true
}

// HasParentRef returns a boolean if a field has been set.
func (o *CreatePropertyRequest) HasParentRef() bool {
	if o != nil && o.ParentRef != nil {
		return true
	}

	return false
}

// SetParentRef gets a reference to the given string and assigns it to the ParentRef field.
func (o *CreatePropertyRequest) SetParentRef(v string) {
	o.ParentRef = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CreatePropertyRequest) GetAddress() Address {
	if o == nil || o.Address == nil {
		var ret Address
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePropertyRequest) GetAddressOk() (*Address, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CreatePropertyRequest) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given Address and assigns it to the Address field.
func (o *CreatePropertyRequest) SetAddress(v Address) {
	o.Address = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *CreatePropertyRequest) GetDetails() PropertyDetails {
	if o == nil || o.Details == nil {
		var ret PropertyDetails
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePropertyRequest) GetDetailsOk() (*PropertyDetails, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *CreatePropertyRequest) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given PropertyDetails and assigns it to the Details field.
func (o *CreatePropertyRequest) SetDetails(v PropertyDetails) {
	o.Details = &v
}

func (o CreatePropertyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.OwnerRef != nil {
		toSerialize["owner_ref"] = o.OwnerRef
	}
	if o.ParentRef != nil {
		toSerialize["parent_ref"] = o.ParentRef
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	return json.Marshal(toSerialize)
}

type NullableCreatePropertyRequest struct {
	value *CreatePropertyRequest
	isSet bool
}

func (v NullableCreatePropertyRequest) Get() *CreatePropertyRequest {
	return v.value
}

func (v *NullableCreatePropertyRequest) Set(val *CreatePropertyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePropertyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePropertyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePropertyRequest(val *CreatePropertyRequest) *NullableCreatePropertyRequest {
	return &NullableCreatePropertyRequest{value: val, isSet: true}
}

func (v NullableCreatePropertyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePropertyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
