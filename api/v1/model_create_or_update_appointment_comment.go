/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateOrUpdateAppointmentComment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateAppointmentComment{}

// CreateOrUpdateAppointmentComment struct for CreateOrUpdateAppointmentComment
type CreateOrUpdateAppointmentComment struct {
	// A reference to the appointment that this comment belongs to.
	AppointmentRef string `json:"appointment_ref"`
	Content        string `json:"content"`
	// list of IDs of attachments that should be linked to the comment, attachments should be created through either publicUploadAttachment or uploadAttachment first, and the IDs should be the ones returned in those requests.
	Attachments []string `json:"attachments,omitempty"`
}

type _CreateOrUpdateAppointmentComment CreateOrUpdateAppointmentComment

// NewCreateOrUpdateAppointmentComment instantiates a new CreateOrUpdateAppointmentComment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateAppointmentComment(appointmentRef string, content string) *CreateOrUpdateAppointmentComment {
	this := CreateOrUpdateAppointmentComment{}
	this.AppointmentRef = appointmentRef
	this.Content = content
	return &this
}

// NewCreateOrUpdateAppointmentCommentWithDefaults instantiates a new CreateOrUpdateAppointmentComment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateAppointmentCommentWithDefaults() *CreateOrUpdateAppointmentComment {
	this := CreateOrUpdateAppointmentComment{}
	return &this
}

// GetAppointmentRef returns the AppointmentRef field value
func (o *CreateOrUpdateAppointmentComment) GetAppointmentRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppointmentRef
}

// GetAppointmentRefOk returns a tuple with the AppointmentRef field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppointmentComment) GetAppointmentRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppointmentRef, true
}

// SetAppointmentRef sets field value
func (o *CreateOrUpdateAppointmentComment) SetAppointmentRef(v string) {
	o.AppointmentRef = v
}

// GetContent returns the Content field value
func (o *CreateOrUpdateAppointmentComment) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppointmentComment) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *CreateOrUpdateAppointmentComment) SetContent(v string) {
	o.Content = v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *CreateOrUpdateAppointmentComment) GetAttachments() []string {
	if o == nil || IsNil(o.Attachments) {
		var ret []string
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppointmentComment) GetAttachmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *CreateOrUpdateAppointmentComment) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []string and assigns it to the Attachments field.
func (o *CreateOrUpdateAppointmentComment) SetAttachments(v []string) {
	o.Attachments = v
}

func (o CreateOrUpdateAppointmentComment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateAppointmentComment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["appointment_ref"] = o.AppointmentRef
	toSerialize["content"] = o.Content
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	return toSerialize, nil
}

func (o *CreateOrUpdateAppointmentComment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"appointment_ref",
		"content",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrUpdateAppointmentComment := _CreateOrUpdateAppointmentComment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrUpdateAppointmentComment)

	if err != nil {
		return err
	}

	*o = CreateOrUpdateAppointmentComment(varCreateOrUpdateAppointmentComment)

	return err
}

type NullableCreateOrUpdateAppointmentComment struct {
	value *CreateOrUpdateAppointmentComment
	isSet bool
}

func (v NullableCreateOrUpdateAppointmentComment) Get() *CreateOrUpdateAppointmentComment {
	return v.value
}

func (v *NullableCreateOrUpdateAppointmentComment) Set(val *CreateOrUpdateAppointmentComment) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateAppointmentComment) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateAppointmentComment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateAppointmentComment(val *CreateOrUpdateAppointmentComment) *NullableCreateOrUpdateAppointmentComment {
	return &NullableCreateOrUpdateAppointmentComment{value: val, isSet: true}
}

func (v NullableCreateOrUpdateAppointmentComment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateAppointmentComment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
