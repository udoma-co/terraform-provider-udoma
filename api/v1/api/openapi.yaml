openapi: 3.0.2
info:
  title: Udoma
  version: "1.0"
servers:
- url: https://dev.udoma.cloud/api/udoma/v1/
- url: http://localhost:8080/api/udoma/v1/
paths:
  /public/attachment:
    post:
      description: Upload a new file attachment of any type
      operationId: publicUploadAttachment
      parameters:
      - description: |
          A unique code that grants access to public users to the requested resource. Depending on the context, the code can have a different format and be validated in a different way. The parameter can be either provided in a path or as a query parameter
        explode: true
        in: query
        name: code
        required: true
        schema:
          type: string
        style: form
      - description: |
          A user challenge code (e.g. reCaptcha response), used for protection of public API endpoints against bots or other malicious actors. A challenge should only be used when posting data to the backend. For reading operations, the code parameter should be used. The content of the challenge can be one of reCaptcha, code, certificate and should be prefixed accordingly. The challenge can also be ommitted by registered users, as those will be validated against their session.
        explode: true
        in: query
        name: challenge
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/publicUploadAttachment_request'
        description: A file attachment that will be referenced by other entities
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Successfully uploaded file
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Upload new file attachment
  /public/attachment/{attachmentID}:
    delete:
      operationId: publicDeleteAttachment
      parameters:
      - description: unique generate ID of a file attachment
        explode: false
        in: path
        name: attachmentID
        required: true
        schema:
          pattern: "^f-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      - description: |
          A unique code that grants access to public users to the requested resource. Depending on the context, the code can have a different format and be validated in a different way. The parameter can be either provided in a path or as a query parameter
        explode: true
        in: query
        name: code
        required: true
        schema:
          type: string
        style: form
      - description: |
          A user challenge code (e.g. reCaptcha response), used for protection of public API endpoints against bots or other malicious actors. A challenge should only be used when posting data to the backend. For reading operations, the code parameter should be used. The content of the challenge can be one of reCaptcha, code, certificate and should be prefixed accordingly. The challenge can also be ommitted by registered users, as those will be validated against their session.
        explode: true
        in: query
        name: challenge
        required: true
        schema:
          type: string
        style: form
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Delete the file upload with the given ID
    get:
      description: Get the file attachment with the given ID
      operationId: publicGetAttachment
      parameters:
      - description: unique generate ID of a file attachment
        explode: false
        in: path
        name: attachmentID
        required: true
        schema:
          pattern: "^f-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      - description: |
          A unique code that grants access to public users to the requested resource. Depending on the context, the code can have a different format and be validated in a different way. The parameter can be either provided in a path or as a query parameter
        explode: true
        in: query
        name: code
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Get a file attachment
  /public/calendar/appointments/schedules/{scheduleID}:
    get:
      description: |
        Get the appointment schedule with all its attributes and slots
      operationId: publicGetAppointmentSchedule
      parameters:
      - description: unique generate ID of a appointment schedule
        explode: false
        in: path
        name: scheduleID
        required: true
        schema:
          pattern: "^as-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentSchedule'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Get appointment schedule details
  /public/calendar/appointments/{scheduleID}/entry:
    post:
      operationId: publicCreateAppointment
      parameters:
      - description: unique generate ID of a appointment schedule
        explode: false
        in: path
        name: scheduleID
        required: true
        schema:
          pattern: "^as-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      - description: |
          A user challenge code (e.g. reCaptcha response), used for protection of public API endpoints against bots or other malicious actors. A challenge should only be used when posting data to the backend. For reading operations, the code parameter should be used. The content of the challenge can be one of reCaptcha, code, certificate and should be prefixed accordingly. The challenge can also be ommitted by registered users, as those will be validated against their session.
        explode: true
        in: query
        name: challenge
        required: true
        schema:
          type: string
        style: form
      - description: the string containing the language for the user
        explode: true
        in: query
        name: locale
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppointmentRequest'
        description: Appointment that needs to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: Successfully created appointment entry
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Create a new appointment for the given schedule
  /public/calendar/appointments/entry/{code}:
    delete:
      operationId: publicDeleteAppointment
      parameters:
      - description: |
          A unique code that grants access to public users to the requested resource. Depending on the context, the code can have a different format and be validated in a different way. The parameter can be either provided in a path or as a query parameter
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: |
          A user challenge code (e.g. reCaptcha response), used for protection of public API endpoints against bots or other malicious actors. A challenge should only be used when posting data to the backend. For reading operations, the code parameter should be used. The content of the challenge can be one of reCaptcha, code, certificate and should be prefixed accordingly. The challenge can also be ommitted by registered users, as those will be validated against their session.
        explode: true
        in: query
        name: challenge
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MandatoryMessage'
        description: Mandatory message to admin for deleting the appointment
        required: true
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Delete an appointment
    get:
      operationId: publicGetAppointment
      parameters:
      - description: |
          A unique code that grants access to public users to the requested resource. Depending on the context, the code can have a different format and be validated in a different way. The parameter can be either provided in a path or as a query parameter
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Get appointment details
  /public/calendar/appointments/entry/{code}/ical:
    get:
      operationId: publicGetAppointmentInIcalFormat
      parameters:
      - description: |
          A unique code that grants access to public users to the requested resource. Depending on the context, the code can have a different format and be validated in a different way. The parameter can be either provided in a path or as a query parameter
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/calendar:
              schema:
                type: string
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Get appointment in ical format
  /public/case:
    post:
      operationId: publicCreateCase
      parameters:
      - description: |
          A unique code that grants access to public users to the requested resource. Depending on the context, the code can have a different format and be validated in a different way. The parameter can be either provided in a path or as a query parameter
        explode: true
        in: query
        name: code
        required: true
        schema:
          type: string
        style: form
      - description: |
          A user challenge code (e.g. reCaptcha response), used for protection of public API endpoints against bots or other malicious actors. A challenge should only be used when posting data to the backend. For reading operations, the code parameter should be used. The content of the challenge can be one of reCaptcha, code, certificate and should be prefixed accordingly. The challenge can also be ommitted by registered users, as those will be validated against their session.
        explode: true
        in: query
        name: challenge
        required: true
        schema:
          type: string
        style: form
      - description: the string containing the language for the user
        explode: true
        in: query
        name: locale
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCaseRequest'
        description: Case that needs to be created by the user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCaseResponse'
          description: Successfully created case
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Raise a new case from a public endpoint.
  /public/case/{caseID}:
    get:
      description: Get the case with all its attributes and comments
      operationId: publicGetCase
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      - description: |
          A unique code that grants access to public users to the requested resource. Depending on the context, the code can have a different format and be validated in a different way. The parameter can be either provided in a path or as a query parameter
        explode: true
        in: query
        name: code
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseDetails'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Get case details
  /public/case/{caseID}/status:
    post:
      description: Add new status change to the case
      operationId: publicUpdateCaseStatus
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      - description: |
          A unique code that grants access to public users to the requested resource. Depending on the context, the code can have a different format and be validated in a different way. The parameter can be either provided in a path or as a query parameter
        explode: true
        in: query
        name: code
        required: true
        schema:
          type: string
        style: form
      - description: |
          A user challenge code (e.g. reCaptcha response), used for protection of public API endpoints against bots or other malicious actors. A challenge should only be used when posting data to the backend. For reading operations, the code parameter should be used. The content of the challenge can be one of reCaptcha, code, certificate and should be prefixed accordingly. The challenge can also be ommitted by registered users, as those will be validated against their session.
        explode: true
        in: query
        name: challenge
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCaseStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseStatus'
          description: Successfully updated statusxw
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Add new case status
  /public/case/{caseID}/comment:
    post:
      description: Add a new comment to the case
      operationId: publicAddCaseComment
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      - description: |
          A unique code that grants access to public users to the requested resource. Depending on the context, the code can have a different format and be validated in a different way. The parameter can be either provided in a path or as a query parameter
        explode: true
        in: query
        name: code
        required: true
        schema:
          type: string
        style: form
      - description: |
          A user challenge code (e.g. reCaptcha response), used for protection of public API endpoints against bots or other malicious actors. A challenge should only be used when posting data to the backend. For reading operations, the code parameter should be used. The content of the challenge can be one of reCaptcha, code, certificate and should be prefixed accordingly. The challenge can also be ommitted by registered users, as those will be validated against their session.
        explode: true
        in: query
        name: challenge
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCaseCommentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                content: |
                  Thanks for the case, we will contact the electrician to have a look
              schema:
                $ref: '#/components/schemas/CaseComment'
          description: Successfully created comment
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Add new case comment
  /public/case/{caseID}/comment/{commentID}:
    delete:
      description: Delete the comment with all it's attachments
      operationId: publicDeleteCaseComment
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      - description: unique generate ID of a case comment
        explode: false
        in: path
        name: commentID
        required: true
        schema:
          pattern: "^cc-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      - description: |
          A unique code that grants access to public users to the requested resource. Depending on the context, the code can have a different format and be validated in a different way. The parameter can be either provided in a path or as a query parameter
        explode: true
        in: query
        name: code
        required: true
        schema:
          type: string
        style: form
      - description: |
          A user challenge code (e.g. reCaptcha response), used for protection of public API endpoints against bots or other malicious actors. A challenge should only be used when posting data to the backend. For reading operations, the code parameter should be used. The content of the challenge can be one of reCaptcha, code, certificate and should be prefixed accordingly. The challenge can also be ommitted by registered users, as those will be validated against their session.
        explode: true
        in: query
        name: challenge
        required: true
        schema:
          type: string
        style: form
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Delete a comment
  /public/cases/endpoint/{endpointID}/info:
    get:
      operationId: publicGetCaseReportingEndpointInfo
      parameters:
      - description: unique generate ID of a case reporting endpoint
        explode: false
        in: path
        name: endpointID
        required: true
        schema:
          pattern: "^[0-9a-zA-Z]{8}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseReportingEndpointInfo'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: |
        Get the information for the case reporting endpoint with the given code
  /public/validate/formData:
    post:
      operationId: publicValidateFormData
      parameters:
      - description: |
          A user challenge code (e.g. reCaptcha response), used for protection of public API endpoints against bots or other malicious actors. A challenge should only be used when posting data to the backend. For reading operations, the code parameter should be used. The content of the challenge can be one of reCaptcha, code, certificate and should be prefixed accordingly. The challenge can also be ommitted by registered users, as those will be validated against their session.
        explode: true
        in: query
        name: challenge
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormValidationRequest'
        description: Custom form data that needs to be validated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormValidationResponse'
          description: Successfully validated form data
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Validate the data provided by the user against a custom form
  /public/validate/email:
    post:
      operationId: publicValidateUserEmail
      parameters:
      - description: |
          A user challenge code (e.g. reCaptcha response), used for protection of public API endpoints against bots or other malicious actors. A challenge should only be used when posting data to the backend. For reading operations, the code parameter should be used. The content of the challenge can be one of reCaptcha, code, certificate and should be prefixed accordingly. The challenge can also be ommitted by registered users, as those will be validated against their session.
        explode: true
        in: query
        name: challenge
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailValidationRequest'
        description: User email that needs to be validated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailValidationResponse'
          description: Successfully validated email
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Validate user's email and point out problems if there are any
  /attachment:
    post:
      description: Upload a new file attachment of any type
      operationId: uploadAttachment
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/publicUploadAttachment_request'
        description: A file attachment that will be referenced by other entities
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Successfully uploaded file
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Upload new file attachment
  /attachment/{attachmentID}:
    delete:
      description: Delete the file upload with the given ID
      operationId: deleteAttachment
      parameters:
      - description: unique generate ID of a file attachment
        explode: false
        in: path
        name: attachmentID
        required: true
        schema:
          pattern: "^f-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete the file upload with the given ID
    get:
      description: Get the file attachment with the given ID
      operationId: getAttachment
      parameters:
      - description: unique generate ID of a file attachment
        explode: false
        in: path
        name: attachmentID
        required: true
        schema:
          pattern: "^f-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get a file attachment
  /bank-account:
    post:
      description: Create a new bank account for the current account
      operationId: createBankAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateBankAccountRequest'
        description: Bank account that will be created for the account
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
          description: Successfully created bank account
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create new bank account
  /bank-accounts:
    post:
      description: Query the bank accounts for certain criteria
      operationId: queryBankAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryBankAccountsRequest'
        description: Bank account query criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBankAccountsResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query bank accounts
  /bank-account/{accountID}:
    delete:
      operationId: deleteBankAccount
      parameters:
      - description: unique generate ID of a bank account
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          pattern: "^b-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete an already existing bank account
    get:
      operationId: getBankAccount
      parameters:
      - description: unique generate ID of a bank account
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          pattern: "^b-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the bank account with the given ID
    put:
      operationId: updateBankAccount
      parameters:
      - description: unique generate ID of a bank account
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          pattern: "^b-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateBankAccountRequest'
        description: Updated bank account
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
          description: Successfully updated bank account
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update the attributes of the already existing bank account
  /calendar/appointments/template:
    post:
      operationId: createAppointmentTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppointmentTemplateRequest'
        description: Definition of an appointment template
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentTemplate'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create new appointment template
  /calendar/appointments/templates:
    post:
      operationId: queryAppointmentTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryAppointmentTemplatesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppointmentTemplate'
                type: array
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query all appointment templates for given criteria
  /calendar/appointments/template/{templateID}:
    delete:
      description: Delete the appointment template with all it's attachments
      operationId: deleteAppointmentTemplate
      parameters:
      - description: unique generate ID of an appointments template
        explode: false
        in: path
        name: templateID
        required: true
        schema:
          pattern: "^at-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete an appointment template
    get:
      operationId: getAppointmentTemplate
      parameters:
      - description: unique generate ID of an appointments template
        explode: false
        in: path
        name: templateID
        required: true
        schema:
          pattern: "^at-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentTemplate'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the appointment template by ID
    put:
      operationId: updateAppointmentTemplate
      parameters:
      - description: unique generate ID of an appointments template
        explode: false
        in: path
        name: templateID
        required: true
        schema:
          pattern: "^at-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppointmentTemplateRequest'
        description: Updated appointment template object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentTemplate'
          description: Successfully updated appointment template
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update appointment template
  /calendar/appointments/schedule:
    post:
      operationId: createAppointmentSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppointmentScheduleRequest'
        description: Definition of an appointment schedule
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentSchedule'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create new appointment schedule
  /calendar/appointments/schedules:
    post:
      operationId: queryAppointmentSchedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryAppointmentSchedulesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppointmentSchedule'
                type: array
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query all appointment schedules for given criteria
  /calendar/appointments/schedule/{scheduleID}:
    delete:
      description: Delete the appointment schedule with all appointments
      operationId: deleteAppointmentSchedule
      parameters:
      - description: unique generate ID of an appointment schedule
        explode: false
        in: path
        name: scheduleID
        required: true
        schema:
          pattern: "^as-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete an appointment schedule
    get:
      operationId: getAppointmentSchedule
      parameters:
      - description: unique generate ID of an appointment schedule
        explode: false
        in: path
        name: scheduleID
        required: true
        schema:
          pattern: "^as-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentSchedule'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the appointment schedule by ID
    put:
      operationId: updateAppointmentSchedule
      parameters:
      - description: unique generate ID of an appointment schedule
        explode: false
        in: path
        name: scheduleID
        required: true
        schema:
          pattern: "^as-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppointmentScheduleRequest'
        description: Updated appointment schedule object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentSchedule'
          description: Successfully updated appointment schedule
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update appointment schedule
  /calendar/appointments/schedule/{scheduleID}/appointment:
    post:
      operationId: createAppointment
      parameters:
      - description: unique generate ID of an appointment schedule
        explode: false
        in: path
        name: scheduleID
        required: true
        schema:
          pattern: "^as-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppointmentRequest'
        description: Definition of an appointment
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create new appointment for a given schedule
  /calendar/appointments/entry/{entryID}:
    delete:
      description: Delete the appointment
      operationId: deleteAppointment
      parameters:
      - description: unique generate ID of an appointment entry
        explode: false
        in: path
        name: entryID
        required: true
        schema:
          pattern: "^ap-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete an appointment
    get:
      operationId: getAppointment
      parameters:
      - description: unique generate ID of an appointment entry
        explode: false
        in: path
        name: entryID
        required: true
        schema:
          pattern: "^ap-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the appointment by ID
    put:
      operationId: updateAppointment
      parameters:
      - description: unique generate ID of an appointment entry
        explode: false
        in: path
        name: entryID
        required: true
        schema:
          pattern: "^ap-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppointmentRequest'
        description: Updated appointment entry object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: Successfully updated appointment
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update appointment
  /calendar/appointments/entry/{entryID}/ical:
    get:
      operationId: getAppointmentInIcalFormat
      parameters:
      - description: unique generate ID of an appointment entry
        explode: false
        in: path
        name: entryID
        required: true
        schema:
          pattern: "^ap-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            text/calendar:
              schema:
                type: string
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get appointment in ical format
  /calendar/appointments/window/{windowID}:
    get:
      operationId: queryAppointments
      parameters:
      - description: unique generate ID of an appointment window
        explode: false
        in: path
        name: windowID
        required: true
        schema:
          pattern: "^aw-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Appointment'
                type: array
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the appointments of a Window
  /case:
    post:
      description: Create a new case for the provided organization/property.
      operationId: createCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCaseRequest'
        description: |
          Case that needs to be created by the user for the organization
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
          description: Successfully created case
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new case
  /case/{caseID}:
    delete:
      description: Delete the case with all its related comments and attachments
      operationId: deleteCase
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete case
    get:
      description: Get the case with all its attributes and comments
      operationId: getCase
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get case details
    put:
      description: Update the base attributes of a case
      operationId: updateCase
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCaseRequest'
        description: Updated case
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
          description: Successfully updated case
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update case
  /case/{caseID}/status:
    post:
      description: Add new status change to the case
      operationId: updateCaseStatus
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCaseStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseStatus'
          description: Successfully updated statusxw
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Add new case status
  /case/{caseID}/archive:
    post:
      operationId: archiveCase
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Mark the case as archived
  /case/{caseID}/comment:
    post:
      description: Add a new comment to the case
      operationId: addCaseComment
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCaseCommentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                content: |
                  Thanks for the case, we will contact the electrician to have a look
              schema:
                $ref: '#/components/schemas/CaseComment'
          description: Successfully created comment
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Add new case comment
  /case/{caseID}/assign:
    post:
      operationId: assignCase
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignCaseRequest'
        required: true
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Assign case to a service provider
  /case/{caseID}/unassign:
    post:
      operationId: unassignCase
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnssignCaseRequest'
        required: true
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Remove access from case
  /case/{caseID}/comment/{commentID}:
    delete:
      operationId: deleteCaseComment
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      - description: unique generate ID of a case comment
        explode: false
        in: path
        name: commentID
        required: true
        schema:
          pattern: "^cc-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Mark a case comment as deleted
    get:
      description: Get all details of the comment
      operationId: getCaseComment
      parameters:
      - description: unique generate ID of a case
        explode: false
        in: path
        name: caseID
        required: true
        schema:
          pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      - description: unique generate ID of a case comment
        explode: false
        in: path
        name: commentID
        required: true
        schema:
          pattern: "^cc-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseComment'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get comment details
  /cases:
    post:
      description: Query all cases that were accessible for the current user
      operationId: queryCases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCasesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Case'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query cases for the current user
  /cases/endpoint:
    post:
      operationId: createCaseReportingEndpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCaseReportingEndpointRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseReportingEndpoint'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create new case reporting endpoint
  /cases/endpoints:
    post:
      operationId: queryCaseReportingEndpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCaseReportingEndpointsRequest'
        description: Public form query criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCaseReportingEndpointsResponse'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query all case reporting endpoints for given criteria
  /cases/endpoints/{endpointID}:
    delete:
      operationId: deleteCaseReportingEndpoint
      parameters:
      - description: unique generate ID of a case reporting endpoint
        explode: false
        in: path
        name: endpointID
        required: true
        schema:
          pattern: "^[0-9a-zA-Z]{8}$"
          type: string
        style: simple
      responses:
        "200":
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete the case reporting endpoint by ID
    get:
      operationId: getCaseReportingEndpoint
      parameters:
      - description: unique generate ID of a case reporting endpoint
        explode: false
        in: path
        name: endpointID
        required: true
        schema:
          pattern: "^[0-9a-zA-Z]{8}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseReportingEndpoint'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the case report endpoint by ID
    put:
      operationId: updateCaseReportingEndpoint
      parameters:
      - description: unique generate ID of a case reporting endpoint
        explode: false
        in: path
        name: endpointID
        required: true
        schema:
          pattern: "^[0-9a-zA-Z]{8}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCaseReportingEndpointRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseReportingEndpoint'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update the case reporting endpoint by ID
  /cases/endpoints/{endpointID}/notice:
    post:
      operationId: generateCaseReportingEndpointNotice
      parameters:
      - description: unique generate ID of a case reporting endpoint
        explode: false
        in: path
        name: endpointID
        required: true
        schema:
          pattern: "^[0-9a-zA-Z]{8}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateCaseReportingEndpointNoticeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: the URL of the PDF
                type: string
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Generate a PDF for a notice of the case reporting endpoint
  /cases/endpoints/{endpointID}/qr-code:
    get:
      operationId: getCaseReportingEndpointQRCode
      parameters:
      - description: unique generate ID of a case reporting endpoint
        explode: false
        in: path
        name: endpointID
        required: true
        schema:
          pattern: "^[0-9a-zA-Z]{8}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: the URL of the image
                type: string
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: |
        Generates and returns a QR code of the URL of the case reporting endpoint
  /cases/template:
    post:
      operationId: createCaseTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCaseTemplateRequest'
        description: Definition of a case template
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseTemplate'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create new case template
  /cases/templates:
    post:
      operationId: queryCaseTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCaseTemplatesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CaseTemplate'
                type: array
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query all case templates for given criteria
  /cases/template/{templateID}:
    delete:
      description: Delete the case template with all it's attachments
      operationId: deleteCaseTemplate
      parameters:
      - description: unique generate ID of a case template
        explode: false
        in: path
        name: templateID
        required: true
        schema:
          pattern: "^ct-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete a case template
    get:
      operationId: getCaseTemplate
      parameters:
      - description: unique generate ID of a case template
        explode: false
        in: path
        name: templateID
        required: true
        schema:
          pattern: "^ct-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseTemplate'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the case template by ID
    put:
      operationId: updateCaseTemplate
      parameters:
      - description: unique generate ID of a case template
        explode: false
        in: path
        name: templateID
        required: true
        schema:
          pattern: "^ct-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCaseTemplateRequest'
        description: Updated case template object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseTemplate'
          description: Successfully updated report template
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update case template
  /connector/credentials:
    get:
      operationId: getConnectorCredentials
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConnectorCredentials'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the connector credentials for the current account
    post:
      description: Create new connector credentials
      operationId: createConnectorCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectorCredentialsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorCredentials'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      summary: Create new connector credentials
  /connector/credentials/{apiKey}:
    delete:
      operationId: deleteConnectorCredentials
      parameters:
      - description: unique generated ID of an api key
        explode: false
        in: path
        name: apiKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete the connector credentials for the current account
  /connector/configs:
    get:
      operationId: getConnectorConfigs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConnectorConfig'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the connector configurations for the current account
  /connector/config:
    post:
      operationId: createConnectorConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectorConfigRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorConfig'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new connector configuration
  /connector/{name}/config:
    delete:
      operationId: deleteConnectorConfig
      parameters:
      - description: Name of the connector
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete the connector configuration
    get:
      operationId: getConnectorConfig
      parameters:
      - description: Name of the connector
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorConfig'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the connector configuration for the current account
    put:
      operationId: updateConnectorConfig
      parameters:
      - description: Name of the connector
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectorConfigRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorConfig'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update the connector configuration
  /connector/{name}/log:
    post:
      operationId: pushConnectorLog
      parameters:
      - description: Name of the connector
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogRequest'
        required: true
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Push logs from the connector
  /connector/{name}/entity:
    get:
      operationId: getConnectorEntityStats
      parameters:
      - description: Name of the connector
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: List of entity type and count
                items:
                  $ref: '#/components/schemas/ConnectorEntityStats'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get stats for the connector
  /connector/{name}/entity/{entityType}:
    delete:
      operationId: deleteConnectorEntity
      parameters:
      - description: Name of the connector
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: type of the entity
        explode: false
        in: path
        name: entityType
        required: true
        schema:
          $ref: '#/components/schemas/ConnectorEntity'
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete all the entities of a certain type.
  /connector/{name}/queries:
    get:
      operationId: getConnectorQueries
      parameters:
      - description: Name of the connector
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: All of the queries that belong to the config.
                items:
                  $ref: '#/components/schemas/ConnectorQuery'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the queries that belong to the config.
  /connector/query:
    post:
      operationId: createConnectorQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateConnectorQueryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorQuery'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new connector query
  /connector/query/{queryID}/reset:
    put:
      operationId: resetConnectorQuery
      parameters:
      - description: ID of the query
        explode: false
        in: path
        name: queryID
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the query for the current account
  /connector/query/{queryID}:
    delete:
      operationId: deleteConnectorQuery
      parameters:
      - description: ID of the query
        explode: false
        in: path
        name: queryID
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete the query
    get:
      operationId: getConnectorQuery
      parameters:
      - description: ID of the query
        explode: false
        in: path
        name: queryID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorQuery'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the query for the current account
    put:
      operationId: updateConnectorQuery
      parameters:
      - description: ID of the query
        explode: false
        in: path
        name: queryID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateConnectorQueryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorQuery'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update the connector Query
  /connector/sync:
    post:
      operationId: syncConnectorData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorSyncRequest'
        required: true
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Sync the next batch of connector data.
  /customer-script:
    post:
      operationId: createCustomerScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCustomerScriptRequest'
        description: Script that will be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerScript'
          description: Successfully created script
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new customer specififc JS script
  /customer-scripts:
    get:
      operationId: getCustomerScripts
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerScript'
                type: array
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get all customer specific JS scripts
  /customer-scripts/{scriptID}:
    delete:
      operationId: deleteCustomerScript
      parameters:
      - description: unique generated ID of a customer JS script
        explode: false
        in: path
        name: scriptID
        required: true
        schema:
          pattern: "^sc-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete the script with all its related data
    get:
      operationId: getCustomerScript
      parameters:
      - description: unique generated ID of a customer JS script
        explode: false
        in: path
        name: scriptID
        required: true
        schema:
          pattern: "^sc-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerScript'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the script with all its attributes
    put:
      operationId: updateCustomerScript
      parameters:
      - description: unique generated ID of a customer JS script
        explode: false
        in: path
        name: scriptID
        required: true
        schema:
          pattern: "^sc-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCustomerScriptRequest'
        description: Updated script object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerScript'
          description: Successfully updated script
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update an already existing script
  /document-generation/document:
    post:
      operationId: createDocumentGeneration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocumentGenerationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentGeneration'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new document generation for a template
  /document-generation/documents:
    post:
      operationId: queryDocumentGenerations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryDocumentGenerationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentGeneration'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Request a list of document generations
  /document-generation/documents/archive:
    post:
      operationId: queryArchivedDocumentGenerations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryDocumentGenerationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDocumentGenerationsResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Request a list of archived document generations
  /document-generation/documents/{docID}:
    delete:
      operationId: deleteDocumentGeneration
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: docID
        required: true
        schema:
          pattern: "^g-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete an existing document generation
    get:
      operationId: getDocumentGeneration
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: docID
        required: true
        schema:
          pattern: "^g-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentGeneration'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get a single document generation
    put:
      operationId: updateDocumentGeneration
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: docID
        required: true
        schema:
          pattern: "^g-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentGeneration'
        required: true
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update an already existing document generation
  /document-generation/documents/{docID}/archive:
    post:
      operationId: archiveDocumentGeneration
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: docID
        required: true
        schema:
          pattern: "^g-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Move the document generation to the archive
  /document-generation/documents/{docID}/generate-pdf:
    post:
      operationId: generateDocumentPDF
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: docID
        required: true
        schema:
          pattern: "^g-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPDFResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Generate a PDF for the document generation
  /document-generation/documents/{docID}/generate-text:
    post:
      operationId: generateDocumentText
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: docID
        required: true
        schema:
          pattern: "^g-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TipTapDocument'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: |
        Generate the text for the document, based on template and input data
  /document-generation/documents/{docID}/esignature/request:
    get:
      operationId: generateESignatureRequest
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: docID
        required: true
        schema:
          pattern: "^g-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentESignatureRequest'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: |
        Generate an eSignature request for a document, based on template signature config
  /document-generation/documents/{docID}/esignature/download-document:
    get:
      operationId: getSignedDocumentDownload
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: docID
        required: true
        schema:
          pattern: "^g-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPDFResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the signed document
  /document-generation/documents/{docID}/esignature/download-audits:
    get:
      operationId: getSignedDocumentAuditDownload
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: docID
        required: true
        schema:
          pattern: "^g-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPDFResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the audit information for the signed document
  /document-generation/documents/{docID}/esignature:
    delete:
      operationId: cancelSignaturesForDocument
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: docID
        required: true
        schema:
          pattern: "^g-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentESignatureStatus'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Cancel a signature request for a document
    get:
      operationId: getESignatureStatusForDocument
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: docID
        required: true
        schema:
          pattern: "^g-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentESignatureStatus'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the singing status for the document
    post:
      operationId: requestESignaturesForDocument
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: docID
        required: true
        schema:
          pattern: "^g-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentESignatureRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentESignatureStatus'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Trigger a signing request for a document
  /document-generation/template:
    post:
      description: Create a new document template
      operationId: createDocumentTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateDocumentTemplateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTemplate'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new document template
  /document-generation/templates:
    get:
      operationId: getDocumentTemplates
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentTemplate'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get all available document templates
  /document-generation/template/{templateID}:
    delete:
      operationId: deleteDocumentTemplate
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: templateID
        required: true
        schema:
          pattern: "^dt-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete a document template
    get:
      operationId: getDocumentTemplate
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: templateID
        required: true
        schema:
          pattern: "^dt-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTemplate'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get a document template
    put:
      operationId: updateDocumentTemplate
      parameters:
      - description: unique generated ID of a document generation
        explode: false
        in: path
        name: templateID
        required: true
        schema:
          pattern: "^dt-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateDocumentTemplateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTemplate'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update an existing document template
  /document-repository/entries:
    post:
      operationId: queryDocuments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryDocumentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Document'
                type: array
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query all document for a certain ref type
  /document-repository/entry:
    post:
      operationId: createDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocumentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new document
  /document-repository/entry/{documentID}:
    delete:
      operationId: deleteDocument
      parameters:
      - description: unique generated ID of an uploaded document
        explode: false
        in: path
        name: documentID
        required: true
        schema:
          pattern: "^d-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete a single document
    get:
      operationId: getDocument
      parameters:
      - description: unique generated ID of an uploaded document
        explode: false
        in: path
        name: documentID
        required: true
        schema:
          pattern: "^d-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get an already existing document
    put:
      operationId: updateDocument
      parameters:
      - description: unique generated ID of an uploaded document
        explode: false
        in: path
        name: documentID
        required: true
        schema:
          pattern: "^d-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update an already existing document
  /external-users:
    get:
      operationId: queryExternalUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryExternalUsersResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get a list of external users who reported to the current manager
  /external-users/{userID}:
    get:
      operationId: getExternalUser
      parameters:
      - description: unique generate ID of an external user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          pattern: "^ex-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReference'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get information about external user
  /external-users/{userID}/cases:
    get:
      operationId: queryExternalUserCases
      parameters:
      - description: unique generate ID of an external user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          pattern: "^ex-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryExternalUserCasesResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the cases the the given user has opened
  /external-users/{userID}/cases/count:
    get:
      operationId: getExternalUserCasesCount
      parameters:
      - description: unique generate ID of an external user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          pattern: "^ex-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExternalUserCasesCountResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the number of cases the the given user has opened
  /email/validation:
    post:
      operationId: validateUserEmail
      parameters:
      - description: the email to be validated
        explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailValidationResponse'
          description: Successfully validated email
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Validate user's email and point out problems if there are any
  /faqs/entries:
    get:
      operationId: getFAQEntries
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FAQEntry'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get all available FAQ entries
  /faqs/entry:
    post:
      operationId: createFAQEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateFAQEntryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FAQEntry'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new FAQ entry
  /faqs/entry/{entryID}:
    delete:
      operationId: deleteFAQEntry
      parameters:
      - description: unique generate ID of a FAQ entry
        explode: false
        in: path
        name: entryID
        required: true
        schema:
          pattern: "^qe-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete a FAQ entry
    get:
      operationId: getFAQEntry
      parameters:
      - description: unique generate ID of a FAQ entry
        explode: false
        in: path
        name: entryID
        required: true
        schema:
          pattern: "^qe-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FAQEntry'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get a FAQ entry
    put:
      operationId: updateFAQEntry
      parameters:
      - description: unique generate ID of a FAQ entry
        explode: false
        in: path
        name: entryID
        required: true
        schema:
          pattern: "^qe-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateFAQEntryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FAQEntry'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update an existing FAQ entry
  /feedback:
    post:
      description: Provide any type of feedback for the product
      operationId: feedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
        description: User's feedback
        required: true
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: User feedback about the product
  /id-generator:
    post:
      operationId: createCustomIDGenerator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCustomIDGeneratorRequest'
        description: ID generator that will be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIDGenerator'
          description: Successfully created script
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new customer specififc ID generator
  /id-generators:
    get:
      operationId: getCustomIDGenerators
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomIDGenerator'
                type: array
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get all customer specific ID generators
  /id-generators/{generatorID}:
    delete:
      operationId: deleteCustomIDGenerator
      parameters:
      - description: unique generated ID of a custom ID generator
        explode: false
        in: path
        name: generatorID
        required: true
        schema:
          pattern: "^id-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete the custom ID generator with all its related data
    get:
      operationId: getCustomIDGenerator
      parameters:
      - description: unique generated ID of a custom ID generator
        explode: false
        in: path
        name: generatorID
        required: true
        schema:
          pattern: "^id-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIDGenerator'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the ID generator with all its attributes
    put:
      operationId: updateCustomIDGenerator
      parameters:
      - description: unique generated ID of a custom ID generator
        explode: false
        in: path
        name: generatorID
        required: true
        schema:
          pattern: "^id-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCustomIDGeneratorRequest'
        description: Updated custom ID generator
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIDGenerator'
          description: Successfully updated customer ID generator
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update an already existing ID generator
  /meters:
    get:
      description: List all meters for the current user
      operationId: getMeters
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Meter'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: List meters
    post:
      operationId: createMeter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateMeterRequest'
        description: Meter to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meter'
          description: Successfully created meter
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new meter for a property
  /meters/by-property/{propID}:
    get:
      description: List all meters for a property
      operationId: getMetersByProperty
      parameters:
      - description: unique generate ID of a property
        explode: false
        in: path
        name: propID
        required: true
        schema:
          pattern: "^p-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Meter'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: List meters for a property
  /meter/{meterID}:
    delete:
      description: Delete a meter by ID
      operationId: deleteMeter
      parameters:
      - description: unique generate ID of a meter
        explode: false
        in: path
        name: meterID
        required: true
        schema:
          pattern: "^m-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete meter
    get:
      description: Get a meter by ID
      operationId: getMeter
      parameters:
      - description: unique generate ID of a meter
        explode: false
        in: path
        name: meterID
        required: true
        schema:
          pattern: "^m-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meter'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get meter
    put:
      description: Update a meter by ID
      operationId: updateMeter
      parameters:
      - description: unique generate ID of a meter
        explode: false
        in: path
        name: meterID
        required: true
        schema:
          pattern: "^m-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateMeterRequest'
        description: Meter to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meter'
          description: Successfully updated meter
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update meter
  /meter/{meterID}/readings:
    get:
      description: List all meter readings for the current user
      operationId: getMeterReadings
      parameters:
      - description: unique generate ID of a meter
        explode: false
        in: path
        name: meterID
        required: true
        schema:
          pattern: "^m-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MeterReading'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: List meter readings
    post:
      operationId: createMeterReading
      parameters:
      - description: unique generate ID of a meter
        explode: false
        in: path
        name: meterID
        required: true
        schema:
          pattern: "^m-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateMeterReadingRequest'
        description: Meter reading to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeterReading'
          description: Successfully created meter reading
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new meter reading for a meter
  /meter/{meterID}/reading/{readingID}:
    delete:
      description: Delete a meter reading by ID
      operationId: deleteMeterReading
      parameters:
      - description: unique generate ID of a meter
        explode: false
        in: path
        name: meterID
        required: true
        schema:
          pattern: "^m-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      - description: unique generate ID of a meter reading
        explode: false
        in: path
        name: readingID
        required: true
        schema:
          pattern: "^mr-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete meter reading
    get:
      description: Get a meter reading by ID
      operationId: getMeterReading
      parameters:
      - description: unique generate ID of a meter
        explode: false
        in: path
        name: meterID
        required: true
        schema:
          pattern: "^m-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      - description: unique generate ID of a meter reading
        explode: false
        in: path
        name: readingID
        required: true
        schema:
          pattern: "^mr-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeterReading'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get meter reading
    put:
      description: Update a meter reading by ID
      operationId: updateMeterReading
      parameters:
      - description: unique generate ID of a meter
        explode: false
        in: path
        name: meterID
        required: true
        schema:
          pattern: "^m-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      - description: unique generate ID of a meter reading
        explode: false
        in: path
        name: readingID
        required: true
        schema:
          pattern: "^mr-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateMeterReadingRequest'
        description: Meter reading to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeterReading'
          description: Successfully updated meter reading
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update meter reading
  /owner:
    post:
      operationId: createPropertyOwner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdatePropertyOwnerRequest'
        description: Owner to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyOwner'
          description: Successfully created owner
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new property owner
  /owners:
    post:
      operationId: queryPropertyOwners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryPropertyOwnersRequest'
        description: Query parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPropertyOwnersResponse'
          description: Successfully created owners
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query property owners
  /owner/{ownerID}:
    delete:
      description: Permantenly delete the property owner
      operationId: deletePropertyOwner
      parameters:
      - description: unique generate ID of a property owner
        explode: false
        in: path
        name: ownerID
        required: true
        schema:
          pattern: "^o-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete property owner
    get:
      description: Get the property owner with all its attributes
      operationId: getPropertyOwner
      parameters:
      - description: unique generate ID of a property owner
        explode: false
        in: path
        name: ownerID
        required: true
        schema:
          pattern: "^o-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyOwner'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get property owner details
    put:
      description: Update an already existing property owner
      operationId: updatePropertyOwner
      parameters:
      - description: unique generate ID of a property owner
        explode: false
        in: path
        name: ownerID
        required: true
        schema:
          pattern: "^o-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdatePropertyOwnerRequest'
        description: Updated property owner object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyOwner'
          description: Successfully updated property owner
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update property owner
  /profile/company:
    get:
      description: Get the details of the users company profile
      operationId: getCompanyProfile
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyProfile'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the company profile details
    put:
      description: Update the details of the users company profile
      operationId: updateCompanyProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyProfileRequest'
        description: Updated company profile object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyProfile'
          description: Successfully updated company profile
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update company profile
  /preferences:
    get:
      description: Get the details of the user preferences
      operationId: getUserPreferences
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreferences'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the user preferences details
    put:
      description: Update the details of the user preferences
      operationId: updateUserPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPreferencesRequest'
        description: Updated company profile object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreferences'
          description: Successfully updated company profile
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update the user preferences
  /price-index:
    post:
      description: Gets price index
      operationId: getPriceIndexPoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceIndexPointQueryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceIndexPoint'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the PriceIndexPoint
    put:
      description: Upload a new value for the inflation index
      operationId: internalAddPriceIndexPoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePriceIndexPointRequest'
        description: Price point that will be pushed to the database
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceIndexPoint'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Push a new value for the inflation index
  /price-index/latest/{countryCode}:
    get:
      operationId: getLatestPriceIndexPoint
      parameters:
      - description: a valid country code
        explode: false
        in: path
        name: countryCode
        required: true
        schema:
          pattern: "^[a-zA-Z]{2}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceIndexPoint'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the current latest PriceIndexPoint
  /properties:
    post:
      description: |
        Get all properties that are registured under the user's organization
      operationId: queryProperties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryPropertiesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPropertiesResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query properties
  /property:
    post:
      description: Create a new property
      operationId: createProperty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePropertyRequest'
        description: Property that needs to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: Successfully created property
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create property
  /properties/{propID}:
    delete:
      description: Delete the property with all its related data
      operationId: deleteProperty
      parameters:
      - description: unique generate ID of a property
        explode: false
        in: path
        name: propID
        required: true
        schema:
          pattern: "^p-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete property
    get:
      description: Get the property with all its attributes
      operationId: getProperty
      parameters:
      - description: unique generate ID of a property
        explode: false
        in: path
        name: propID
        required: true
        schema:
          pattern: "^p-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get property details
    put:
      description: Update the base attributes of a property
      operationId: updateProperty
      parameters:
      - description: unique generate ID of a property
        explode: false
        in: path
        name: propID
        required: true
        schema:
          pattern: "^p-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePropertyRequest'
        description: Updated property object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: Successfully updated property
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update property
  /property/{propID}/cases:
    post:
      description: Get all cases of the property that.
      operationId: getPropertyCases
      parameters:
      - description: unique generate ID of a property
        explode: false
        in: path
        name: propID
        required: true
        schema:
          pattern: "^p-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Case'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get property cases
  /property/{propID}/tenancy:
    get:
      operationId: getPropertyTenancy
      parameters:
      - description: unique generate ID of a property
        explode: false
        in: path
        name: propID
        required: true
        schema:
          pattern: "^p-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenancy'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the current tenancy for the property
    post:
      operationId: createTenancy
      parameters:
      - description: unique generate ID of a property
        explode: false
        in: path
        name: propID
        required: true
        schema:
          pattern: "^p-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenancyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenancy'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create new tenancy for the property
  /property/{propID}/tenancy/history:
    get:
      operationId: getTenancyHistory
      parameters:
      - description: unique generate ID of a property
        explode: false
        in: path
        name: propID
        required: true
        schema:
          pattern: "^p-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tenancy'
                type: array
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the tenancy history for the property
  /property-handovers/template:
    post:
      operationId: createPropertyHandoverTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdatePropertyHandoverTemplateRequest'
        description: Property handover template that will be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyHandoverTemplate'
          description: Successfully created property handover template
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new property handover template
  /property-handovers/templates:
    post:
      operationId: queryPropertyHandoverTemplates
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PropertyHandoverTemplate'
                type: array
          description: Successfully created property handover templates
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query property handover templates
  /property-handovers/template/{templateID}:
    delete:
      operationId: deletePropertyHandoverTemplate
      parameters:
      - description: unique generated ID of a property handover template
        explode: false
        in: path
        name: templateID
        required: true
        schema:
          pattern: "^ht-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete property handover template
    get:
      operationId: getPropertyHandoverTemplate
      parameters:
      - description: unique generated ID of a property handover template
        explode: false
        in: path
        name: templateID
        required: true
        schema:
          pattern: "^ht-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyHandoverTemplate'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get property handover template
    put:
      operationId: updatePropertyHandoverTemplate
      parameters:
      - description: unique generated ID of a property handover template
        explode: false
        in: path
        name: templateID
        required: true
        schema:
          pattern: "^ht-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdatePropertyHandoverTemplateRequest'
        description: Updated property handover template object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyHandoverTemplate'
          description: Successfully updated property handover template
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update property handover template
  /property-handovers/handover:
    post:
      operationId: createPropertyHandover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdatePropertyHandoverRequest'
        description: Property handover that will be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyHandover'
          description: Successfully created property handover
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new property handover
  /property-handovers/handovers:
    post:
      operationId: queryPropertyHandovers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryPropertyHandoversRequest'
        description: Query parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PropertyHandover'
                type: array
          description: Successfully created property handovers
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query property handovers
  /property-handovers/handovers/{handoverID}:
    delete:
      operationId: deletePropertyHandover
      parameters:
      - description: unique generated ID of a property handover
        explode: false
        in: path
        name: handoverID
        required: true
        schema:
          pattern: "^ho-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete property handover
    get:
      operationId: getPropertyHandover
      parameters:
      - description: unique generated ID of a property handover
        explode: false
        in: path
        name: handoverID
        required: true
        schema:
          pattern: "^ho-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyHandover'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get property handover
    put:
      operationId: updatePropertyHandover
      parameters:
      - description: unique generated ID of a property handover
        explode: false
        in: path
        name: handoverID
        required: true
        schema:
          pattern: "^ho-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdatePropertyHandoverRequest'
        description: Updated property handover object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyHandover'
          description: Successfully updated property handover
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update property handover
  /property-handovers/handovers/{handoverID}/submit:
    put:
      operationId: submitPropertyHandover
      parameters:
      - description: unique generated ID of a property handover
        explode: false
        in: path
        name: handoverID
        required: true
        schema:
          pattern: "^ho-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitPropertyHandoverRequest'
        description: Property handover that will be submitted
        required: true
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Submit the data for a property handover
  /property-handovers/handovers/{handoverID}/archive:
    put:
      operationId: archivePropertyHandover
      parameters:
      - description: unique generated ID of a property handover
        explode: false
        in: path
        name: handoverID
        required: true
        schema:
          pattern: "^ho-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Archive a property handover
  /reports:
    get:
      description: |
        Get a list of all report definitions that are available for the account
      operationId: getReportDefinitions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReportDefinition'
                type: array
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
  /report:
    post:
      operationId: createReportDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateReportDefinitionRequest'
        description: Report definition that will be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportDefinition'
          description: Successfully created report
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new report definition
  /report/{definitionID}:
    delete:
      description: Delete the report definition with all its related data
      operationId: deleteReportDefinition
      parameters:
      - description: unique generated ID of a report definition
        explode: false
        in: path
        name: definitionID
        required: true
        schema:
          pattern: "^rd-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
    get:
      description: Get the report definition with all its attributes
      operationId: getReportDefinition
      parameters:
      - description: unique generated ID of a report definition
        explode: false
        in: path
        name: definitionID
        required: true
        schema:
          pattern: "^rd-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportDefinition'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
    put:
      description: Update an already existing report definition
      operationId: updateReportDefinition
      parameters:
      - description: unique generated ID of a report definition
        explode: false
        in: path
        name: definitionID
        required: true
        schema:
          pattern: "^rd-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateReportDefinitionRequest'
        description: Updated report object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportDefinition'
          description: Successfully updated report
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
  /report/{definitionID}/execute:
    post:
      description: Execute a report for the given report definition ID
      operationId: executeReport
      parameters:
      - description: unique generated ID of a report definition
        explode: false
        in: path
        name: definitionID
        required: true
        schema:
          pattern: "^rd-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteReportRequest'
        description: Report execution parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportExecution'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
  /reports/executions:
    post:
      operationId: getReportExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryReportExecutionsRequest'
        description: Report execution query criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReportExecution'
                type: array
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get all executions that match the given criteria
  /report/executions/{executionID}:
    delete:
      description: Delete the report execution with all its related data
      operationId: deleteReportExecution
      parameters:
      - description: unique generated ID of a report execution
        explode: false
        in: path
        name: executionID
        required: true
        schema:
          pattern: "^rx-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
    get:
      description: Get the report execution with all its attributes
      operationId: getReportExecution
      parameters:
      - description: unique generated ID of a report execution
        explode: false
        in: path
        name: executionID
        required: true
        schema:
          pattern: "^rx-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportExecution'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get report execution details
  /service-provider:
    post:
      operationId: createServiceProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateServiceProvider'
        description: Service provider that will be created for the account
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProvider'
          description: Successfully created service provider
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new service provider for the current account
  /service-providers:
    post:
      operationId: queryServiceProviders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryServiceProvidersRequest'
        description: Service provider query criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryServiceProvidersResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query all service providers for certain criteria
  /service-provider/{serviceProviderID}:
    delete:
      operationId: deleteServiceProvider
      parameters:
      - description: unique generated ID of a service provider
        explode: false
        in: path
        name: serviceProviderID
        required: true
        schema:
          pattern: "^z-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete the service provider
    get:
      operationId: getServiceProvider
      parameters:
      - description: unique generated ID of a service provider
        explode: false
        in: path
        name: serviceProviderID
        required: true
        schema:
          pattern: "^z-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProvider'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the service provider with the given ID
    put:
      operationId: updateServiceProvider
      parameters:
      - description: unique generated ID of a service provider
        explode: false
        in: path
        name: serviceProviderID
        required: true
        schema:
          pattern: "^z-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateServiceProvider'
        description: Updated service provider
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
          description: Successfully updated case
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update the attributes of the service provider
  /service-provider/{serviceProviderID}/cases:
    get:
      operationId: queryServiceProviderCases
      parameters:
      - description: unique generated ID of a service provider
        explode: false
        in: path
        name: serviceProviderID
        required: true
        schema:
          pattern: "^z-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryServiceProviderCasesResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the cases the the given service provider has access to
  /summary:
    post:
      operationId: getAccountSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSummaryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSummaryResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get overview of data in the system for current account
  /tenancy/{tenancyID}:
    delete:
      operationId: deleteTenancy
      parameters:
      - description: unique generated ID of a tenancy
        explode: false
        in: path
        name: tenancyID
        required: true
        schema:
          pattern: "^ty-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete the tenancy with the given ID
    get:
      operationId: getTenancy
      parameters:
      - description: unique generated ID of a tenancy
        explode: false
        in: path
        name: tenancyID
        required: true
        schema:
          pattern: "^ty-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenancy'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the tenancy with the given ID
    put:
      operationId: updateTenancy
      parameters:
      - description: unique generated ID of a tenancy
        explode: false
        in: path
        name: tenancyID
        required: true
        schema:
          pattern: "^ty-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTenancyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenancy'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update the tenancy with the given ID
  /tenancy/{tenancyID}/rent-updates:
    get:
      operationId: getRentUpdates
      parameters:
      - description: unique generated ID of a tenancy
        explode: false
        in: path
        name: tenancyID
        required: true
        schema:
          pattern: "^ty-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RentUpdate'
                type: array
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get all tenancy rent updates
    post:
      operationId: createRentUpdate
      parameters:
      - description: unique generated ID of a tenancy
        explode: false
        in: path
        name: tenancyID
        required: true
        schema:
          pattern: "^ty-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateRentUpdateRequest'
        description: Rent update to add to the tenancy
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentUpdate'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create new rent update for the tenancy
  /tenancy/{tenancyID}/tenant-changes:
    get:
      operationId: getTenantChanges
      parameters:
      - description: unique generated ID of a tenancy
        explode: false
        in: path
        name: tenancyID
        required: true
        schema:
          pattern: "^ty-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: |
                  A list of the created tenant changes
                items:
                  $ref: '#/components/schemas/TenantChange'
                type: array
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get all the tenant changes for a tenancy.
    post:
      description: |
        Create a tenancy tenant change which will change the tenants of a tenancy.
      operationId: createTenantChanges
      parameters:
      - description: unique generated ID of a tenancy
        explode: false
        in: path
        name: tenancyID
        required: true
        schema:
          pattern: "^ty-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenantChangeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: |
                  A list of the created tenant changes
                items:
                  $ref: '#/components/schemas/TenantChange'
                type: array
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Change the tenants in a tenancy.
  /tenancy/rent-update/{rentUpdateID}:
    delete:
      operationId: deleteRentUpdate
      parameters:
      - description: unique generated ID of a tenancy rent update
        explode: false
        in: path
        name: rentUpdateID
        required: true
        schema:
          pattern: "^ru-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete the rent update with the given ID
    get:
      operationId: getRentUpdate
      parameters:
      - description: unique generated ID of a tenancy rent update
        explode: false
        in: path
        name: rentUpdateID
        required: true
        schema:
          pattern: "^ru-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentUpdate'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the rent update with the given ID
    put:
      operationId: updateRentUpdate
      parameters:
      - description: unique generated ID of a tenancy rent update
        explode: false
        in: path
        name: rentUpdateID
        required: true
        schema:
          pattern: "^ru-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateRentUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentUpdate'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update the rent update with the given ID
  /tenancy/tenant-change/{tenantChangeID}:
    delete:
      operationId: deleteTenantChange
      parameters:
      - description: unique generated ID of a tenant change
        explode: false
        in: path
        name: tenantChangeID
        required: true
        schema:
          pattern: "^tc-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete a tenant change
    get:
      operationId: getTenantChange
      parameters:
      - description: unique generated ID of a tenant change
        explode: false
        in: path
        name: tenantChangeID
        required: true
        schema:
          pattern: "^tc-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantChange'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get a tenancy tenant change
  /tenants:
    post:
      description: Query the tenants belonging to properties of the account
      operationId: queryTenants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryTenantsRequest'
        description: Tenants query criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryTenantsResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query all tenants
  /tenant:
    post:
      operationId: createTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateTenantRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: Successfully created tetant
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: |
        Create a new tenant and optionally invites them to join the platform
  /tenant/{tenantID}:
    delete:
      description: |
        Delete a tenant, removing it from the property they were assigned to. If the tenant is a registered user, their account will remain active, however, they will not be able to access that property any longer.
      operationId: deleteTenant
      parameters:
      - description: unique generated ID of a tenant
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          pattern: "^t-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Remove tenant from property
    get:
      description: Get all details of the tenant
      operationId: getTenant
      parameters:
      - description: unique generated ID of a tenant
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          pattern: "^t-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get tenant details
    put:
      description: Update the contact details of an existing tenant
      operationId: updateTenant
      parameters:
      - description: unique generated ID of a tenant
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          pattern: "^t-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateTenantRequest'
        description: Tenant to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update tenant information
  /tenant/{tenantID}/tenancies:
    get:
      operationId: getTenantTenancies
      parameters:
      - description: unique generated ID of a tenant
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          pattern: "^t-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tenancy'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get all tenancies for the tenant
  /workflows/definition:
    post:
      operationId: createWorkflowDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateWorkflowDefinitionRequest'
        description: Workflow definition to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowDefinition'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new workflow definition
  /workflows/definitions:
    post:
      operationId: queryWorkflowDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryWorkflowDefinitionsRequest'
        description: Workflow definition query criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryWorkflowDefinitionsResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Query all workflow definitions
  /workflows/definition/{definitionID}:
    delete:
      operationId: deleteWorkflowDefinition
      parameters:
      - description: unique generated ID of a workflow definition
        explode: false
        in: path
        name: definitionID
        required: true
        schema:
          pattern: "^wd-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete workflow definition
    get:
      operationId: getWorkflowDefinition
      parameters:
      - description: unique generated ID of a workflow definition
        explode: false
        in: path
        name: definitionID
        required: true
        schema:
          pattern: "^wd-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowDefinition'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get workflow definition details
    put:
      operationId: updateWorkflowDefinition
      parameters:
      - description: unique generated ID of a workflow definition
        explode: false
        in: path
        name: definitionID
        required: true
        schema:
          pattern: "^wd-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateWorkflowDefinitionRequest'
        description: Workflow definition to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowDefinition'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update workflow definition
  /workflows/definition/{definitionID}/entrypoint:
    post:
      operationId: createWorkflowEntrypoint
      parameters:
      - description: unique generated ID of a workflow definition
        explode: false
        in: path
        name: definitionID
        required: true
        schema:
          pattern: "^wd-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateWorkflowEntrypointRequest'
        description: Workflow entry point to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowEntrypoint'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Create a new workflow entry point for the workflow definition
  /workflows/definition/{definitionID}/entrypoints:
    get:
      operationId: getWorkflowEntrypointsForDefinition
      parameters:
      - description: unique generated ID of a workflow definition
        explode: false
        in: path
        name: definitionID
        required: true
        schema:
          pattern: "^wd-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowEntrypoint'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the workflow entry points for the workflow definition
  /workflows/entrypoints:
    get:
      operationId: getWorkflowEntrypoints
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowEntrypoint'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get all workflow entry points
  /workflows/entrypoint/{entrypointID}:
    delete:
      operationId: deleteWorkflowEntrypoint
      parameters:
      - description: unique generated ID of a workflow entry point
        explode: false
        in: path
        name: entrypointID
        required: true
        schema:
          pattern: "^we-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete workflow entry point
    get:
      operationId: getWorkflowEntrypoint
      parameters:
      - description: unique generated ID of a workflow entry point
        explode: false
        in: path
        name: entrypointID
        required: true
        schema:
          pattern: "^we-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowEntrypoint'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get the workflow entry point for the workflow definition
    put:
      operationId: updateWorkflowEntrypoint
      parameters:
      - description: unique generated ID of a workflow entry point
        explode: false
        in: path
        name: entrypointID
        required: true
        schema:
          pattern: "^we-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateWorkflowEntrypointRequest'
        description: Workflow entry point to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowEntrypoint'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update workflow entry point
  /workflows/entrypoint/{entrypointID}/execute:
    post:
      operationId: executeWorkflowEntrypoint
      parameters:
      - description: unique generated ID of a workflow entry point
        explode: false
        in: path
        name: entrypointID
        required: true
        schema:
          pattern: "^we-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteWorkflowEntrypointRequest'
        description: Workflow entry point execution parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Execute the workflow entry point
  /workflows/executions:
    post:
      operationId: queryWorkflowExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryWorkflowExecutionsRequest'
        description: Workflow execution query criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryWorkflowExecutionsResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: |
        Get a list of all workflow executions, matching the criteria in the request
  /workflows/execution:
    post:
      operationId: startWorkflowExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartWorkflowExecutionRequest'
        description: Workflow execution to be started
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Start a new workflow execution
  /workflows/execution/{executionID}:
    delete:
      operationId: deleteWorkflowExecution
      parameters:
      - description: unique generated ID of a workflow execution
        explode: false
        in: path
        name: executionID
        required: true
        schema:
          pattern: "^we-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Delete workflow execution
    get:
      operationId: getWorkflowExecution
      parameters:
      - description: unique generated ID of a workflow execution
        explode: false
        in: path
        name: executionID
        required: true
        schema:
          pattern: "^we-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecution'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get workflow execution details
    post:
      operationId: executeWorkflowExecutionStep
      parameters:
      - description: unique generated ID of a workflow execution
        explode: false
        in: path
        name: executionID
        required: true
        schema:
          pattern: "^we-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteWorkflowStepRequest'
        description: Workflow execution step to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Execute workflow execution step
    put:
      operationId: updateWorkflowExecution
      parameters:
      - description: unique generated ID of a workflow execution
        explode: false
        in: path
        name: executionID
        required: true
        schema:
          pattern: "^we-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkflowExecutionRequest'
        description: Workflow execution to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionResponse'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Update workflow execution
  /workflows/triggers/{executionID}:
    get:
      operationId: getWorkflowExecutionTrigger
      parameters:
      - description: unique generated ID of a workflow execution
        explode: false
        in: path
        name: executionID
        required: true
        schema:
          pattern: "^we-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTrigger'
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get workflow trigger for an execution
  /workflows/trigger/source/{sourceID}:
    get:
      operationId: getWorkflowTriggersForSource
      parameters:
      - description: ID of the source object that triggered a workflow execution
        explode: false
        in: path
        name: sourceID
        required: true
        schema:
          pattern: "^[a-z]{1,2}-[2-9A-HJ-NP-Za-km-z]{19,22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowTrigger'
                type: array
          description: Successful operation
        default:
          content: {}
          description: |
            Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
      security:
      - bearerAuth: []
      summary: Get workflow triggers for a source
components:
  parameters:
    appointmentIdPathParam:
      description: unique generate ID of an appointment entry
      explode: false
      in: path
      name: entryID
      required: true
      schema:
        pattern: "^ap-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    appointmentScheduleIdPathParam:
      description: unique generate ID of an appointment schedule
      explode: false
      in: path
      name: scheduleID
      required: true
      schema:
        pattern: "^as-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    appointmentTemplateIdPathParam:
      description: unique generate ID of an appointments template
      explode: false
      in: path
      name: templateID
      required: true
      schema:
        pattern: "^at-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    appointmentWindowIdPathParam:
      description: unique generate ID of an appointment window
      explode: false
      in: path
      name: windowID
      required: true
      schema:
        pattern: "^aw-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    attachmentIdPathParam:
      description: unique generate ID of a file attachment
      explode: false
      in: path
      name: attachmentID
      required: true
      schema:
        pattern: "^f-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    bankAccountIdPathParam:
      description: unique generate ID of a bank account
      explode: false
      in: path
      name: accountID
      required: true
      schema:
        pattern: "^b-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    caseIdPathParam:
      description: unique generate ID of a case
      explode: false
      in: path
      name: caseID
      required: true
      schema:
        pattern: "^c-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    caseCommentIdPathParam:
      description: unique generate ID of a case comment
      explode: false
      in: path
      name: commentID
      required: true
      schema:
        pattern: "^cc-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    caseReportingEndpointIdPathParam:
      description: unique generate ID of a case reporting endpoint
      explode: false
      in: path
      name: endpointID
      required: true
      schema:
        pattern: "^[0-9a-zA-Z]{8}$"
        type: string
      style: simple
    caseTemplateIdPathParam:
      description: unique generate ID of a case template
      explode: false
      in: path
      name: templateID
      required: true
      schema:
        pattern: "^ct-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    challengeQueryParam:
      description: |
        A user challenge code (e.g. reCaptcha response), used for protection of public API endpoints against bots or other malicious actors. A challenge should only be used when posting data to the backend. For reading operations, the code parameter should be used. The content of the challenge can be one of reCaptcha, code, certificate and should be prefixed accordingly. The challenge can also be ommitted by registered users, as those will be validated against their session.
      explode: true
      in: query
      name: challenge
      required: true
      schema:
        type: string
      style: form
    codePathParam:
      description: |
        A unique code that grants access to public users to the requested resource. Depending on the context, the code can have a different format and be validated in a different way. The parameter can be either provided in a path or as a query parameter
      explode: false
      in: path
      name: code
      required: true
      schema:
        type: string
      style: simple
    codeQueryParam:
      description: |
        A unique code that grants access to public users to the requested resource. Depending on the context, the code can have a different format and be validated in a different way. The parameter can be either provided in a path or as a query parameter
      explode: true
      in: query
      name: code
      required: true
      schema:
        type: string
      style: form
    connectorApiKeyPathParam:
      description: unique generated ID of an api key
      explode: false
      in: path
      name: apiKey
      required: true
      schema:
        type: string
      style: simple
    connectorEntityTypeParam:
      description: type of the entity
      explode: false
      in: path
      name: entityType
      required: true
      schema:
        $ref: '#/components/schemas/ConnectorEntity'
      style: simple
    connectorNameParam:
      description: Name of the connector
      explode: false
      in: path
      name: name
      required: true
      schema:
        type: string
      style: simple
    connectorQueryIDParam:
      description: ID of the query
      explode: false
      in: path
      name: queryID
      required: true
      schema:
        type: string
      style: simple
    countryCodePathParam:
      description: a valid country code
      explode: false
      in: path
      name: countryCode
      required: true
      schema:
        pattern: "^[a-zA-Z]{2}$"
        type: string
      style: simple
    customerScriptIdPathParam:
      description: unique generated ID of a customer JS script
      explode: false
      in: path
      name: scriptID
      required: true
      schema:
        pattern: "^sc-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    customIdGeneratorIdPathParam:
      description: unique generated ID of a custom ID generator
      explode: false
      in: path
      name: generatorID
      required: true
      schema:
        pattern: "^id-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    documentIdPathParam:
      description: unique generated ID of an uploaded document
      explode: false
      in: path
      name: documentID
      required: true
      schema:
        pattern: "^d-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    documentGenerationIdPathParam:
      description: unique generated ID of a document generation
      explode: false
      in: path
      name: docID
      required: true
      schema:
        pattern: "^g-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    documentTemplateIdPathParam:
      description: unique generated ID of a document generation
      explode: false
      in: path
      name: templateID
      required: true
      schema:
        pattern: "^dt-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    externalUserIdPathParam:
      description: unique generate ID of an external user
      explode: false
      in: path
      name: userID
      required: true
      schema:
        pattern: "^ex-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    faqEntryIdPathParam:
      description: unique generate ID of a FAQ entry
      explode: false
      in: path
      name: entryID
      required: true
      schema:
        pattern: "^qe-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    localeQueryParam:
      description: the string containing the language for the user
      explode: true
      in: query
      name: locale
      required: true
      schema:
        type: string
      style: form
    meterIdPathParam:
      description: unique generate ID of a meter
      explode: false
      in: path
      name: meterID
      required: true
      schema:
        pattern: "^m-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    meterReadingIdPathParam:
      description: unique generate ID of a meter reading
      explode: false
      in: path
      name: readingID
      required: true
      schema:
        pattern: "^mr-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    propertyIdPathParam:
      description: unique generate ID of a property
      explode: false
      in: path
      name: propID
      required: true
      schema:
        pattern: "^p-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    propertyHandoverTemplateIdPathParam:
      description: unique generated ID of a property handover template
      explode: false
      in: path
      name: templateID
      required: true
      schema:
        pattern: "^ht-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    propertyHandoverIdPathParam:
      description: unique generated ID of a property handover
      explode: false
      in: path
      name: handoverID
      required: true
      schema:
        pattern: "^ho-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    propertyOwnerIdPathParam:
      description: unique generate ID of a property owner
      explode: false
      in: path
      name: ownerID
      required: true
      schema:
        pattern: "^o-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    rentUpdateIdPathParam:
      description: unique generated ID of a tenancy rent update
      explode: false
      in: path
      name: rentUpdateID
      required: true
      schema:
        pattern: "^ru-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    reportDefinitionIdPathParam:
      description: unique generated ID of a report definition
      explode: false
      in: path
      name: definitionID
      required: true
      schema:
        pattern: "^rd-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    reportExecutionIdPathParam:
      description: unique generated ID of a report execution
      explode: false
      in: path
      name: executionID
      required: true
      schema:
        pattern: "^rx-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    scheduleIdPathParam:
      description: unique generate ID of a appointment schedule
      explode: false
      in: path
      name: scheduleID
      required: true
      schema:
        pattern: "^as-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    serviceProviderIdPathParam:
      description: unique generated ID of a service provider
      explode: false
      in: path
      name: serviceProviderID
      required: true
      schema:
        pattern: "^z-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    sourceIdPathParam:
      description: ID of the source object that triggered a workflow execution
      explode: false
      in: path
      name: sourceID
      required: true
      schema:
        pattern: "^[a-z]{1,2}-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    tenancyIdPathParam:
      description: unique generated ID of a tenancy
      explode: false
      in: path
      name: tenancyID
      required: true
      schema:
        pattern: "^ty-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    tenantChangeIdPathParam:
      description: unique generated ID of a tenant change
      explode: false
      in: path
      name: tenantChangeID
      required: true
      schema:
        pattern: "^tc-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    tenantIdPathParam:
      description: unique generated ID of a tenant
      explode: false
      in: path
      name: tenantID
      required: true
      schema:
        pattern: "^t-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    workflowDefinitionIdPathParam:
      description: unique generated ID of a workflow definition
      explode: false
      in: path
      name: definitionID
      required: true
      schema:
        pattern: "^wd-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    workflowEntrypointIdPathParam:
      description: unique generated ID of a workflow entry point
      explode: false
      in: path
      name: entrypointID
      required: true
      schema:
        pattern: "^we-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
    workflowExecutionIdPathParam:
      description: unique generated ID of a workflow execution
      explode: false
      in: path
      name: executionID
      required: true
      schema:
        pattern: "^we-[2-9A-HJ-NP-Za-km-z]{19,22}$"
        type: string
      style: simple
  responses:
    emptyResponse:
      content: {}
      description: |
        Empty response. This can be used for operations that do not return any data, such as delete operations. This is also used whenever an operation fails.
  schemas:
    YesNoOrValue:
      properties:
        v:
          description: true or false value
          type: boolean
        s:
          description: additional string value (e.g. if value set to true)
          type: string
        "n":
          description: additional numeric value (e.g. if value set to true)
          type: number
      type: object
    IDUpload:
      description: |
        an ID document uploaded by the user, consisting of a photo from the front and back of the ID
      properties:
        front:
          $ref: '#/components/schemas/Attachment'
        back:
          $ref: '#/components/schemas/Attachment'
      type: object
    RentDetailsAndData:
      allOf:
      - $ref: '#/components/schemas/RentData'
      - $ref: '#/components/schemas/RentDetails'
      description: Complete information about the contract regarding the rent.
      type: object
    RentUpdateMask:
      enum:
      - 1
      - 2
      - 4
      - 8
      - 16
      format: int64
      type: integer
      x-enum-varnames:
      - ADDITIONAL_COSTS
      - RENT
      - INCIDENTALS
      - INDEX_MONTH
      - INDEX_POINTS
    Attachment:
      description: |
        A file uploaded and attached to an entity (e.g. case, property, etc.)
      example:
        ref: ref
        thumbnail: thumbnail
        created: 0
        file_type: file_type
        file_name: file_name
        id: id
        file_sha256: file_sha256
        file_size: 6
        url: url
      properties:
        id:
          description: the unique ID of the uploaded file
          type: string
        created:
          description: timestamp indicating when the attachment was uploaded
          format: int64
          type: integer
        ref:
          description: "ID of the entity for which this file was uploaded (case, property,\
            \ etc.)"
          type: string
        file_type:
          description: the content type of the attachment
          type: string
        file_size:
          description: the size of the attachment in bytes
          format: int64
          type: integer
        file_name:
          description: the original file name
          type: string
        file_sha256:
          description: the sha256 sum of the file
          type: string
        thumbnail:
          description: optional link to thumbnail (only if file is an image)
          type: string
        url:
          description: "link to the actual file, through whitch it can be downloaded"
          type: string
      type: object
    AppointmentSchedule:
      example:
        template:
          form:
            layout:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            inputs:
            - propagate_changes: true
              view_label:
                key: view_label
              ephemeral: true
              default_value: default_value
              attributes:
                key: attributes
              id: id
              label:
                key: label
              placeholder:
                key: placeholder
              type: type
              items:
              - items
              - items
              required: true
              target: target
            - propagate_changes: true
              view_label:
                key: view_label
              ephemeral: true
              default_value: default_value
              attributes:
                key: attributes
              id: id
              label:
                key: label
              placeholder:
                key: placeholder
              type: type
              items:
              - items
              - items
              required: true
              target: target
            groups:
            - use_item_group: true
              bottom_divider: true
              top_divider: true
              min_size: 6
              id: id
              label:
                key: label
              type: type
              items:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              info:
                key: info
              target: target
            - use_item_group: true
              bottom_divider: true
              top_divider: true
              min_size: 6
              id: id
              label:
                key: label
              type: type
              items:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              info:
                key: info
              target: target
            validations:
            - expression: expression
              id: id
              message:
                key: message
              target: target
            - expression: expression
              id: id
              message:
                key: message
              target: target
          name_expression: name_expression
          name: name
          description: description
          id: id
          schedule_before: 0
        gap_duration: 5
        slot_duration: 1
        color: color
        name: name
        description:
          key: description
        id: id
        windows:
        - start_time: 5
          slots:
          - start_time: 7
            end_time: 9
            appointment:
              start_time: 4
              code: code
              updated_at: 2
              data:
                key: ""
              contact:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
              end_time: 7
              name: name
              created_at: 3
              id: id
          - start_time: 7
            end_time: 9
            appointment:
              start_time: 4
              code: code
              updated_at: 2
              data:
                key: ""
              contact:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
              end_time: 7
              name: name
              created_at: 3
              id: id
          end_time: 2
          id: id
        - start_time: 5
          slots:
          - start_time: 7
            end_time: 9
            appointment:
              start_time: 4
              code: code
              updated_at: 2
              data:
                key: ""
              contact:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
              end_time: 7
              name: name
              created_at: 3
              id: id
          - start_time: 7
            end_time: 9
            appointment:
              start_time: 4
              code: code
              updated_at: 2
              data:
                key: ""
              contact:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
              end_time: 7
              name: name
              created_at: 3
              id: id
          end_time: 2
          id: id
      properties:
        id:
          description: The unique identifier of the appointment window
          type: string
        name:
          description: The name of the appointment window
          type: string
        description:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        template:
          $ref: '#/components/schemas/AppointmentTemplate'
        slot_duration:
          description: The duration of the appointment slot in minutes
          format: int32
          type: integer
        gap_duration:
          description: The duration of the gap between appointments in minutes
          format: int32
          type: integer
        color:
          description: The color to use when displaying the appointment window in
            a calendar view
          type: string
        windows:
          description: The appointment windows
          items:
            $ref: '#/components/schemas/AppointmentWindow'
          type: array
      type: object
    AppointmentTemplate:
      example:
        form:
          layout:
          - ref_id: ref_id
            ref_type: ref_type
          - ref_id: ref_id
            ref_type: ref_type
          inputs:
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          groups:
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          validations:
          - expression: expression
            id: id
            message:
              key: message
            target: target
          - expression: expression
            id: id
            message:
              key: message
            target: target
        name_expression: name_expression
        name: name
        description: description
        id: id
        schedule_before: 0
      properties:
        id:
          description: The unique identifier of the appointment template
          type: string
        name:
          description: The name of the appointment template
          type: string
        name_expression:
          description: |
            The expression that is used to generate the name of the appointment from the data that the user has entered when booking the appointment
          type: string
        description:
          description: The description of the appointment template
          type: string
        schedule_before:
          description: |
            Constrain the minimum amount of time between the scheduling and the beginning of the appointment in minutes. Set this to 10 and people won't be able to schedule an appointment that's in less than 10 minutes.
          format: int32
          type: integer
        form:
          $ref: '#/components/schemas/CustomForm'
      required:
      - form
      - id
      - name
      type: object
    AppointmentWindow:
      example:
        start_time: 5
        slots:
        - start_time: 7
          end_time: 9
          appointment:
            start_time: 4
            code: code
            updated_at: 2
            data:
              key: ""
            contact:
              address:
                line1: 1 ZestLabs Blvd
                line2: CSS District
                city: Mannheim
                postcode: 680001
                province: Baden-Wuerttemberg
                country: Germany
              last_name: last_name
              company: company
              phone_number: phone_number
              id: id
              title: title
              first_name: first_name
              email: email
            end_time: 7
            name: name
            created_at: 3
            id: id
        - start_time: 7
          end_time: 9
          appointment:
            start_time: 4
            code: code
            updated_at: 2
            data:
              key: ""
            contact:
              address:
                line1: 1 ZestLabs Blvd
                line2: CSS District
                city: Mannheim
                postcode: 680001
                province: Baden-Wuerttemberg
                country: Germany
              last_name: last_name
              company: company
              phone_number: phone_number
              id: id
              title: title
              first_name: first_name
              email: email
            end_time: 7
            name: name
            created_at: 3
            id: id
        end_time: 2
        id: id
      properties:
        id:
          description: |
            The id of the window - only provided as a response or in update requests
          type: string
        start_time:
          description: The timestamp of the beginning of the appointment window
          format: int64
          type: integer
        end_time:
          description: The timestamp of the end of the appointment window
          format: int64
          type: integer
        slots:
          description: List of slots that are available or booked
          items:
            $ref: '#/components/schemas/AppointmentSlot'
          type: array
      required:
      - end_time
      - start_time
      type: object
    AppointmentSlot:
      description: |
        An appointment slot is a time slot within a appointment window that is available for booking.
      example:
        start_time: 7
        end_time: 9
        appointment:
          start_time: 4
          code: code
          updated_at: 2
          data:
            key: ""
          contact:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
          end_time: 7
          name: name
          created_at: 3
          id: id
      properties:
        start_time:
          description: The timestamp of the beginning of the appointment slot
          format: int64
          type: integer
        end_time:
          description: The timestamp of the end of the appointment slot
          format: int64
          type: integer
        appointment:
          $ref: '#/components/schemas/Appointment'
      type: object
    Appointment:
      description: |
        An appointment is a time slot that has already been booked by a user.
      example:
        start_time: 4
        code: code
        updated_at: 2
        data:
          key: ""
        contact:
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          last_name: last_name
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
        end_time: 7
        name: name
        created_at: 3
        id: id
      properties:
        id:
          description: The unique identifier of the appointment
          type: string
        code:
          description: The code of the appointment if the appointment is public
          type: string
        created_at:
          description: The timestamp of when the appointment was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the appointment was last updated
          format: int64
          type: integer
        start_time:
          description: "The timestamp of the appointment, i.e. when it starts"
          format: int64
          type: integer
        end_time:
          description: "The timestamp of the appointment, i.e. when it ends"
          format: int64
          type: integer
        name:
          description: "A descriptive name for the appointment, displayed on the calendar\
            \ overview"
          type: string
        contact:
          $ref: '#/components/schemas/ContactData'
        data:
          additionalProperties: true
          description: |
            Input provided by the user when booking the appointment
          type: object
      type: object
    CreateOrUpdateAppointmentRequest:
      example:
        data:
          key: ""
        appointment_window_id: appointment_window_id
        contact:
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          last_name: last_name
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
        slot_idx: 0
      properties:
        appointment_window_id:
          description: The id of the appointment window that the user wants to book
          type: string
        slot_idx:
          description: The offset within the appointment window which should be booked
          format: int32
          type: integer
        contact:
          $ref: '#/components/schemas/ContactData'
        data:
          additionalProperties: true
          description: The data that the user has entered when booking the appointment
          type: object
      type: object
    MandatoryMessage:
      example:
        message: message
      properties:
        message:
          description: The message that should sent to the admin when deleting an
            appointment
          type: string
      type: object
    CreateCaseRequest:
      description: All the information required for raising a new case
      example:
        property_address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        property_ref: property_ref
        data:
          key: ""
        template_ref: template_ref
        reporter_info:
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          last_name: last_name
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
      properties:
        property_ref:
          description: Reference to either property or building for which case is
            rased
          type: string
        property_address:
          $ref: '#/components/schemas/Address'
        reporter_info:
          $ref: '#/components/schemas/ContactData'
        template_ref:
          description: |
            The ID of the case template used to create this case
          type: string
        data:
          additionalProperties: true
          description: |
            Input provided by the user when raising the case as a key-value map
          type: object
      type: object
    CreateCaseResponse:
      description: The data generated based on a new case requests
      example:
        access_code: access_code
        case:
          template: template
          comments:
          - deleted: true
            attachments:
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            updated_at: 2
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 5
            id: id
            content: content
          - deleted: true
            attachments:
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            updated_at: 2
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 5
            id: id
            content: content
          data:
            key: ""
          status_history:
          - author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            action: null
            id: id
            assignee:
              contact_ref: contact_ref
              account_ref: 1
            timestamp: 5
            status: null
          - author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            action: null
            id: id
            assignee:
              contact_ref: contact_ref
              account_ref: 1
            timestamp: 5
            status: null
          created_at: 0
          reporter:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
          feedback:
          - form_data:
              key: ""
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 7
            action: null
            feedback_id: feedback_id
            id: id
            source_status: null
          - form_data:
              key: ""
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 7
            action: null
            feedback_id: feedback_id
            id: id
            source_status: null
          archived: true
          property_address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          updated_at: 6
          property_ref: property_ref
          name: name
          parties:
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          id: id
          assignee:
            contact_ref: contact_ref
            account_ref: 1
          status: null
      properties:
        case:
          $ref: '#/components/schemas/Case'
        access_code:
          type: string
      type: object
    Case:
      description: "Case represents a single case, typically raised by a tenant"
      example:
        template: template
        comments:
        - deleted: true
          attachments:
          - ref: ref
            thumbnail: thumbnail
            created: 0
            file_type: file_type
            file_name: file_name
            id: id
            file_sha256: file_sha256
            file_size: 6
            url: url
          - ref: ref
            thumbnail: thumbnail
            created: 0
            file_type: file_type
            file_name: file_name
            id: id
            file_sha256: file_sha256
            file_size: 6
            url: url
          updated_at: 2
          visibility:
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          author_ref:
            user_role: null
            user_id: user_id
            contact_data:
              address:
                line1: 1 ZestLabs Blvd
                line2: CSS District
                city: Mannheim
                postcode: 680001
                province: Baden-Wuerttemberg
                country: Germany
              last_name: last_name
              company: company
              phone_number: phone_number
              id: id
              title: title
              first_name: first_name
              email: email
          created_at: 5
          id: id
          content: content
        - deleted: true
          attachments:
          - ref: ref
            thumbnail: thumbnail
            created: 0
            file_type: file_type
            file_name: file_name
            id: id
            file_sha256: file_sha256
            file_size: 6
            url: url
          - ref: ref
            thumbnail: thumbnail
            created: 0
            file_type: file_type
            file_name: file_name
            id: id
            file_sha256: file_sha256
            file_size: 6
            url: url
          updated_at: 2
          visibility:
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          author_ref:
            user_role: null
            user_id: user_id
            contact_data:
              address:
                line1: 1 ZestLabs Blvd
                line2: CSS District
                city: Mannheim
                postcode: 680001
                province: Baden-Wuerttemberg
                country: Germany
              last_name: last_name
              company: company
              phone_number: phone_number
              id: id
              title: title
              first_name: first_name
              email: email
          created_at: 5
          id: id
          content: content
        data:
          key: ""
        status_history:
        - author_ref:
            user_role: null
            user_id: user_id
            contact_data:
              address:
                line1: 1 ZestLabs Blvd
                line2: CSS District
                city: Mannheim
                postcode: 680001
                province: Baden-Wuerttemberg
                country: Germany
              last_name: last_name
              company: company
              phone_number: phone_number
              id: id
              title: title
              first_name: first_name
              email: email
          action: null
          id: id
          assignee:
            contact_ref: contact_ref
            account_ref: 1
          timestamp: 5
          status: null
        - author_ref:
            user_role: null
            user_id: user_id
            contact_data:
              address:
                line1: 1 ZestLabs Blvd
                line2: CSS District
                city: Mannheim
                postcode: 680001
                province: Baden-Wuerttemberg
                country: Germany
              last_name: last_name
              company: company
              phone_number: phone_number
              id: id
              title: title
              first_name: first_name
              email: email
          action: null
          id: id
          assignee:
            contact_ref: contact_ref
            account_ref: 1
          timestamp: 5
          status: null
        created_at: 0
        reporter:
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          last_name: last_name
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
        feedback:
        - form_data:
            key: ""
          visibility:
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          author_ref:
            user_role: null
            user_id: user_id
            contact_data:
              address:
                line1: 1 ZestLabs Blvd
                line2: CSS District
                city: Mannheim
                postcode: 680001
                province: Baden-Wuerttemberg
                country: Germany
              last_name: last_name
              company: company
              phone_number: phone_number
              id: id
              title: title
              first_name: first_name
              email: email
          created_at: 7
          action: null
          feedback_id: feedback_id
          id: id
          source_status: null
        - form_data:
            key: ""
          visibility:
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          author_ref:
            user_role: null
            user_id: user_id
            contact_data:
              address:
                line1: 1 ZestLabs Blvd
                line2: CSS District
                city: Mannheim
                postcode: 680001
                province: Baden-Wuerttemberg
                country: Germany
              last_name: last_name
              company: company
              phone_number: phone_number
              id: id
              title: title
              first_name: first_name
              email: email
          created_at: 7
          action: null
          feedback_id: feedback_id
          id: id
          source_status: null
        archived: true
        property_address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        updated_at: 6
        property_ref: property_ref
        name: name
        parties:
        - ref: ref
          role: null
          name: name
          ref_type: ref_type
        - ref: ref
          role: null
          name: name
          ref_type: ref_type
        id: id
        assignee:
          contact_ref: contact_ref
          account_ref: 1
        status: null
      properties:
        id:
          type: string
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
        name:
          format: int64
          type: string
        template:
          description: |
            The ID of the case template used to create this case
          type: string
        status:
          $ref: '#/components/schemas/CaseStatusEnum'
        archived:
          description: Indicates if the case has been archived
          type: boolean
        property_ref:
          description: Reference to property
          type: string
        property_address:
          $ref: '#/components/schemas/Address'
        reporter:
          $ref: '#/components/schemas/ContactData'
        assignee:
          $ref: '#/components/schemas/CaseAssignee'
        parties:
          description: "List of all accounts that have access to the case (e.g. manager,\
            \ tenenat, and service provider)"
          items:
            $ref: '#/components/schemas/CaseParty'
          type: array
        status_history:
          description: List of all status changes. Latest one is the current one
          items:
            $ref: '#/components/schemas/CaseStatus'
          type: array
        comments:
          items:
            $ref: '#/components/schemas/CaseComment'
          type: array
        feedback:
          description: |
            List of feedback that was provided by the parties when changing the status of the case
          items:
            $ref: '#/components/schemas/CaseFeedbackEntry'
          type: array
        data:
          additionalProperties: true
          description: |
            Input provided by the user when raising the case as a key-value map
          type: object
      type: object
    CaseStatusEnum:
      description: |
        The list of statuses that a case can be in as a result of a status change. Each status is a result of a action, where some statuses can be reached from multiple actions being triggered.
      enum:
      - ACKNOWLEDGED
      - ANY
      - ARCHIVED
      - AWAITING_ACTION
      - CANCELLED
      - FEEDBACK_REQUESTED
      - IDLE
      - IN_PROGRESS
      - OPEN
      - REJECTED
      - REOPENED
      - RESOLVED
      - WORK_ACCEPTED
      - WORK_COMPLETED
      - WORK_CANCELLED
      - WORK_REJECTED
      - WORK_REQUESTED
      - WORK_SCHEDULED
      type: string
    CaseAssignee:
      description: Indicates who is currently assigned to work on the case.
      example:
        contact_ref: contact_ref
        account_ref: 1
      properties:
        account_ref:
          description: Set in case the assignee has an account within the plattform
          format: int64
          type: integer
        contact_ref:
          description: |
            Set in case the assignee is a service provider or tenant, without an  account on the plattform
          type: string
      type: object
    CaseParty:
      description: CaseParty indicates that the referenced account has access to the
        case.
      example:
        ref: ref
        role: null
        name: name
        ref_type: ref_type
      properties:
        role:
          $ref: '#/components/schemas/UserTypeEnum'
        ref_type:
          description: |
            The type of the reference. Can be either "account" or "external_user". If not set, it will be assumed to be "account"
          type: string
        ref:
          description: the ID of the referenced entity (either string or int64)
          type: string
        name:
          description: |
            The name of the party, derived from the referenced entity
          type: string
      type: object
    CaseStatus:
      description: CaseStatus represents the update to the status of a case
      example:
        author_ref:
          user_role: null
          user_id: user_id
          contact_data:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
        action: null
        id: id
        assignee:
          contact_ref: contact_ref
          account_ref: 1
        timestamp: 5
        status: null
      properties:
        id:
          description: Auto-generated ID of the status update
          type: string
        author_ref:
          $ref: '#/components/schemas/UserReference'
        timestamp:
          format: int64
          type: integer
        action:
          $ref: '#/components/schemas/CaseActionEnum'
        status:
          $ref: '#/components/schemas/CaseStatusEnum'
        assignee:
          $ref: '#/components/schemas/CaseAssignee'
      required:
      - id
      - status
      - timestamp
      type: object
    CaseActionEnum:
      description: |
        The list of actions that can be performed on a case. Each action has a  predetermined target status that is going to be set once the action is performed.
      enum:
      - ACCEPT_WORK
      - ACKNOWLEDGE
      - ARCHIVE
      - ASSIGN
      - CANCEL
      - CANCEL_WORK
      - COMMENT
      - FINISH_WORK
      - SEND_REMINDER
      - OPEN
      - PAUSE_WORK
      - REJECT
      - REJECT_WORK
      - REOPEN
      - REQUEST_FEEDBACK
      - REQUEST_WORK
      - RESCHEDULE_WORK
      - RESOLVE
      - SCHEDULE_WORK
      - START_WORK
      - UNASSIGN
      - UPDATE
      type: string
    CaseComment:
      description: Comment represents a single user comment on a case
      example:
        deleted: true
        attachments:
        - ref: ref
          thumbnail: thumbnail
          created: 0
          file_type: file_type
          file_name: file_name
          id: id
          file_sha256: file_sha256
          file_size: 6
          url: url
        - ref: ref
          thumbnail: thumbnail
          created: 0
          file_type: file_type
          file_name: file_name
          id: id
          file_sha256: file_sha256
          file_size: 6
          url: url
        updated_at: 2
        visibility:
        - ref: ref
          role: null
          name: name
          ref_type: ref_type
        - ref: ref
          role: null
          name: name
          ref_type: ref_type
        author_ref:
          user_role: null
          user_id: user_id
          contact_data:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
        created_at: 5
        id: id
        content: content
      properties:
        id:
          type: string
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
        author_ref:
          $ref: '#/components/schemas/UserReference'
        deleted:
          description: Indicates if the comment has been deleted
          type: boolean
        visibility:
          description: |
            List of paries that should have access to the comment
          items:
            $ref: '#/components/schemas/CaseParty'
          type: array
        content:
          type: string
        attachments:
          description: |
            list of attachments that should be linked to the comment
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
      required:
      - author_ref
      - content
      - created_at
      - id
      type: object
    CaseFeedbackEntry:
      description: |
        Contains the feedback that was provided by a party when changing the status of a case.
      example:
        form_data:
          key: ""
        visibility:
        - ref: ref
          role: null
          name: name
          ref_type: ref_type
        - ref: ref
          role: null
          name: name
          ref_type: ref_type
        author_ref:
          user_role: null
          user_id: user_id
          contact_data:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
        created_at: 7
        action: null
        feedback_id: feedback_id
        id: id
        source_status: null
      properties:
        id:
          description: |
            The unique ID of the feedback entry
          type: string
        created_at:
          format: int64
          type: integer
        author_ref:
          $ref: '#/components/schemas/UserReference'
        source_status:
          $ref: '#/components/schemas/CaseStatusEnum'
        action:
          $ref: '#/components/schemas/CaseActionEnum'
        feedback_id:
          description: |
            The ID of the feedback entry, used to map responses against the config
          type: string
        visibility:
          description: |
            List of paries that should have access to the comment
          items:
            $ref: '#/components/schemas/CaseParty'
          type: array
        form_data:
          additionalProperties: true
          description: |
            Form data that was provided by the party executing the action.
          type: object
      type: object
    CaseDetails:
      description: "All details of a case, raised via a case report endpoint"
      example:
        template:
          access:
          - null
          - null
          name_expression: name_expression
          icon: icon
          created_at: 0
          description:
            key: description
          label:
            key: label
          confirmation_text:
            key: confirmation_text
          updated_at: 6
          info_text:
            key: info_text
          ad_categories:
          - null
          - null
          name: name
          id: id
          custom_inputs:
            layout:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            inputs:
            - propagate_changes: true
              view_label:
                key: view_label
              ephemeral: true
              default_value: default_value
              attributes:
                key: attributes
              id: id
              label:
                key: label
              placeholder:
                key: placeholder
              type: type
              items:
              - items
              - items
              required: true
              target: target
            - propagate_changes: true
              view_label:
                key: view_label
              ephemeral: true
              default_value: default_value
              attributes:
                key: attributes
              id: id
              label:
                key: label
              placeholder:
                key: placeholder
              type: type
              items:
              - items
              - items
              required: true
              target: target
            groups:
            - use_item_group: true
              bottom_divider: true
              top_divider: true
              min_size: 6
              id: id
              label:
                key: label
              type: type
              items:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              info:
                key: info
              target: target
            - use_item_group: true
              bottom_divider: true
              top_divider: true
              min_size: 6
              id: id
              label:
                key: label
              type: type
              items:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              info:
                key: info
              target: target
            validations:
            - expression: expression
              id: id
              message:
                key: message
              target: target
            - expression: expression
              id: id
              message:
                key: message
              target: target
          config:
            reminders:
            - schedule:
              - 2
              - 5
              - 10
              status: null
            - schedule:
              - 2
              - 5
              - 10
              status: null
            automatic_actions:
            - schedule: 1
              action: action
              status: null
            - schedule: 1
              action: action
              status: null
            status_config:
            - feedback:
              - mode: null
                visibility:
                - null
                - null
                form:
                  layout:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  inputs:
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  groups:
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  validations:
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                id: id
              - mode: null
                visibility:
                - null
                - null
                form:
                  layout:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  inputs:
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  groups:
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  validations:
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                id: id
              parties:
              - null
              - null
              action: null
              source_status:
              - null
              - null
              notify:
              - null
              - null
            - feedback:
              - mode: null
                visibility:
                - null
                - null
                form:
                  layout:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  inputs:
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  groups:
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  validations:
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                id: id
              - mode: null
                visibility:
                - null
                - null
                form:
                  layout:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  inputs:
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  groups:
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  validations:
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                id: id
              parties:
              - null
              - null
              action: null
              source_status:
              - null
              - null
              notify:
              - null
              - null
        case_party:
          ref: ref
          role: null
          name: name
          ref_type: ref_type
        property:
          parent_name: parent_name
          bank_account_ref: bank_account_ref
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          parent_address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          created_at: 5
          external_id: external_id
          type: null
          parent_ref: parent_ref
          updated_at: 5
          owner_ref: owner_ref
          name: name
          details:
            floor: 3A
            area: 120
            rooms: 6
            bedrooms: 2
            bathrooms: 1
            balcony: 1
            construction_year: 2018
            parking: PARKING_SPOT
            floor_type:
            - LAMINATE
            - TILES
            heating_type:
            - CENTRAL_HEATING
            - FLOOR_HEATING
            - AC
            window_type:
            - TRIPLE_PANE
            - DOUBLE_SASH
            furnishing: FULL_FURNISHING
            historic_property: false
            rent: 750
            running_costs: 150
          id: id
          external_source: external_source
        reporter:
          user_role: null
          user_id: user_id
          contact_data:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
        case:
          template: template
          comments:
          - deleted: true
            attachments:
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            updated_at: 2
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 5
            id: id
            content: content
          - deleted: true
            attachments:
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            updated_at: 2
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 5
            id: id
            content: content
          data:
            key: ""
          status_history:
          - author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            action: null
            id: id
            assignee:
              contact_ref: contact_ref
              account_ref: 1
            timestamp: 5
            status: null
          - author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            action: null
            id: id
            assignee:
              contact_ref: contact_ref
              account_ref: 1
            timestamp: 5
            status: null
          created_at: 0
          reporter:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
          feedback:
          - form_data:
              key: ""
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 7
            action: null
            feedback_id: feedback_id
            id: id
            source_status: null
          - form_data:
              key: ""
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 7
            action: null
            feedback_id: feedback_id
            id: id
            source_status: null
          archived: true
          property_address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          updated_at: 6
          property_ref: property_ref
          name: name
          parties:
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          id: id
          assignee:
            contact_ref: contact_ref
            account_ref: 1
          status: null
      properties:
        case:
          $ref: '#/components/schemas/Case'
        reporter:
          $ref: '#/components/schemas/UserReference'
        case_party:
          $ref: '#/components/schemas/CaseParty'
        template:
          $ref: '#/components/schemas/CaseTemplate'
        property:
          $ref: '#/components/schemas/Property'
      type: object
    CaseTemplate:
      description: |
        Contains the information necessary to create a report of a certain  type from a report endpoint.
      example:
        access:
        - null
        - null
        name_expression: name_expression
        icon: icon
        created_at: 0
        description:
          key: description
        label:
          key: label
        confirmation_text:
          key: confirmation_text
        updated_at: 6
        info_text:
          key: info_text
        ad_categories:
        - null
        - null
        name: name
        id: id
        custom_inputs:
          layout:
          - ref_id: ref_id
            ref_type: ref_type
          - ref_id: ref_id
            ref_type: ref_type
          inputs:
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          groups:
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          validations:
          - expression: expression
            id: id
            message:
              key: message
            target: target
          - expression: expression
            id: id
            message:
              key: message
            target: target
        config:
          reminders:
          - schedule:
            - 2
            - 5
            - 10
            status: null
          - schedule:
            - 2
            - 5
            - 10
            status: null
          automatic_actions:
          - schedule: 1
            action: action
            status: null
          - schedule: 1
            action: action
            status: null
          status_config:
          - feedback:
            - mode: null
              visibility:
              - null
              - null
              form:
                layout:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                inputs:
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                groups:
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                validations:
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
              id: id
            - mode: null
              visibility:
              - null
              - null
              form:
                layout:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                inputs:
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                groups:
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                validations:
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
              id: id
            parties:
            - null
            - null
            action: null
            source_status:
            - null
            - null
            notify:
            - null
            - null
          - feedback:
            - mode: null
              visibility:
              - null
              - null
              form:
                layout:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                inputs:
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                groups:
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                validations:
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
              id: id
            - mode: null
              visibility:
              - null
              - null
              form:
                layout:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                inputs:
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                groups:
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                validations:
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
              id: id
            parties:
            - null
            - null
            action: null
            source_status:
            - null
            - null
            notify:
            - null
            - null
      properties:
        id:
          description: |
            The ID of the cases template
          type: string
        created_at:
          description: The timestamp of when the template was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the template was last updated
          format: int64
          type: integer
        name:
          description: |
            The name of the cases template (only used in admin pages). If not set, the name of the template will be used instead.
          type: string
        access:
          description: |
            The list of access possibilities for the template. This is used to determine  in which parts of the webapp the template can be used.
          items:
            $ref: '#/components/schemas/CaseTemplateAccessibility'
          type: array
        name_expression:
          description: |
            Optional JS expression used to generate the name of the actual case
          type: string
        label:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        description:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        info_text:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        icon:
          description: |
            The font-awesome icon to use for this template
          type: string
        custom_inputs:
          $ref: '#/components/schemas/CustomForm'
        config:
          $ref: '#/components/schemas/CaseConfig'
        ad_categories:
          items:
            $ref: '#/components/schemas/CaseTemplateAdCategoryEnum'
          type: array
        confirmation_text:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
      required:
      - created_at
      - custom_inputs
      - id
      - name
      - updated_at
      type: object
    CaseTemplateAccessibility:
      description: |
        The list of options that can be used to define where a case template can be used in the webapp.
      enum:
      - PROPERTY_MANAGER
      - TENANT
      - PUBLIC
      type: string
    CaseConfig:
      description: |
        Defines custom behaviour of a case, based on the case template that was  used to create it.
      example:
        reminders:
        - schedule:
          - 2
          - 5
          - 10
          status: null
        - schedule:
          - 2
          - 5
          - 10
          status: null
        automatic_actions:
        - schedule: 1
          action: action
          status: null
        - schedule: 1
          action: action
          status: null
        status_config:
        - feedback:
          - mode: null
            visibility:
            - null
            - null
            form:
              layout:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              inputs:
              - propagate_changes: true
                view_label:
                  key: view_label
                ephemeral: true
                default_value: default_value
                attributes:
                  key: attributes
                id: id
                label:
                  key: label
                placeholder:
                  key: placeholder
                type: type
                items:
                - items
                - items
                required: true
                target: target
              - propagate_changes: true
                view_label:
                  key: view_label
                ephemeral: true
                default_value: default_value
                attributes:
                  key: attributes
                id: id
                label:
                  key: label
                placeholder:
                  key: placeholder
                type: type
                items:
                - items
                - items
                required: true
                target: target
              groups:
              - use_item_group: true
                bottom_divider: true
                top_divider: true
                min_size: 6
                id: id
                label:
                  key: label
                type: type
                items:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                info:
                  key: info
                target: target
              - use_item_group: true
                bottom_divider: true
                top_divider: true
                min_size: 6
                id: id
                label:
                  key: label
                type: type
                items:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                info:
                  key: info
                target: target
              validations:
              - expression: expression
                id: id
                message:
                  key: message
                target: target
              - expression: expression
                id: id
                message:
                  key: message
                target: target
            id: id
          - mode: null
            visibility:
            - null
            - null
            form:
              layout:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              inputs:
              - propagate_changes: true
                view_label:
                  key: view_label
                ephemeral: true
                default_value: default_value
                attributes:
                  key: attributes
                id: id
                label:
                  key: label
                placeholder:
                  key: placeholder
                type: type
                items:
                - items
                - items
                required: true
                target: target
              - propagate_changes: true
                view_label:
                  key: view_label
                ephemeral: true
                default_value: default_value
                attributes:
                  key: attributes
                id: id
                label:
                  key: label
                placeholder:
                  key: placeholder
                type: type
                items:
                - items
                - items
                required: true
                target: target
              groups:
              - use_item_group: true
                bottom_divider: true
                top_divider: true
                min_size: 6
                id: id
                label:
                  key: label
                type: type
                items:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                info:
                  key: info
                target: target
              - use_item_group: true
                bottom_divider: true
                top_divider: true
                min_size: 6
                id: id
                label:
                  key: label
                type: type
                items:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                info:
                  key: info
                target: target
              validations:
              - expression: expression
                id: id
                message:
                  key: message
                target: target
              - expression: expression
                id: id
                message:
                  key: message
                target: target
            id: id
          parties:
          - null
          - null
          action: null
          source_status:
          - null
          - null
          notify:
          - null
          - null
        - feedback:
          - mode: null
            visibility:
            - null
            - null
            form:
              layout:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              inputs:
              - propagate_changes: true
                view_label:
                  key: view_label
                ephemeral: true
                default_value: default_value
                attributes:
                  key: attributes
                id: id
                label:
                  key: label
                placeholder:
                  key: placeholder
                type: type
                items:
                - items
                - items
                required: true
                target: target
              - propagate_changes: true
                view_label:
                  key: view_label
                ephemeral: true
                default_value: default_value
                attributes:
                  key: attributes
                id: id
                label:
                  key: label
                placeholder:
                  key: placeholder
                type: type
                items:
                - items
                - items
                required: true
                target: target
              groups:
              - use_item_group: true
                bottom_divider: true
                top_divider: true
                min_size: 6
                id: id
                label:
                  key: label
                type: type
                items:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                info:
                  key: info
                target: target
              - use_item_group: true
                bottom_divider: true
                top_divider: true
                min_size: 6
                id: id
                label:
                  key: label
                type: type
                items:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                info:
                  key: info
                target: target
              validations:
              - expression: expression
                id: id
                message:
                  key: message
                target: target
              - expression: expression
                id: id
                message:
                  key: message
                target: target
            id: id
          - mode: null
            visibility:
            - null
            - null
            form:
              layout:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              inputs:
              - propagate_changes: true
                view_label:
                  key: view_label
                ephemeral: true
                default_value: default_value
                attributes:
                  key: attributes
                id: id
                label:
                  key: label
                placeholder:
                  key: placeholder
                type: type
                items:
                - items
                - items
                required: true
                target: target
              - propagate_changes: true
                view_label:
                  key: view_label
                ephemeral: true
                default_value: default_value
                attributes:
                  key: attributes
                id: id
                label:
                  key: label
                placeholder:
                  key: placeholder
                type: type
                items:
                - items
                - items
                required: true
                target: target
              groups:
              - use_item_group: true
                bottom_divider: true
                top_divider: true
                min_size: 6
                id: id
                label:
                  key: label
                type: type
                items:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                info:
                  key: info
                target: target
              - use_item_group: true
                bottom_divider: true
                top_divider: true
                min_size: 6
                id: id
                label:
                  key: label
                type: type
                items:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                info:
                  key: info
                target: target
              validations:
              - expression: expression
                id: id
                message:
                  key: message
                target: target
              - expression: expression
                id: id
                message:
                  key: message
                target: target
            id: id
          parties:
          - null
          - null
          action: null
          source_status:
          - null
          - null
          notify:
          - null
          - null
      properties:
        status_config:
          description: |
            The configuration for the status transition of a case. This is used to  determine which status changes are allowed by which party at which time.
          items:
            $ref: '#/components/schemas/CaseStatusConfig'
          type: array
        reminders:
          description: |
            The configuration for sending out reminders for a case.
          items:
            $ref: '#/components/schemas/CaseReminderConfig'
          type: array
        automatic_actions:
          description: |
            The configuration for automatic actions to be performed for case. This is used to perform complex actions, like changing the status of a case or adding an automatic comment.
          items:
            $ref: '#/components/schemas/CaseAutomaticActionConfig'
          type: array
      type: object
    CaseStatusConfig:
      description: |
        Contains the configuration for the status of a case. This is used to  determine which status changes are allowed.
      example:
        feedback:
        - mode: null
          visibility:
          - null
          - null
          form:
            layout:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            inputs:
            - propagate_changes: true
              view_label:
                key: view_label
              ephemeral: true
              default_value: default_value
              attributes:
                key: attributes
              id: id
              label:
                key: label
              placeholder:
                key: placeholder
              type: type
              items:
              - items
              - items
              required: true
              target: target
            - propagate_changes: true
              view_label:
                key: view_label
              ephemeral: true
              default_value: default_value
              attributes:
                key: attributes
              id: id
              label:
                key: label
              placeholder:
                key: placeholder
              type: type
              items:
              - items
              - items
              required: true
              target: target
            groups:
            - use_item_group: true
              bottom_divider: true
              top_divider: true
              min_size: 6
              id: id
              label:
                key: label
              type: type
              items:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              info:
                key: info
              target: target
            - use_item_group: true
              bottom_divider: true
              top_divider: true
              min_size: 6
              id: id
              label:
                key: label
              type: type
              items:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              info:
                key: info
              target: target
            validations:
            - expression: expression
              id: id
              message:
                key: message
              target: target
            - expression: expression
              id: id
              message:
                key: message
              target: target
          id: id
        - mode: null
          visibility:
          - null
          - null
          form:
            layout:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            inputs:
            - propagate_changes: true
              view_label:
                key: view_label
              ephemeral: true
              default_value: default_value
              attributes:
                key: attributes
              id: id
              label:
                key: label
              placeholder:
                key: placeholder
              type: type
              items:
              - items
              - items
              required: true
              target: target
            - propagate_changes: true
              view_label:
                key: view_label
              ephemeral: true
              default_value: default_value
              attributes:
                key: attributes
              id: id
              label:
                key: label
              placeholder:
                key: placeholder
              type: type
              items:
              - items
              - items
              required: true
              target: target
            groups:
            - use_item_group: true
              bottom_divider: true
              top_divider: true
              min_size: 6
              id: id
              label:
                key: label
              type: type
              items:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              info:
                key: info
              target: target
            - use_item_group: true
              bottom_divider: true
              top_divider: true
              min_size: 6
              id: id
              label:
                key: label
              type: type
              items:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              info:
                key: info
              target: target
            validations:
            - expression: expression
              id: id
              message:
                key: message
              target: target
            - expression: expression
              id: id
              message:
                key: message
              target: target
          id: id
        parties:
        - null
        - null
        action: null
        source_status:
        - null
        - null
        notify:
        - null
        - null
      properties:
        action:
          $ref: '#/components/schemas/CaseActionEnum'
        source_status:
          description: |
            A list of possible statuses in which the case must be, so that the configuration applies.
          items:
            $ref: '#/components/schemas/CaseStatusEnum'
          type: array
        parties:
          description: |
            The parties for which the configuration applies, that is the parties that are allowed to  execute the action when the case is in onf of the source status.
          items:
            $ref: '#/components/schemas/UserTypeEnum'
          type: array
        feedback:
          description: |
            Optional list of feedback that is requested from the party executing the action.
          items:
            $ref: '#/components/schemas/CaseFeedbackConfig'
          type: array
        notify:
          description: |
            The list of parties that should be notified of the status change.
          items:
            $ref: '#/components/schemas/UserTypeEnum'
          type: array
      type: object
    CaseFeedbackConfig:
      example:
        mode: null
        visibility:
        - null
        - null
        form:
          layout:
          - ref_id: ref_id
            ref_type: ref_type
          - ref_id: ref_id
            ref_type: ref_type
          inputs:
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          groups:
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          validations:
          - expression: expression
            id: id
            message:
              key: message
            target: target
          - expression: expression
            id: id
            message:
              key: message
            target: target
        id: id
      properties:
        id:
          description: |
            The ID of the feedback entry, used to map responses against the config
          type: string
        visibility:
          description: |
            The visibility of the feedback entry. This is used to determine which  parties can see the feedback entry.
          items:
            $ref: '#/components/schemas/UserTypeEnum'
          type: array
        mode:
          $ref: '#/components/schemas/CaseFeedbackModeEnum'
        form:
          $ref: '#/components/schemas/CustomForm'
      type: object
    CaseFeedbackModeEnum:
      description: |
        The list of feedback modes that can be used to collect information from a case party.
      enum:
      - OPTIONAL_COMMENT
      - REQUIRED_COMMENT
      - FORM
      type: string
    CaseReminderConfig:
      description: |
        Defines the configuration for sending out reminders for a case.
      example:
        schedule:
        - 2
        - 5
        - 10
        status: null
      properties:
        status:
          $ref: '#/components/schemas/CaseStatusEnum'
        schedule:
          description: |
            The number of days after which a reminder should be sent out. The list is  taken as provided and a reminder will be set for the amount of days as set in the first element of the list. Once that time has passed, the reminder will be rescheduled for the next element in the list. This is repeated until the list is empty. The values in the list are considered relative to the previous reminder. So [2, 2] will send out a reminder after 2 and 4 days. The reminders will, however, not be sent out on weekends. So if the first reminder is sent out on a Friday, the second reminder will be sent out on Tuesday. All reminders are reset, whenever the case is updated.
          example:
          - 2
          - 5
          - 10
          items:
            type: integer
          type: array
      type: object
    CaseAutomaticActionConfig:
      description: |
        Defines the configuration for an automatic action a case.
      example:
        schedule: 1
        action: action
        status: null
      properties:
        status:
          $ref: '#/components/schemas/CaseStatusEnum'
        schedule:
          description: |
            The number of days after which the status change should be triggered. The  schedule is reset, whenever the case is updated. A negative value means that  the action should be triggered immediately.
          type: integer
        action:
          description: |
            JSON script of the action that should be executed, if the schedule and execution check are successful.
          type: string
      type: object
    CaseTemplateAdCategoryEnum:
      description: |
        The list of ad categories that can be displayed for a case template
      enum:
      - ELECTRICITY_PROVIDERS
      - INTERNET_PROVIDERS
      - GAS_PROVIDERS
      - HOME_INSURANCE
      type: string
    UpdateCaseStatusRequest:
      description: All the information required for updating the status of a case
      example:
        feedback:
        - form_data:
            key: ""
          comment: comment
          id: id
          attachment_refs:
          - attachment_refs
          - attachment_refs
        - form_data:
            key: ""
          comment: comment
          id: id
          attachment_refs:
          - attachment_refs
          - attachment_refs
        action: null
        assignee:
          contact_ref: contact_ref
          account_ref: 1
      properties:
        action:
          $ref: '#/components/schemas/CaseActionEnum'
        assignee:
          $ref: '#/components/schemas/CaseAssignee'
        feedback:
          description: |
            Feedback that is provided from the party executing the action. This  information will be visible only to the property manager
          items:
            $ref: '#/components/schemas/CaseFeedbackResponse'
          type: array
      type: object
    CaseFeedbackResponse:
      description: |
        Contains the feedback that was provided by a party when changing the status of a case.
      example:
        form_data:
          key: ""
        comment: comment
        id: id
        attachment_refs:
        - attachment_refs
        - attachment_refs
      properties:
        id:
          description: |
            The feedback ID that can be found in the case config
          type: string
        form_data:
          additionalProperties: true
          description: |
            Form data that was provided by the party executing the action.
          type: object
        comment:
          description: comment that was provided in case mode was 'comment'
          type: string
        attachment_refs:
          description: |
            list of IDs of attachments that were provided with the feedback, in case mode was 'comment'
          items:
            type: string
          type: array
      type: object
    CreateCaseCommentRequest:
      description: Request that will create a new comment for a case
      example:
        attachments:
        - ref: ref
          thumbnail: thumbnail
          created: 0
          file_type: file_type
          file_name: file_name
          id: id
          file_sha256: file_sha256
          file_size: 6
          url: url
        - ref: ref
          thumbnail: thumbnail
          created: 0
          file_type: file_type
          file_name: file_name
          id: id
          file_sha256: file_sha256
          file_size: 6
          url: url
        visibility:
        - ref: ref
          role: null
          name: name
          ref_type: ref_type
        - ref: ref
          role: null
          name: name
          ref_type: ref_type
        content: content
      properties:
        content:
          type: string
        attachments:
          description: |
            list of attachments that should be linked to the comment
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        visibility:
          description: |
            List of paries that should have access to the comment
          items:
            $ref: '#/components/schemas/CaseParty'
          type: array
      required:
      - content
      type: object
    CaseReportingEndpointInfo:
      description: |
        Contains necessary information for displaying a publicly available form,  where tenants who don't have a login raise cases.
      example:
        endpoint:
          case_categories:
          - templates:
            - id: id
              priority: 5
            - id: id
              priority: 5
            name:
              key: name
            priority: 1
          - templates:
            - id: id
              priority: 5
            - id: id
              priority: 5
            name:
              key: name
            priority: 1
          code: code
          updated_at: 6
          property_refs:
          - property_refs
          - property_refs
          name: name
          created_at: 0
          active: true
        faqs:
        - question:
            key: question
          answer:
            key: answer
          keywords:
          - keywords
          - keywords
          id: id
        - question:
            key: question
          answer:
            key: answer
          keywords:
          - keywords
          - keywords
          id: id
        templates:
        - access:
          - null
          - null
          name_expression: name_expression
          icon: icon
          created_at: 0
          description:
            key: description
          label:
            key: label
          confirmation_text:
            key: confirmation_text
          updated_at: 6
          info_text:
            key: info_text
          ad_categories:
          - null
          - null
          name: name
          id: id
          custom_inputs:
            layout:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            inputs:
            - propagate_changes: true
              view_label:
                key: view_label
              ephemeral: true
              default_value: default_value
              attributes:
                key: attributes
              id: id
              label:
                key: label
              placeholder:
                key: placeholder
              type: type
              items:
              - items
              - items
              required: true
              target: target
            - propagate_changes: true
              view_label:
                key: view_label
              ephemeral: true
              default_value: default_value
              attributes:
                key: attributes
              id: id
              label:
                key: label
              placeholder:
                key: placeholder
              type: type
              items:
              - items
              - items
              required: true
              target: target
            groups:
            - use_item_group: true
              bottom_divider: true
              top_divider: true
              min_size: 6
              id: id
              label:
                key: label
              type: type
              items:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              info:
                key: info
              target: target
            - use_item_group: true
              bottom_divider: true
              top_divider: true
              min_size: 6
              id: id
              label:
                key: label
              type: type
              items:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              info:
                key: info
              target: target
            validations:
            - expression: expression
              id: id
              message:
                key: message
              target: target
            - expression: expression
              id: id
              message:
                key: message
              target: target
          config:
            reminders:
            - schedule:
              - 2
              - 5
              - 10
              status: null
            - schedule:
              - 2
              - 5
              - 10
              status: null
            automatic_actions:
            - schedule: 1
              action: action
              status: null
            - schedule: 1
              action: action
              status: null
            status_config:
            - feedback:
              - mode: null
                visibility:
                - null
                - null
                form:
                  layout:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  inputs:
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  groups:
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  validations:
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                id: id
              - mode: null
                visibility:
                - null
                - null
                form:
                  layout:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  inputs:
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  groups:
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  validations:
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                id: id
              parties:
              - null
              - null
              action: null
              source_status:
              - null
              - null
              notify:
              - null
              - null
            - feedback:
              - mode: null
                visibility:
                - null
                - null
                form:
                  layout:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  inputs:
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  groups:
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  validations:
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                id: id
              - mode: null
                visibility:
                - null
                - null
                form:
                  layout:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  inputs:
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  groups:
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  validations:
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                id: id
              parties:
              - null
              - null
              action: null
              source_status:
              - null
              - null
              notify:
              - null
              - null
        - access:
          - null
          - null
          name_expression: name_expression
          icon: icon
          created_at: 0
          description:
            key: description
          label:
            key: label
          confirmation_text:
            key: confirmation_text
          updated_at: 6
          info_text:
            key: info_text
          ad_categories:
          - null
          - null
          name: name
          id: id
          custom_inputs:
            layout:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            inputs:
            - propagate_changes: true
              view_label:
                key: view_label
              ephemeral: true
              default_value: default_value
              attributes:
                key: attributes
              id: id
              label:
                key: label
              placeholder:
                key: placeholder
              type: type
              items:
              - items
              - items
              required: true
              target: target
            - propagate_changes: true
              view_label:
                key: view_label
              ephemeral: true
              default_value: default_value
              attributes:
                key: attributes
              id: id
              label:
                key: label
              placeholder:
                key: placeholder
              type: type
              items:
              - items
              - items
              required: true
              target: target
            groups:
            - use_item_group: true
              bottom_divider: true
              top_divider: true
              min_size: 6
              id: id
              label:
                key: label
              type: type
              items:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              info:
                key: info
              target: target
            - use_item_group: true
              bottom_divider: true
              top_divider: true
              min_size: 6
              id: id
              label:
                key: label
              type: type
              items:
              - ref_id: ref_id
                ref_type: ref_type
              - ref_id: ref_id
                ref_type: ref_type
              info:
                key: info
              target: target
            validations:
            - expression: expression
              id: id
              message:
                key: message
              target: target
            - expression: expression
              id: id
              message:
                key: message
              target: target
          config:
            reminders:
            - schedule:
              - 2
              - 5
              - 10
              status: null
            - schedule:
              - 2
              - 5
              - 10
              status: null
            automatic_actions:
            - schedule: 1
              action: action
              status: null
            - schedule: 1
              action: action
              status: null
            status_config:
            - feedback:
              - mode: null
                visibility:
                - null
                - null
                form:
                  layout:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  inputs:
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  groups:
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  validations:
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                id: id
              - mode: null
                visibility:
                - null
                - null
                form:
                  layout:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  inputs:
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  groups:
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  validations:
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                id: id
              parties:
              - null
              - null
              action: null
              source_status:
              - null
              - null
              notify:
              - null
              - null
            - feedback:
              - mode: null
                visibility:
                - null
                - null
                form:
                  layout:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  inputs:
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  groups:
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  validations:
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                id: id
              - mode: null
                visibility:
                - null
                - null
                form:
                  layout:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  inputs:
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  - propagate_changes: true
                    view_label:
                      key: view_label
                    ephemeral: true
                    default_value: default_value
                    attributes:
                      key: attributes
                    id: id
                    label:
                      key: label
                    placeholder:
                      key: placeholder
                    type: type
                    items:
                    - items
                    - items
                    required: true
                    target: target
                  groups:
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  - use_item_group: true
                    bottom_divider: true
                    top_divider: true
                    min_size: 6
                    id: id
                    label:
                      key: label
                    type: type
                    items:
                    - ref_id: ref_id
                      ref_type: ref_type
                    - ref_id: ref_id
                      ref_type: ref_type
                    info:
                      key: info
                    target: target
                  validations:
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                  - expression: expression
                    id: id
                    message:
                      key: message
                    target: target
                id: id
              parties:
              - null
              - null
              action: null
              source_status:
              - null
              - null
              notify:
              - null
              - null
        properties:
        - parent_name: parent_name
          bank_account_ref: bank_account_ref
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          parent_address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          created_at: 5
          external_id: external_id
          type: null
          parent_ref: parent_ref
          updated_at: 5
          owner_ref: owner_ref
          name: name
          details:
            floor: 3A
            area: 120
            rooms: 6
            bedrooms: 2
            bathrooms: 1
            balcony: 1
            construction_year: 2018
            parking: PARKING_SPOT
            floor_type:
            - LAMINATE
            - TILES
            heating_type:
            - CENTRAL_HEATING
            - FLOOR_HEATING
            - AC
            window_type:
            - TRIPLE_PANE
            - DOUBLE_SASH
            furnishing: FULL_FURNISHING
            historic_property: false
            rent: 750
            running_costs: 150
          id: id
          external_source: external_source
        - parent_name: parent_name
          bank_account_ref: bank_account_ref
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          parent_address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          created_at: 5
          external_id: external_id
          type: null
          parent_ref: parent_ref
          updated_at: 5
          owner_ref: owner_ref
          name: name
          details:
            floor: 3A
            area: 120
            rooms: 6
            bedrooms: 2
            bathrooms: 1
            balcony: 1
            construction_year: 2018
            parking: PARKING_SPOT
            floor_type:
            - LAMINATE
            - TILES
            heating_type:
            - CENTRAL_HEATING
            - FLOOR_HEATING
            - AC
            window_type:
            - TRIPLE_PANE
            - DOUBLE_SASH
            furnishing: FULL_FURNISHING
            historic_property: false
            rent: 750
            running_costs: 150
          id: id
          external_source: external_source
      properties:
        endpoint:
          $ref: '#/components/schemas/CaseReportingEndpoint'
        properties:
          items:
            $ref: '#/components/schemas/Property'
          type: array
        templates:
          description: |
            The case templates that can be used to raise a case from this endpoint
          items:
            $ref: '#/components/schemas/CaseTemplate'
          type: array
        faqs:
          description: |
            Optional list of FAQs that should be displayed on the endpoint
          items:
            $ref: '#/components/schemas/FAQEntry'
          type: array
      type: object
    CaseReportingEndpoint:
      description: |
        Contains necessary information for displaying a publicly available form,  where tenants who don't have a login can raise cases.
      example:
        case_categories:
        - templates:
          - id: id
            priority: 5
          - id: id
            priority: 5
          name:
            key: name
          priority: 1
        - templates:
          - id: id
            priority: 5
          - id: id
            priority: 5
          name:
            key: name
          priority: 1
        code: code
        updated_at: 6
        property_refs:
        - property_refs
        - property_refs
        name: name
        created_at: 0
        active: true
      properties:
        code:
          description: |
            The unique code that identifies the endpoint
          type: string
        created_at:
          description: The timestamp of when the endpoint was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the endpoint was last updated
          format: int64
          type: integer
        name:
          description: |
            The name of the endpoint (only used in admin pages)
          type: string
        active:
          description: |
            Whether the endpoint is enabled or not
          type: boolean
        property_refs:
          items:
            description: |
              Optional IDs of the properties for which the endpoint can be used to  raise cases
            type: string
          type: array
        case_categories:
          description: |
            Categories, used to group the templates, in order not to clutter the Case Reporting Endpoint page.
          items:
            $ref: '#/components/schemas/CaseReportingEndpointCategory'
          type: array
      type: object
    CaseReportingEndpointCategory:
      example:
        templates:
        - id: id
          priority: 5
        - id: id
          priority: 5
        name:
          key: name
        priority: 1
      properties:
        name:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        priority:
          description: |
            The priority of the Category, used to decide the order in which to display the categories in the initial Case Reporting Endpoint page.
          format: int32
          type: integer
        templates:
          description: |
            A list of Template objects, that contain the unique IDs of the template and priorities.
          items:
            $ref: '#/components/schemas/CaseReportingEndpointCategory_templates_inner'
          type: array
      type: object
    FormValidationRequest:
      example:
        data:
          key: ""
        source_type: null
        source_id: source_id
      properties:
        source_type:
          $ref: '#/components/schemas/FormSourceType'
        source_id:
          description: the ID of the source of the form that will be validated
          type: string
        data:
          additionalProperties: true
          description: the data that will be validated
          type: object
      type: object
    FormSourceType:
      enum:
      - appointment
      - case
      - case_feedback
      - document_generation
      - report
      - workflow
      type: string
    FormValidationResponse:
      example:
        valid: true
        errors:
        - message:
            key: message
          target: target
        - message:
            key: message
          target: target
      properties:
        valid:
          description: "if true, the data provided by the user is valid"
          type: boolean
        errors:
          description: the errors that were found in the data provided by the user
          items:
            $ref: '#/components/schemas/FormValidationError'
          type: array
      type: object
    FormValidationError:
      description: a custom validation that is used to validate data provided by the
        user
      example:
        message:
          key: message
        target: target
      properties:
        message:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        target:
          description: the index of the input that failed validation (nesting is supported
            via dot notation)
          type: string
      type: object
    EmailValidationRequest:
      example:
        email: email
      properties:
        email:
          description: the email address that should be validated
          type: string
      type: object
    EmailValidationResponse:
      example:
        valid: true
        error: error
      properties:
        valid:
          description: "if true, the data provided by the user is valid"
          type: boolean
        error:
          description: the errors that were found in the email provided by the user
          type: string
      type: object
    CreateOrUpdateBankAccountRequest:
      description: The data required to create a new bank account
      example:
        account_holder: account_holder
        iban: iban
        bank_name: bank_name
        description: description
        bic: bic
      properties:
        account_holder:
          description: The name of the account holder (required)
          type: string
        iban:
          description: The IBAN of the bank account (required)
          type: string
        bic:
          description: The BIC of the bank account (optional)
          type: string
        bank_name:
          description: The name of the bank (optional)
          type: string
        description:
          description: "A user friendly label, used to identify the account (optional)"
          type: string
      required:
      - account_holder
      - iban
      type: object
    BankAccount:
      description: Detailed information about a bank account
      example:
        updated_at: 6
        account_holder: account_holder
        iban: iban
        bank_name: bank_name
        created_at: 0
        description: description
        external_id: external_id
        id: id
        bic: bic
        external_source: external_source
      properties:
        id:
          description: The ID of the bank account (auto-generated)
          type: string
        external_id:
          description: "optional external ID, in case acount was created via backend\
            \ integration"
          type: string
        external_source:
          description: "optional external source, in case acount was created via backend\
            \ integration"
          type: string
        created_at:
          description: The timestamp of when the account was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the account was last updated
          format: int64
          type: integer
        account_holder:
          description: The name of the account holder (required)
          type: string
        iban:
          description: The IBAN of the bank account (required)
          type: string
        bic:
          description: The BIC of the bank account (optional)
          type: string
        bank_name:
          description: The name of the bank (optional)
          type: string
        description:
          description: "An optional user friendly label, used to identify the account\
            \ (optional)"
          type: string
      type: object
    QueryBankAccountsRequest:
      description: The data required to query bank accounts
      example:
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
      type: object
    QueryBankAccountsResponse:
      description: Result of a bank account query
      example:
        total: 1
        offset: 6
        limit: 0
        bank_accounts:
        - updated_at: 6
          account_holder: account_holder
          iban: iban
          bank_name: bank_name
          created_at: 0
          description: description
          external_id: external_id
          id: id
          bic: bic
          external_source: external_source
        - updated_at: 6
          account_holder: account_holder
          iban: iban
          bank_name: bank_name
          created_at: 0
          description: description
          external_id: external_id
          id: id
          bic: bic
          external_source: external_source
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
        bank_accounts:
          items:
            $ref: '#/components/schemas/BankAccount'
          type: array
      type: object
    CreateOrUpdateAppointmentTemplateRequest:
      example:
        form:
          layout:
          - ref_id: ref_id
            ref_type: ref_type
          - ref_id: ref_id
            ref_type: ref_type
          inputs:
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          groups:
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          validations:
          - expression: expression
            id: id
            message:
              key: message
            target: target
          - expression: expression
            id: id
            message:
              key: message
            target: target
        name_expression: name_expression
        name: name
        description: description
        schedule_before: 0
      properties:
        name:
          description: The name of the appointment template
          type: string
        name_expression:
          description: |
            The expression that is used to generate the name of the appointment from the data that the user has entered when booking the appointment
          type: string
        description:
          description: The description of the appointment template
          type: string
        schedule_before:
          description: |
            Constrain the minimum amount of time between the scheduling and the beginning of the appointment in minutes. Set this to 10 and people won't be able to schedule an appointment that's in less than 10 minutes.
          format: int32
          type: integer
        form:
          $ref: '#/components/schemas/CustomForm'
      type: object
    QueryAppointmentTemplatesRequest:
      example:
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
      type: object
    CreateOrUpdateAppointmentScheduleRequest:
      example:
        template: template
        gap_duration: 6
        slot_duration: 0
        color: color
        name: name
        description:
          key: description
        windows:
        - start_time: 5
          slots:
          - start_time: 7
            end_time: 9
            appointment:
              start_time: 4
              code: code
              updated_at: 2
              data:
                key: ""
              contact:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
              end_time: 7
              name: name
              created_at: 3
              id: id
          - start_time: 7
            end_time: 9
            appointment:
              start_time: 4
              code: code
              updated_at: 2
              data:
                key: ""
              contact:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
              end_time: 7
              name: name
              created_at: 3
              id: id
          end_time: 2
          id: id
        - start_time: 5
          slots:
          - start_time: 7
            end_time: 9
            appointment:
              start_time: 4
              code: code
              updated_at: 2
              data:
                key: ""
              contact:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
              end_time: 7
              name: name
              created_at: 3
              id: id
          - start_time: 7
            end_time: 9
            appointment:
              start_time: 4
              code: code
              updated_at: 2
              data:
                key: ""
              contact:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
              end_time: 7
              name: name
              created_at: 3
              id: id
          end_time: 2
          id: id
      properties:
        name:
          description: The name of the appointment window
          type: string
        description:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        template:
          description: The reference to the appointment template that is used to determine
            what data to collect when booking a slot.
          type: string
        slot_duration:
          description: The duration of the appointment window in minutes
          format: int32
          type: integer
        gap_duration:
          description: The duration of the gap between appointments in minutes
          format: int32
          type: integer
        color:
          description: The color to use when displaying the appointment window in
            a calendar view
          type: string
        windows:
          description: The appointment windows
          items:
            $ref: '#/components/schemas/AppointmentWindow'
          type: array
      type: object
    QueryAppointmentSchedulesRequest:
      example:
        start_time: 0
        offset: 1
        limit: 6
      properties:
        start_time:
          description: The timestamp of the beginning of the time range
          format: int64
          type: integer
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
      type: object
    UpdateCaseRequest:
      description: All attributes of a case that can be updated
      example:
        property_address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        property_ref: property_ref
        data: data
      properties:
        property_ref:
          description: Reference to property
          type: string
        property_address:
          $ref: '#/components/schemas/Address'
        data:
          description: |
            Input provided by the user when raising the case as a key-value map, serialized as JSON.
          type: string
      type: object
    AssignCaseRequest:
      description: input used to send out case information to service provider
      example:
        contact_ref: contact_ref
        private_message: true
        language: language
        message: message
        attachment_refs:
        - attachment_refs
        - attachment_refs
      properties:
        contact_ref:
          type: string
        language:
          type: string
        message:
          description: a message to be included in the notification to the service
            provider
          type: string
        private_message:
          description: |
            indicates if the message should be visible to the tenant or not
          type: boolean
        attachment_refs:
          items:
            type: string
          type: array
      type: object
    UnssignCaseRequest:
      description: Request used to remove a service provider from a case
      example:
        party:
          ref: ref
          role: null
          name: name
          ref_type: ref_type
      properties:
        party:
          $ref: '#/components/schemas/CaseParty'
      type: object
    QueryCasesRequest:
      description: Request used to get cases by a user
      example:
        archived: true
      properties:
        archived:
          description: "if true, only archived cases will be returned"
          type: boolean
      type: object
    CreateOrUpdateCaseReportingEndpointRequest:
      example:
        case_categories:
        - templates:
          - id: id
            priority: 5
          - id: id
            priority: 5
          name:
            key: name
          priority: 1
        - templates:
          - id: id
            priority: 5
          - id: id
            priority: 5
          name:
            key: name
          priority: 1
        property_refs:
        - property_refs
        - property_refs
        name: name
        active: true
      properties:
        name:
          description: |
            The name of the endpoint (only used in admin pages)
          type: string
        active:
          description: |
            Whether the endpoint is enabled or not
          type: boolean
        property_refs:
          description: |
            The IDs of the properties for which the endpoint can be used to raise cases
          items:
            type: string
          type: array
        case_categories:
          description: |
            Categories, used to group the templates, in order not to clutter the Case Reporting Endpoint page.
          items:
            $ref: '#/components/schemas/CaseReportingEndpointCategory'
          type: array
      type: object
    QueryCaseReportingEndpointsRequest:
      example:
        limit: 0
      properties:
        limit:
          description: |
            The maximum number of case endpoints to return
          type: integer
      type: object
    QueryCaseReportingEndpointsResponse:
      example:
        endpoints:
        - case_categories:
          - templates:
            - id: id
              priority: 5
            - id: id
              priority: 5
            name:
              key: name
            priority: 1
          - templates:
            - id: id
              priority: 5
            - id: id
              priority: 5
            name:
              key: name
            priority: 1
          code: code
          updated_at: 6
          property_refs:
          - property_refs
          - property_refs
          name: name
          created_at: 0
          active: true
        - case_categories:
          - templates:
            - id: id
              priority: 5
            - id: id
              priority: 5
            name:
              key: name
            priority: 1
          - templates:
            - id: id
              priority: 5
            - id: id
              priority: 5
            name:
              key: name
            priority: 1
          code: code
          updated_at: 6
          property_refs:
          - property_refs
          - property_refs
          name: name
          created_at: 0
          active: true
      properties:
        endpoints:
          items:
            $ref: '#/components/schemas/CaseReportingEndpoint'
          type: array
      type: object
    GenerateCaseReportingEndpointNoticeRequest:
      example:
        language: language
      properties:
        language:
          description: |
            The language in which the PDF should be generated
          type: string
      type: object
    CreateOrUpdateCaseTemplateRequest:
      example:
        access:
        - null
        - null
        name_expression: name_expression
        info_text:
          key: info_text
        ad_categories:
        - null
        - null
        name: name
        icon: icon
        description:
          key: description
        label:
          key: label
        custom_inputs:
          layout:
          - ref_id: ref_id
            ref_type: ref_type
          - ref_id: ref_id
            ref_type: ref_type
          inputs:
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          groups:
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          validations:
          - expression: expression
            id: id
            message:
              key: message
            target: target
          - expression: expression
            id: id
            message:
              key: message
            target: target
        config:
          reminders:
          - schedule:
            - 2
            - 5
            - 10
            status: null
          - schedule:
            - 2
            - 5
            - 10
            status: null
          automatic_actions:
          - schedule: 1
            action: action
            status: null
          - schedule: 1
            action: action
            status: null
          status_config:
          - feedback:
            - mode: null
              visibility:
              - null
              - null
              form:
                layout:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                inputs:
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                groups:
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                validations:
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
              id: id
            - mode: null
              visibility:
              - null
              - null
              form:
                layout:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                inputs:
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                groups:
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                validations:
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
              id: id
            parties:
            - null
            - null
            action: null
            source_status:
            - null
            - null
            notify:
            - null
            - null
          - feedback:
            - mode: null
              visibility:
              - null
              - null
              form:
                layout:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                inputs:
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                groups:
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                validations:
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
              id: id
            - mode: null
              visibility:
              - null
              - null
              form:
                layout:
                - ref_id: ref_id
                  ref_type: ref_type
                - ref_id: ref_id
                  ref_type: ref_type
                inputs:
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                - propagate_changes: true
                  view_label:
                    key: view_label
                  ephemeral: true
                  default_value: default_value
                  attributes:
                    key: attributes
                  id: id
                  label:
                    key: label
                  placeholder:
                    key: placeholder
                  type: type
                  items:
                  - items
                  - items
                  required: true
                  target: target
                groups:
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                - use_item_group: true
                  bottom_divider: true
                  top_divider: true
                  min_size: 6
                  id: id
                  label:
                    key: label
                  type: type
                  items:
                  - ref_id: ref_id
                    ref_type: ref_type
                  - ref_id: ref_id
                    ref_type: ref_type
                  info:
                    key: info
                  target: target
                validations:
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
                - expression: expression
                  id: id
                  message:
                    key: message
                  target: target
              id: id
            parties:
            - null
            - null
            action: null
            source_status:
            - null
            - null
            notify:
            - null
            - null
        confirmation_text:
          key: confirmation_text
      properties:
        name:
          description: |
            The name of the case template
          type: string
        access:
          description: |
            The list of access possibilities for the template. This is used to determine  in which parts of the webapp the template can be used.
          items:
            $ref: '#/components/schemas/CaseTemplateAccessibility'
          type: array
        name_expression:
          description: |
            Optional JS expression used to generate the name of the actual case
          type: string
        label:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        description:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        info_text:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        icon:
          description: |
            The font-awesome icon to use for this template
          type: string
        custom_inputs:
          $ref: '#/components/schemas/CustomForm'
        config:
          $ref: '#/components/schemas/CaseConfig'
        ad_categories:
          items:
            $ref: '#/components/schemas/CaseTemplateAdCategoryEnum'
          type: array
        confirmation_text:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
      required:
      - access
      - custom_inputs
      - name
      type: object
    QueryCaseTemplatesRequest:
      example:
        limit: 0
      properties:
        limit:
          description: |
            The maximum number of case templates to return.
          type: integer
      type: object
    ConnectorCredentials:
      description: Connector credentials
      example:
        last_access: 0
        api_key: api_key
        api_secret: api_secret
      properties:
        api_key:
          description: api key of the connector
          type: string
        api_secret:
          description: api secret of the connector
          type: string
        last_access:
          description: timestamp of the last access of the credentials
          format: int64
          type: integer
      required:
      - api_key
      - api_secret
      - last_access
      type: object
    CreateConnectorCredentialsRequest:
      description: Request used to create connector credentials
      example:
        name: name
      properties:
        name:
          description: name of the connector
          type: string
      type: object
    ConnectorConfig:
      example:
        updated_at: 6
        ping_time: ping_time
        name: name
        description: description
        created_at: 0
        sync_time: sync_time
        enabled: true
      properties:
        name:
          description: |
            A descriptive and unique name of the connector also used as an identifier.
          type: string
        enabled:
          description: "indicates whether the connector should push data or not. While\
            \ disabled the connector will not attempt to push data to the backend,\
            \ however, it will continue to ping the backend to check for updates to\
            \ the config."
          type: boolean
        description:
          description: a short description of the connector
          type: string
        ping_time:
          description: |
            cron expression that tells the connector how often to ping the server and retrieve the config
          type: string
        sync_time:
          description: |
            cron expression that tells the connector how often to push data
          type: string
        created_at:
          description: The moment of creation of this entity - unix timestamp
          format: int64
          type: integer
        updated_at:
          description: The moment this entity was last updated - unix timestamp
          format: int64
          type: integer
      required:
      - created_at
      - name
      - ping_time
      - sync_time
      - updated_at
      type: object
    CreateConnectorConfigRequest:
      description: Request used to update a connector config
      example:
        ping_time: ping_time
        name: name
        description: description
        sync_time: sync_time
        enabled: true
      properties:
        name:
          description: |
            A descriptive and unique name of the connector also used as an identifier.
          type: string
        enabled:
          description: |
            indicates whether the connector should push data or not. While disabled the connector will not attempt to push data to the backend, however, it will continue to ping the backend to check for updates to the config.
          type: boolean
        description:
          description: short description of the connector
          type: string
        sync_time:
          description: |
            cron expression that tells the connector how often to sync data
          type: string
        ping_time:
          description: |
            cron expression that tells the connector how often to ping the server and retrieve the config
          type: string
      required:
      - name
      - ping_time
      - sync_time
      type: object
    UpdateConnectorConfigRequest:
      description: Request used to update a connector config
      example:
        ping_time: ping_time
        description: description
        sync_time: sync_time
        enabled: true
      properties:
        enabled:
          description: |
            indicates whether the connector should push data or not. While disabled the connector will not attempt to push data to the backend, however, it will continue to ping the backend to check for updates to the config.
          type: boolean
        description:
          description: short description of the connector
          type: string
        sync_time:
          description: |
            cron expression that tells the connector how often to sync data
          type: string
        ping_time:
          description: |
            cron expression that tells the connector how often to ping the server and retrieve the config
          type: string
      required:
      - ping_time
      - sync_time
      type: object
    LogRequest:
      description: "Log messages, comming from the connector."
      example:
        logs:
        - logs
        - logs
      properties:
        logs:
          description: An array of messages to log.
          items:
            description: The messages to log.
            type: string
          type: array
      type: object
    ConnectorEntityStats:
      example:
        entity_type: null
        count: 0
      properties:
        entity_type:
          $ref: '#/components/schemas/ConnectorEntity'
        count:
          description: |
            The amount of entities of the certain type that were added by the connector.
          format: int32
          type: integer
      type: object
    ConnectorEntity:
      enum:
      - BANK_ACCOUNT
      - PROPERTY
      - PROPERTY_OWNER
      - TENANT
      - TENANCY
      - SERVICE_PROVIDER
      type: string
    ConnectorQuery:
      description: |
        This is the query that is sent to be ran by the client and return data from their database.
      example:
        entity_limit: 6
        updated_at: 5
        process_script: process_script
        updated_last: 1
        name: name
        connector_ref: connector_ref
        statement: statement
        description: description
        created_at: 5
        id: id
        priority: 0
        enabled: true
      properties:
        id:
          description: The UID of the query
          type: string
        name:
          description: |
            A unique and descriptive name given to the query.
          type: string
        description:
          description: The name to display in the webapp.
          type: string
        connector_ref:
          description: The Name of the connector this query belongs to.
          type: string
        enabled:
          description: Whether the Query is enabled and should be used to sync data
          type: boolean
        priority:
          description: |
            The priority used to tell the order in which to execute the queries
          format: int32
          type: integer
        entity_limit:
          description: The amount of entities to query for at once.
          format: int32
          type: integer
        statement:
          description: |
            The statement to be executed by the connector client against their DB.
          type: string
        process_script:
          description: |
            JavaScript code that processes the response into an object that can be understood by the backend code and upserted into the database.
          type: string
        updated_last:
          description: |
            A timestamp of the last updated object. This should be updated by the process script, to track the last update to an object we performed.
          format: int64
          type: integer
        created_at:
          description: The moment of creation of this entity - unix timestamp
          format: int64
          type: integer
        updated_at:
          description: The moment this entity was last updated - unix timestamp
          format: int64
          type: integer
      required:
      - connector_ref
      - created_at
      - entity_limit
      - id
      - name
      - priority
      - process_script
      - statement
      - updated_at
      - updated_last
      type: object
    CreateOrUpdateConnectorQueryRequest:
      example:
        entity_limit: 6
        process_script: process_script
        name: name
        connector_ref: connector_ref
        statement: statement
        description: description
        priority: 0
        enabled: true
      properties:
        name:
          description: |
            A unique and descriptive name given to the query.
          type: string
        description:
          description: The name to display in the webapp.
          type: string
        connector_ref:
          description: The Name of the connector this query belongs to.
          type: string
        enabled:
          description: Whether the Query is enabled and should be used to sync data
          type: boolean
        priority:
          description: |
            The priority used to tell the order in which to execute the queries
          format: int32
          type: integer
        entity_limit:
          description: The amount of entities to query for at once.
          format: int32
          type: integer
        statement:
          description: |
            The statement to be executed by the connector client against their DB.
          type: string
        process_script:
          description: |
            JavaScript code that processes the response into an object that can be understood by the backend code and upserted into the database.
          type: string
      required:
      - connector_ref
      - entity_limit
      - name
      - priority
      - process_script
      - statement
      type: object
    ConnectorSyncRequest:
      description: |
        upload data to be processed by the processing script
      example:
        query_id: query_id
        data: data
      properties:
        query_id:
          description: the query this data belongs to
          type: string
        data:
          description: the data to be provided to the mapping script
          format: byte
          type: string
      required:
      - data
      - query_id
      type: object
    CreateOrUpdateCustomerScriptRequest:
      example:
        scope: null
        name: name
        description: description
        script: script
      properties:
        name:
          description: |
            The function name under which the script will be available in the scripting environment
          type: string
        description:
          description: |
            A description of the script
          type: string
        scope:
          $ref: '#/components/schemas/CustomerScriptScope'
        script:
          description: |
            The actual JS script code
          type: string
      type: object
    CustomerScriptScope:
      enum:
      - GLOBAL
      - DOCUMENT
      - WORKFLOW
      - REPORT
      - VALIDATION
      type: string
    CustomerScript:
      example:
        updated_at: 6
        scope: null
        name: name
        created_at: 0
        description: description
        id: id
        script: script
      properties:
        id:
          type: string
        created_at:
          description: The timestamp of when the script was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the script was last updated
          format: int64
          type: integer
        name:
          description: |
            The function name under which the script will be available in the scripting environment
          type: string
        description:
          description: |
            A description of the script
          type: string
        scope:
          $ref: '#/components/schemas/CustomerScriptScope'
        script:
          description: |
            The actual JS script code
          type: string
      type: object
    CreateDocumentGenerationRequest:
      description: |
        Start a new document generation based on the given template. This will also trigger the initialisation of the inputs, defined in the template and store the result in the new generation object.
      example:
        template: template
        init_data: init_data
      properties:
        template:
          description: The template based on which a document shall be generated
          type: string
        init_data:
          description: |
            Optional initialisation data for the inputs of the template. If not set, the default values of the inputs will be used. To be provided as JSON serialised object, where the values are NOT JSON serialised themselves.
          type: string
      type: object
    DocumentGeneration:
      description: |
        The status and content of a document generation
      example:
        template: template
        input_data: input_data
        archived: true
        updated_at: 6
        data: data
        esignature_triggered: true
        pdf_generation_date: 1
        name: name
        created_at: 0
        pdf_url: pdf_url
        id: id
      properties:
        id:
          description: The unique ID of the document generation
          type: string
        created_at:
          description: The date the document generation was created
          format: int64
          type: integer
        updated_at:
          description: The date the document generation was last updated
          format: int64
          type: integer
        archived:
          description: True if the document generation has been archived
          type: boolean
        template:
          description: |
            The ID of the template used to generate the document
          type: string
        name:
          description: |
            The name of the document, as computed using the name expression of the template
          type: string
        input_data:
          description: "The data from the template custom form, serialised as JSON"
          type: string
        data:
          description: |
            Optional EditorJS data used to generate the document (JSON of the data object)
          type: string
        pdf_url:
          description: The reference to the generated document
          type: string
        pdf_generation_date:
          description: The date and time the document was generated
          format: int64
          type: integer
        esignature_triggered:
          description: True if the document was sent to the signing service
          type: boolean
      type: object
    QueryDocumentGenerationsRequest:
      description: |
        Request a list of document generations
      example:
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
      type: object
    QueryDocumentGenerationsResponse:
      description: Result of a document generation query
      example:
        total: 1
        offset: 6
        documents:
        - template: template
          input_data: input_data
          archived: true
          updated_at: 6
          data: data
          esignature_triggered: true
          pdf_generation_date: 1
          name: name
          created_at: 0
          pdf_url: pdf_url
          id: id
        - template: template
          input_data: input_data
          archived: true
          updated_at: 6
          data: data
          esignature_triggered: true
          pdf_generation_date: 1
          name: name
          created_at: 0
          pdf_url: pdf_url
          id: id
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
        documents:
          items:
            $ref: '#/components/schemas/DocumentGeneration'
          type: array
      type: object
    DocumentPDFResponse:
      description: link to generated document
      example:
        document_url: document_url
      properties:
        document_url:
          description: The URL of the generated document
          type: string
      type: object
    TipTapDocument:
      description: A document that can be edited in a TipTap editor
      example:
        data: data
      properties:
        data:
          description: JSON formatted data
          type: string
      type: object
    DocumentESignatureRequest:
      description: |
        The request to start a document signing process
      example:
        signers:
        - last_name: last_name
          phone_number: phone_number
          locale: locale
          first_name: first_name
          email: email
          status: status
        - last_name: last_name
          phone_number: phone_number
          locale: locale
          first_name: first_name
          email: email
          status: status
        message: message
        expiration_date: 0
        qes: true
      properties:
        signers:
          description: The list of signers
          items:
            $ref: '#/components/schemas/DocumentSigner'
          type: array
        message:
          description: The message to be included in the invitation to the signers
          type: string
        expiration_date:
          description: The date the document signing request expires
          format: int64
          type: integer
        qes:
          description: Whether the document shall be signed using QES
          type: boolean
      type: object
    DocumentSigner:
      description: |
        The signer of a document
      example:
        last_name: last_name
        phone_number: phone_number
        locale: locale
        first_name: first_name
        email: email
        status: status
      properties:
        first_name:
          description: The first name of the signer
          type: string
        last_name:
          description: The last name of the signer
          type: string
        email:
          description: The email of the signer
          type: string
        phone_number:
          description: The phone number of the signer
          type: string
        locale:
          description: The locale of the signer
          type: string
        status:
          description: Indicates if the signer has signed the documenт
          type: string
      type: object
    DocumentESignatureStatus:
      description: |
        The status of a document eSignature request
      example:
        creation_time: 0
        signers:
        - last_name: last_name
          phone_number: phone_number
          locale: locale
          first_name: first_name
          email: email
          status: status
        - last_name: last_name
          phone_number: phone_number
          locale: locale
          first_name: first_name
          email: email
          status: status
        signed_doc_ref: signed_doc_ref
        expiration_time: 6
        signed_doc_audit_ref: signed_doc_audit_ref
        id: id
        status: status
      properties:
        id:
          description: The unique ID of the document signing request
          type: string
        creation_time:
          description: The date the document signing request was created
          format: int64
          type: integer
        expiration_time:
          description: The date the document signing request expires
          format: int64
          type: integer
        status:
          description: The status of the document signing process
          type: string
        signers:
          description: The list of signers
          items:
            $ref: '#/components/schemas/DocumentSigner'
          type: array
        signed_doc_ref:
          description: |
            The reference to the signed document, once all signatures are completed (link to attachment)
          type: string
        signed_doc_audit_ref:
          description: |
            The reference to the signed document audit, once all signatures are completed (link to attachment)
          type: string
      type: object
    CreateOrUpdateDocumentTemplateRequest:
      description: |
        Create or update a document template
      example:
        placeholders_script: placeholders_script
        name_expression: name_expression
        inputs:
          layout:
          - ref_id: ref_id
            ref_type: ref_type
          - ref_id: ref_id
            ref_type: ref_type
          inputs:
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          groups:
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          validations:
          - expression: expression
            id: id
            message:
              key: message
            target: target
          - expression: expression
            id: id
            message:
              key: message
            target: target
        name: name
        options:
          allow_text_edit: true
          include_page_numbers: true
          include_footer_branding: true
        description: description
        content: content
        signatures:
          signers:
          - contact_data:
              address:
                line1: 1 ZestLabs Blvd
                line2: CSS District
                city: Mannheim
                postcode: 680001
                province: Baden-Wuerttemberg
                country: Germany
              last_name: last_name
              company: company
              phone_number: phone_number
              id: id
              title: title
              first_name: first_name
              email: email
            contact_data_expression: contact_data_expression
            repeated: true
          - contact_data:
              address:
                line1: 1 ZestLabs Blvd
                line2: CSS District
                city: Mannheim
                postcode: 680001
                province: Baden-Wuerttemberg
                country: Germany
              last_name: last_name
              company: company
              phone_number: phone_number
              id: id
              title: title
              first_name: first_name
              email: email
            contact_data_expression: contact_data_expression
            repeated: true
          custom_message: custom_message
          expiration_days: 0
          esignatures_enabled: true
      properties:
        name:
          description: The name of the template
          type: string
        description:
          description: A description of the template
          type: string
        options:
          $ref: '#/components/schemas/DocumentTemplateOptions'
        name_expression:
          description: |
            An optional JS expression to be used to compute the name of the template. If not set, the name of the template will be used for new documents.
          type: string
        content:
          description: "The source of the template, used to generate the document"
          type: string
        inputs:
          $ref: '#/components/schemas/CustomForm'
        placeholders_script:
          description: The script we run to generate the object used in the template
          type: string
        signatures:
          $ref: '#/components/schemas/DocumentTemplateSignatureConfguration'
      type: object
    DocumentTemplateOptions:
      description: |
        Additional options for a document template
      example:
        allow_text_edit: true
        include_page_numbers: true
        include_footer_branding: true
      properties:
        allow_text_edit:
          description: True if the generated document may be edited by the user
          type: boolean
        include_footer_branding:
          description: |
            True if the footer branding should be included in the document PDF
          type: boolean
        include_page_numbers:
          description: True if page numbers should be included in the document PDF
          type: boolean
      type: object
    DocumentTemplateSignatureConfguration:
      description: |
        The configuration for electronic signatures
      example:
        signers:
        - contact_data:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
          contact_data_expression: contact_data_expression
          repeated: true
        - contact_data:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
          contact_data_expression: contact_data_expression
          repeated: true
        custom_message: custom_message
        expiration_days: 0
        esignatures_enabled: true
      properties:
        signers:
          description: The list of signers of the document
          items:
            $ref: '#/components/schemas/DocumentTemplateSignerDefinition'
          type: array
        esignatures_enabled:
          description: True if electronic signatures are enabled for the template
          type: boolean
        expiration_days:
          description: |
            The number of days after which the signature request expires. If not specified, the default value is 7 days.
          format: int32
          type: integer
        custom_message:
          description: |
            A custom message to be included in the signature request. If not specified, the default message is used.
          type: string
      type: object
    DocumentTemplateSignerDefinition:
      description: |
        Indicates where to get data to generate info of a signer
      example:
        contact_data:
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          last_name: last_name
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
        contact_data_expression: contact_data_expression
        repeated: true
      properties:
        contact_data:
          $ref: '#/components/schemas/ContactData'
        contact_data_expression:
          description: JS expression to compute the contact data of the signer
          type: string
        repeated:
          description: |
            If set to true, the signer definition will be repeated for each value of the name and contract data expressions.
          type: boolean
      type: object
    DocumentTemplate:
      description: |
        A template for generating documents
      example:
        placeholders_script: placeholders_script
        name_expression: name_expression
        inputs:
          layout:
          - ref_id: ref_id
            ref_type: ref_type
          - ref_id: ref_id
            ref_type: ref_type
          inputs:
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          groups:
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          validations:
          - expression: expression
            id: id
            message:
              key: message
            target: target
          - expression: expression
            id: id
            message:
              key: message
            target: target
        name: name
        options:
          allow_text_edit: true
          include_page_numbers: true
          include_footer_branding: true
        description: description
        id: id
        content: content
        signatures:
          signers:
          - contact_data:
              address:
                line1: 1 ZestLabs Blvd
                line2: CSS District
                city: Mannheim
                postcode: 680001
                province: Baden-Wuerttemberg
                country: Germany
              last_name: last_name
              company: company
              phone_number: phone_number
              id: id
              title: title
              first_name: first_name
              email: email
            contact_data_expression: contact_data_expression
            repeated: true
          - contact_data:
              address:
                line1: 1 ZestLabs Blvd
                line2: CSS District
                city: Mannheim
                postcode: 680001
                province: Baden-Wuerttemberg
                country: Germany
              last_name: last_name
              company: company
              phone_number: phone_number
              id: id
              title: title
              first_name: first_name
              email: email
            contact_data_expression: contact_data_expression
            repeated: true
          custom_message: custom_message
          expiration_days: 0
          esignatures_enabled: true
      properties:
        id:
          description: The unique ID of the template
          type: string
        name:
          description: The name of the template
          type: string
        description:
          description: A description of the template
          type: string
        options:
          $ref: '#/components/schemas/DocumentTemplateOptions'
        name_expression:
          description: |
            An optional JS expression to be used to compute the name of the template. If not set, the name of the template will be used for new documents.
          type: string
        content:
          description: "The source of the template, used to generate the document"
          type: string
        inputs:
          $ref: '#/components/schemas/CustomForm'
        placeholders_script:
          description: The script we run to generate the object used in the template
          type: string
        signatures:
          $ref: '#/components/schemas/DocumentTemplateSignatureConfguration'
      type: object
    QueryDocumentsRequest:
      description: |
        Attributes needed for querying document repository entries
      example:
        ref_id: ref_id
        public: true
        offset: 6
        name: name
        limit: 0
        ref_type: null
      properties:
        ref_id:
          description: The ID of the entity for which the documents are uploaded
          type: string
        ref_type:
          $ref: '#/components/schemas/DocumentRefTypeEnum'
        name:
          description: The name of the document for which to query
          type: string
        public:
          description: "Indicator, controlling whether the document is visible to\
            \ tenants"
          type: boolean
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
      type: object
    DocumentRefTypeEnum:
      enum:
      - property
      - static
      type: string
    Document:
      description: |
        A single document uploaded in the document repository or for a specific property
      example:
        path: path
        updated_at: 6
        public: true
        attachment:
          ref: ref
          thumbnail: thumbnail
          created: 0
          file_type: file_type
          file_name: file_name
          id: id
          file_sha256: file_sha256
          file_size: 6
          url: url
        name: name
        created_at: 0
        id: id
      properties:
        id:
          description: "the unique ID of the document, generated upon upload"
          type: string
        created_at:
          description: The date the document was created
          format: int64
          type: integer
        updated_at:
          description: The date the document was last updated
          format: int64
          type: integer
        name:
          description: "the name of the document, as displayed to the user"
          type: string
        path:
          description: optional path that can be used to nest documents in folder
            like structures
          type: string
        public:
          description: |
            depending on the reference type of a document, public can mean that it is  visible to tenants or service providers
          type: boolean
        attachment:
          $ref: '#/components/schemas/Attachment'
      type: object
    CreateDocumentRequest:
      description: |
        Attributes needed for creating a document uploaded in the system
      example:
        ref_id: ref_id
        path: path
        public: true
        name: name
        attachment_ref: attachment_ref
        ref_type: null
      properties:
        ref_type:
          $ref: '#/components/schemas/DocumentRefTypeEnum'
        ref_id:
          description: |
            The ID of the entity for which the document is uploaded. Can be empty, if the  reference type is 'static'.
          type: string
        attachment_ref:
          description: The ID of the already uploaded attachment
          type: string
        name:
          description: The name of the document entry
          type: string
        path:
          description: Optional path that can be used to nest documents in folder
            like structures
          type: string
        public:
          description: |
            Indicator, controlling whether tenants can see the document (only relevant for  reference type 'property')
          type: boolean
      type: object
    UpdateDocumentRequest:
      description: |
        Attributes needed for creating or updating document repository entries
      example:
        path: path
        public: true
        name: name
      properties:
        name:
          description: The name of the document entry
          type: string
        path:
          description: The relative folder path of the document
          type: string
        public:
          description: "Indicator, controlling whether tenants can see the document"
          type: boolean
      type: object
    QueryExternalUsersResponse:
      example:
        users:
        - user_role: null
          user_id: user_id
          contact_data:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
        - user_role: null
          user_id: user_id
          contact_data:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
      properties:
        users:
          items:
            $ref: '#/components/schemas/UserReference'
          type: array
      type: object
    UserReference:
      description: Contains information about a user referenced in other entities
      example:
        user_role: null
        user_id: user_id
        contact_data:
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          last_name: last_name
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
      properties:
        user_id:
          description: "The ID of the user, can be undefined, if user is not registered,\
            \ or was already deleted"
          type: string
        user_role:
          $ref: '#/components/schemas/UserTypeEnum'
        contact_data:
          $ref: '#/components/schemas/ContactData'
      type: object
    UserTypeEnum:
      enum:
      - ANY
      - TENANT
      - MANAGER
      - SERVICE_PROVIDER
      - AUTOMATION
      type: string
    ContactData:
      description: a common set of attributes used to identify a person or a company
      example:
        address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        last_name: last_name
        company: company
        phone_number: phone_number
        id: id
        title: title
        first_name: first_name
        email: email
      properties:
        id:
          description: "optional ID referencing another existing entity (e.g. Tenant,\
            \ Owner, etc.)"
          type: string
        title:
          description: "the title of the party (e.g. Mr, Mrs, Company, etc.)"
          type: string
        first_name:
          description: |
            First name(s) of the contact. In case of a company, this is the first name of the contact person within the company.
          type: string
        last_name:
          description: |
            Last name of the contact. In case of a company, this is the last name of the contact person within the company.
          type: string
        company:
          description: |
            Name of the company. Only used in case contact is a company, otherwise this  field should be left empty.
          type: string
        email:
          description: optional email of the party
          type: string
        phone_number:
          description: optional phone number of the party
          type: string
        address:
          $ref: '#/components/schemas/Address'
      type: object
    Address:
      description: "Address is the physical address of a property, a person, or an\
        \ organization"
      example:
        line1: 1 ZestLabs Blvd
        line2: CSS District
        city: Mannheim
        postcode: 680001
        province: Baden-Wuerttemberg
        country: Germany
      properties:
        line1:
          type: string
        line2:
          type: string
        city:
          type: string
        postcode:
          type: string
        province:
          type: string
        country:
          type: string
      type: object
    QueryExternalUserCasesResponse:
      example:
        cases:
        - template: template
          comments:
          - deleted: true
            attachments:
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            updated_at: 2
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 5
            id: id
            content: content
          - deleted: true
            attachments:
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            updated_at: 2
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 5
            id: id
            content: content
          data:
            key: ""
          status_history:
          - author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            action: null
            id: id
            assignee:
              contact_ref: contact_ref
              account_ref: 1
            timestamp: 5
            status: null
          - author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            action: null
            id: id
            assignee:
              contact_ref: contact_ref
              account_ref: 1
            timestamp: 5
            status: null
          created_at: 0
          reporter:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
          feedback:
          - form_data:
              key: ""
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 7
            action: null
            feedback_id: feedback_id
            id: id
            source_status: null
          - form_data:
              key: ""
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 7
            action: null
            feedback_id: feedback_id
            id: id
            source_status: null
          archived: true
          property_address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          updated_at: 6
          property_ref: property_ref
          name: name
          parties:
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          id: id
          assignee:
            contact_ref: contact_ref
            account_ref: 1
          status: null
        - template: template
          comments:
          - deleted: true
            attachments:
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            updated_at: 2
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 5
            id: id
            content: content
          - deleted: true
            attachments:
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            updated_at: 2
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 5
            id: id
            content: content
          data:
            key: ""
          status_history:
          - author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            action: null
            id: id
            assignee:
              contact_ref: contact_ref
              account_ref: 1
            timestamp: 5
            status: null
          - author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            action: null
            id: id
            assignee:
              contact_ref: contact_ref
              account_ref: 1
            timestamp: 5
            status: null
          created_at: 0
          reporter:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
          feedback:
          - form_data:
              key: ""
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 7
            action: null
            feedback_id: feedback_id
            id: id
            source_status: null
          - form_data:
              key: ""
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 7
            action: null
            feedback_id: feedback_id
            id: id
            source_status: null
          archived: true
          property_address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          updated_at: 6
          property_ref: property_ref
          name: name
          parties:
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          id: id
          assignee:
            contact_ref: contact_ref
            account_ref: 1
          status: null
      properties:
        cases:
          items:
            $ref: '#/components/schemas/Case'
          type: array
      type: object
    GetExternalUserCasesCountResponse:
      example:
        numberOfCases: 0
      properties:
        numberOfCases:
          format: int64
          type: integer
      type: object
    FAQEntry:
      example:
        question:
          key: question
        answer:
          key: answer
        keywords:
        - keywords
        - keywords
        id: id
      properties:
        id:
          type: string
        question:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        answer:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        keywords:
          items:
            type: string
          type: array
      type: object
    CreateOrUpdateFAQEntryRequest:
      example:
        question:
          key: question
        answer:
          key: answer
        keywords:
        - keywords
        - keywords
      properties:
        question:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        answer:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        keywords:
          items:
            type: string
          type: array
      type: object
    FeedbackRequest:
      example:
        rating: 0.8008281904610115
        type: null
        content: content
      properties:
        type:
          $ref: '#/components/schemas/FeedbackType'
        rating:
          description: Optional rating the user can provide (1-5 stars)
          type: number
        content:
          description: An optional message the user can provide
          type: string
      type: object
    FeedbackType:
      enum:
      - COMMENT_AND_RATE
      - FEATURE_REQUEST
      - ISSUE_REPORT
      type: string
    CreateOrUpdateCustomIDGeneratorRequest:
      example:
        last_generated_id: last_generated_id
        name: name
        generation_script: generation_script
      properties:
        name:
          description: |
            The user friendly name of the ID generator.
          type: string
        generation_script:
          description: |
            A JS script code that will be used to generate the ID.
          type: string
        last_generated_id:
          description: |
            The last generated ID. This is used to keep track of the last generated ID.
          type: string
      type: object
    CustomIDGenerator:
      example:
        updated_at: 6
        last_generated_id: last_generated_id
        name: name
        created_at: 0
        id: id
        generation_script: generation_script
      properties:
        id:
          type: string
        created_at:
          description: The timestamp of when the script was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the script was last updated
          format: int64
          type: integer
        name:
          description: |
            The user friendly name of the ID generator.
          type: string
        generation_script:
          description: |
            A JS script code that will be used to generate the ID.
          type: string
        last_generated_id:
          description: |
            The last generated ID. This is used to keep track of the last generated ID.
          type: string
      type: object
    Meter:
      description: a meter installed in a property to measure some kind of utility
        amount
      example:
        unit: unit
        calibration_validity: 5
        updated_at: 6
        property_ref: property_ref
        calibration_date: 1
        name: name
        created_at: 0
        location: location
        serial_number: serial_number
        id: id
        meter_type: null
      properties:
        id:
          type: string
        created_at:
          description: The timestamp of when the meter was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the meter was last updated
          format: int64
          type: integer
        property_ref:
          type: string
        meter_type:
          $ref: '#/components/schemas/MeterTypeEnum'
        unit:
          type: string
        name:
          type: string
        location:
          type: string
        serial_number:
          type: string
        calibration_date:
          format: int64
          type: integer
        calibration_validity:
          format: int64
          type: integer
      type: object
    MeterTypeEnum:
      enum:
      - OTHER
      - WARM_WATER
      - COLD_WATER
      - ELECTRICITY
      - GAS
      - HEATER
      type: string
    CreateOrUpdateMeterRequest:
      description: All the information required for creating a new meter
      example:
        unit: unit
        calibration_validity: 6
        property_ref: property_ref
        calibration_date: 0
        name: name
        location: location
        serial_number: serial_number
        meter_type: null
      properties:
        property_ref:
          type: string
        meter_type:
          $ref: '#/components/schemas/MeterTypeEnum'
        unit:
          type: string
        name:
          type: string
        location:
          type: string
        serial_number:
          type: string
        calibration_date:
          format: int64
          type: integer
        calibration_validity:
          format: int64
          type: integer
      type: object
    MeterReading:
      description: a single reading of a meter
      example:
        date: 1
        updated_at: 6
        meter_ref: meter_ref
        created_at: 0
        id: id
        attachment_ref: attachment_ref
        reporter_ref: reporter_ref
        value:
          f: 5
          i: 5
      properties:
        id:
          type: string
        created_at:
          description: The timestamp of when the meter reading was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the meter reading was last updated
          format: int64
          type: integer
        meter_ref:
          type: string
        date:
          format: int64
          type: integer
        value:
          $ref: '#/components/schemas/FloatNumber'
        reporter_ref:
          type: string
        attachment_ref:
          type: string
      type: object
    CreateOrUpdateMeterReadingRequest:
      description: All the information required for tracking a meter reading
      example:
        date: 0
        attachment_ref: attachment_ref
        value:
          f: 5
          i: 5
      properties:
        date:
          format: int64
          type: integer
        value:
          $ref: '#/components/schemas/FloatNumber'
        attachment_ref:
          type: string
      type: object
    CreateOrUpdatePropertyOwnerRequest:
      description: Request used to create a new property owner
      example:
        bank_account_ref: bank_account_ref
        address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        last_name: last_name
        company: company
        phone_number: phone_number
        title: title
        first_name: first_name
        email: email
      properties:
        title:
          description: the title of the owner
          type: string
        first_name:
          description: |
            First name(s) of the property owners. In case of a company, this is the first name of the contact person within the company.
          type: string
        last_name:
          description: |
            Last name of the property owners. In case of a company, this is the last name of the contact person within the company.
          type: string
        company:
          description: |
            Optional name of the company.
          type: string
        email:
          description: the email of the owner
          type: string
        phone_number:
          description: the phone number of the owner
          type: string
        address:
          $ref: '#/components/schemas/Address'
        bank_account_ref:
          description: the reference to the bank account of the owner
          type: string
      type: object
    PropertyOwner:
      description: Information about the owner of a property
      example:
        bank_account_ref: bank_account_ref
        address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        created_at: 0
        last_name: last_name
        external_id: external_id
        title: title
        updated_at: 6
        company: company
        phone_number: phone_number
        id: id
        first_name: first_name
        email: email
        external_source: external_source
      properties:
        id:
          description: the ID of the owner
          type: string
        external_id:
          description: "optional external ID, in case acount was created via backend\
            \ integration"
          type: string
        external_source:
          description: "optional external source, in case acount was created via backend\
            \ integration"
          type: string
        created_at:
          description: The timestamp of when the property owners was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the property owners was last updated
          format: int64
          type: integer
        title:
          description: "The salutation to be used for the property owners (Miss, Mister,\
            \ Family)"
          type: string
        first_name:
          description: |
            First name(s) of the property owners. In case of a company, this is the first name of the contact person within the company.
          type: string
        last_name:
          description: |
            Last name of the property owners. In case of a company, this is the last name of the contact person within the company.
          type: string
        company:
          description: "Optional name of the company. \n"
          type: string
        email:
          description: the email of the owner
          type: string
        phone_number:
          description: the phone number of the owner
          type: string
        address:
          $ref: '#/components/schemas/Address'
        bank_account_ref:
          description: the reference to the bank account of the owner
          type: string
      type: object
    QueryPropertyOwnersRequest:
      description: Request used to get a list of property owners for the curent user
      example:
        offset: 6
        limit: 0
      properties:
        limit:
          description: number of items to include in the result
          format: int64
          type: integer
        offset:
          description: number of items to skip from the result
          format: int64
          type: integer
      type: object
    QueryPropertyOwnersResponse:
      description: A list of all property owners that are requested by the user
      example:
        offset: 6
        total_count: 1
        limit: 0
        property_owners:
        - bank_account_ref: bank_account_ref
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          created_at: 0
          last_name: last_name
          external_id: external_id
          title: title
          updated_at: 6
          company: company
          phone_number: phone_number
          id: id
          first_name: first_name
          email: email
          external_source: external_source
        - bank_account_ref: bank_account_ref
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          created_at: 0
          last_name: last_name
          external_id: external_id
          title: title
          updated_at: 6
          company: company
          phone_number: phone_number
          id: id
          first_name: first_name
          email: email
          external_source: external_source
      properties:
        limit:
          description: number of items to include in the result
          format: int64
          type: integer
        offset:
          description: number of items to skip from the result
          format: int64
          type: integer
        property_owners:
          description: list of property owners that match the query request
          items:
            $ref: '#/components/schemas/PropertyOwner'
          type: array
        total_count:
          description: total number of owners available
          format: int64
          type: integer
      type: object
    CompanyProfile:
      description: "Details about a company (property management, or service provider)"
      example:
        website: website
        address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        name: name
        phone_number: phone_number
        email: email
      properties:
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        email:
          description: |
            The default email address at which the company should be contacted. This information can potentially be visible to other users of the platform.
          type: string
        phone_number:
          description: |
            The default phone number at which the company should be contacted. This information can potentially be visible to other users of the platform.
          type: string
        website:
          description: URL to the company website. This information can potentially
            be visible to other users of the platform.
          type: string
      type: object
    UpdateCompanyProfileRequest:
      description: Request used to update the company profile details
      example:
        website: website
        address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        name: name
        phone_number: phone_number
        email: email
      properties:
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        email:
          description: |
            The default email address at which the company should be contacted. This information can potentially be visible to other users of the platform.
          type: string
        phone_number:
          description: |
            The default phone number at which the company should be contacted. This information can potentially be visible to other users of the platform.
          type: string
        website:
          description: URL to the company website. This information can potentially
            be visible to other users of the platform.
          type: string
      type: object
    UserPreferences:
      description: Notification preferences for individual users
      example:
        notify_on_case_update:
        - null
        - null
        notify_on_new_case:
        - null
        - null
      properties:
        notify_on_new_case:
          description: |
            Notify when a new case has been raised for the account. For property  managers or service providers, this will be triggered when a new case is raised for their company/any of the properties the company manages. For tenants it is triggered, when a case is raised for the property  they live in.
          items:
            $ref: '#/components/schemas/NotificationType'
          type: array
        notify_on_case_update:
          description: |
            Notify when a new case has been updated, which the user or their  company has been active on.
          items:
            $ref: '#/components/schemas/NotificationType'
          type: array
      type: object
    NotificationType:
      enum:
      - EMAIL
      type: string
    UpdateUserPreferencesRequest:
      description: Change the preferences of the current user
      example:
        notify_on_case_update:
        - null
        - null
        notify_on_new_case:
        - null
        - null
      properties:
        notify_on_new_case:
          description: |
            Notify when a new case has been raised for the account. For property  managers or service providers, this will be triggered when a new case is raised for their company/any of the properties the company manages. For tenants it is triggered, when a case is raised for the property  they live in.
          items:
            $ref: '#/components/schemas/NotificationType'
          type: array
        notify_on_case_update:
          description: |
            Notify when a new case has been updated, which the user or their  company has been active on.
          items:
            $ref: '#/components/schemas/NotificationType'
          type: array
      type: object
    CreatePriceIndexPointRequest:
      description: used to create a price index point
      example:
        date: 0
        country: country
        base_year: 6
        value: ""
      properties:
        value:
          description: the value of the price index at the point of pushing
          type: double
        date:
          description: the time point(usually month) the value corresponds to
          format: int64
          type: integer
        country:
          description: the country code the price index belongs to
          type: string
        base_year:
          description: |
            year used as a base where the year's average is taken to be 100
          format: int32
          type: integer
      type: object
    PriceIndexPoint:
      description: |
        A value, corresponding to a specific time point, that represends the price index value of a specific country.
      example:
        date: 6
        country: country
        base_year: 1
        created_at: 0
        id: id
        value: ""
      properties:
        id:
          description: the unique ID of the value
          type: string
        created_at:
          description: timestamp indicating when it was pushed
          format: int64
          type: integer
        value:
          description: the value of the price index at the point of pushing
          type: double
        date:
          description: the time point(usually month) the value corresponds to
          format: int64
          type: integer
        country:
          description: the country code the price index belongs to
          type: string
        base_year:
          description: |
            year used as a base where the year's average is taken to be 100
          format: int32
          type: integer
      type: object
    PriceIndexPointQueryRequest:
      description: The request used to query a price index point
      example:
        date: 0
        country_code: country_code
        base_year: 6
      properties:
        country_code:
          type: string
        date:
          description: The date to look for
          format: int64
          type: integer
        base_year:
          description: |
            The base year to query for, not taken into account if empty
          format: int32
          type: integer
      type: object
    QueryPropertiesRequest:
      description: Request used to get a list of properties for the curent user
      example:
        parent_ref: parent_ref
        offset: 6
        owner_ref: owner_ref
        limit: 0
        name: name
      properties:
        limit:
          description: number of items to include in the result
          format: int64
          type: integer
        offset:
          description: number of items to skip from the result
          format: int64
          type: integer
        name:
          description: like search for the name of the property
          type: string
        parent_ref:
          description: |
            optional property ID, if set only properties that are children of the given  property are returned
          type: string
        owner_ref:
          description: |
            optional property owner ID, if set only properties that are owned by the  given owner are returned
          type: string
      type: object
    QueryPropertiesResponse:
      description: |
        A list of all properties that are requested by the user
      example:
        offset: 6
        total_count: 0
        properties:
        - parent_name: parent_name
          bank_account_ref: bank_account_ref
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          parent_address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          created_at: 5
          external_id: external_id
          type: null
          parent_ref: parent_ref
          updated_at: 5
          owner_ref: owner_ref
          name: name
          details:
            floor: 3A
            area: 120
            rooms: 6
            bedrooms: 2
            bathrooms: 1
            balcony: 1
            construction_year: 2018
            parking: PARKING_SPOT
            floor_type:
            - LAMINATE
            - TILES
            heating_type:
            - CENTRAL_HEATING
            - FLOOR_HEATING
            - AC
            window_type:
            - TRIPLE_PANE
            - DOUBLE_SASH
            furnishing: FULL_FURNISHING
            historic_property: false
            rent: 750
            running_costs: 150
          id: id
          external_source: external_source
        - parent_name: parent_name
          bank_account_ref: bank_account_ref
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          parent_address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          created_at: 5
          external_id: external_id
          type: null
          parent_ref: parent_ref
          updated_at: 5
          owner_ref: owner_ref
          name: name
          details:
            floor: 3A
            area: 120
            rooms: 6
            bedrooms: 2
            bathrooms: 1
            balcony: 1
            construction_year: 2018
            parking: PARKING_SPOT
            floor_type:
            - LAMINATE
            - TILES
            heating_type:
            - CENTRAL_HEATING
            - FLOOR_HEATING
            - AC
            window_type:
            - TRIPLE_PANE
            - DOUBLE_SASH
            furnishing: FULL_FURNISHING
            historic_property: false
            rent: 750
            running_costs: 150
          id: id
          external_source: external_source
      properties:
        properties:
          description: list of properties that match the query request
          items:
            $ref: '#/components/schemas/Property'
          type: array
        total_count:
          description: total number of properties available
          format: int64
          type: integer
        offset:
          description: number of items that were skipped in the result
          format: int32
          type: integer
      type: object
    Property:
      description: |
        Property holds the information about a single accommodation unit (Wohneinheit).
      example:
        parent_name: parent_name
        bank_account_ref: bank_account_ref
        address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        parent_address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        created_at: 5
        external_id: external_id
        type: null
        parent_ref: parent_ref
        updated_at: 5
        owner_ref: owner_ref
        name: name
        details:
          floor: 3A
          area: 120
          rooms: 6
          bedrooms: 2
          bathrooms: 1
          balcony: 1
          construction_year: 2018
          parking: PARKING_SPOT
          floor_type:
          - LAMINATE
          - TILES
          heating_type:
          - CENTRAL_HEATING
          - FLOOR_HEATING
          - AC
          window_type:
          - TRIPLE_PANE
          - DOUBLE_SASH
          furnishing: FULL_FURNISHING
          historic_property: false
          rent: 750
          running_costs: 150
        id: id
        external_source: external_source
      properties:
        id:
          description: generated unique ID
          type: string
        external_id:
          description: "optional external ID, in case property was created via backend\
            \ integration"
          type: string
        external_source:
          description: "optional external source, in case property was created via\
            \ backend integration"
          type: string
        created_at:
          description: The timestamp of when the tenant was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the tenant was last updated
          format: int64
          type: integer
        name:
          description: "e.g. 'Whg 12', or 'Etage 2/Links'"
          type: string
        type:
          $ref: '#/components/schemas/PropertyType'
        address:
          $ref: '#/components/schemas/Address'
        owner_ref:
          description: Optional reference to the property owner
          type: string
        parent_ref:
          description: Optional reference to the parent property
          type: string
        parent_name:
          description: Optional name of the parent property
          type: string
        parent_address:
          $ref: '#/components/schemas/Address'
        bank_account_ref:
          description: Optional reference to the bank account associated with the
            property
          type: string
        details:
          $ref: '#/components/schemas/PropertyDetails'
      required:
      - id
      - manager
      - name
      - type
      type: object
    PropertyType:
      enum:
      - APARTMENT
      - ATTIC
      - BASEMENT
      - BUILDING
      - COMMERCIAL_SPACE
      - GARAGE
      - GARDEN
      - HOUSE
      - LAND
      - OFFICE
      - PARKING_LOT
      - ROOM
      - SEMIDETACHED_HOUSE
      - OTHER
      type: string
    PropertyDetails:
      description: |
        Holds extra details about a property
      example:
        floor: 3A
        area: 120
        rooms: 6
        bedrooms: 2
        bathrooms: 1
        balcony: 1
        construction_year: 2018
        parking: PARKING_SPOT
        floor_type:
        - LAMINATE
        - TILES
        heating_type:
        - CENTRAL_HEATING
        - FLOOR_HEATING
        - AC
        window_type:
        - TRIPLE_PANE
        - DOUBLE_SASH
        furnishing: FULL_FURNISHING
        historic_property: false
        rent: 750
        running_costs: 150
      properties:
        floor:
          description: |
            Floor/storey of a building.
          type: string
        unit_number:
          description: |
            Unit number within a building.
          type: string
        area:
          type: number
        rooms:
          type: number
        bedrooms:
          type: number
        bathrooms:
          type: number
        balcony:
          type: number
        construction_year:
          type: number
        parking:
          $ref: '#/components/schemas/PropertyParkingTypeEnum'
        floor_type:
          description: |
            List of Floor types present in a property
          items:
            $ref: '#/components/schemas/PropertyFloorTypeEnum'
          type: array
        heating_type:
          description: |
            List of Heating types present in a property
          items:
            $ref: '#/components/schemas/PropertyHeatingTypeEnum'
          type: array
        window_type:
          description: |
            List of window types present in a property
          items:
            $ref: '#/components/schemas/PropertyWindowTypeEnum'
          type: array
        furnishing:
          $ref: '#/components/schemas/PropertyFurnishingEnum'
        historic_property:
          description: "A building with special architectural or historic interest,considered\
            \ to be of national importance and therefor worth being preserved/protected"
          type: boolean
      type: object
    PropertyParkingTypeEnum:
      enum:
      - GARAGE
      - PARKING_SPOT
      - UNDERGROUND
      type: string
    PropertyFloorTypeEnum:
      enum:
      - LAMINATE
      - TILES
      - PARQUET
      type: string
    PropertyHeatingTypeEnum:
      enum:
      - CENTRAL_HEATING
      - FLOOR_HEATING
      - GAS_HEATING
      - ELECTRICAL_HEATING
      - HEAT_PUMP
      - AC
      type: string
    PropertyWindowTypeEnum:
      enum:
      - SINGLE_PANE
      - DOUBLE_PANE
      - TRIPLE_PANE
      - DOUBLE_SASH
      type: string
    PropertyFurnishingEnum:
      enum:
      - FULL_FURNISHING
      - PARTIAL_FURNISHING
      - NO_FURNISHING
      type: string
    CreatePropertyRequest:
      description: |
        A requests that holds all necessary information to create a property.
      example:
        parent_ref: parent_ref
        address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        owner_ref: owner_ref
        name: name
        details:
          floor: 3A
          area: 120
          rooms: 6
          bedrooms: 2
          bathrooms: 1
          balcony: 1
          construction_year: 2018
          parking: PARKING_SPOT
          floor_type:
          - LAMINATE
          - TILES
          heating_type:
          - CENTRAL_HEATING
          - FLOOR_HEATING
          - AC
          window_type:
          - TRIPLE_PANE
          - DOUBLE_SASH
          furnishing: FULL_FURNISHING
          historic_property: false
          rent: 750
          running_costs: 150
        type: null
      properties:
        name:
          description: "e.g. 'Whg 12', or 'Etage 2/Links'"
          type: string
        type:
          $ref: '#/components/schemas/PropertyType'
        owner_ref:
          description: Optional reference to the property owner
          type: string
        parent_ref:
          description: Optional parent property (e.g. building) to which this property
            belongs
          type: string
        address:
          $ref: '#/components/schemas/Address'
        details:
          $ref: '#/components/schemas/PropertyDetails'
      required:
      - name
      - type
      type: object
    UpdatePropertyRequest:
      description: |
        A requests that holds all necessary information to update an already existing property.
      example:
        parent_ref: parent_ref
        bank_account_ref: bank_account_ref
        address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        owner_ref: owner_ref
        name: name
        details:
          floor: 3A
          area: 120
          rooms: 6
          bedrooms: 2
          bathrooms: 1
          balcony: 1
          construction_year: 2018
          parking: PARKING_SPOT
          floor_type:
          - LAMINATE
          - TILES
          heating_type:
          - CENTRAL_HEATING
          - FLOOR_HEATING
          - AC
          window_type:
          - TRIPLE_PANE
          - DOUBLE_SASH
          furnishing: FULL_FURNISHING
          historic_property: false
          rent: 750
          running_costs: 150
        type: null
      properties:
        name:
          description: "e.g. 'Whg 12', or 'Etage 2/Links'"
          type: string
        type:
          $ref: '#/components/schemas/PropertyType'
        owner_ref:
          description: Optional reference to the property owner
          type: string
        parent_ref:
          description: Optional reference to the parent property
          type: string
        bank_account_ref:
          description: Optional reference to the bank account associated with the
            property
          type: string
        address:
          $ref: '#/components/schemas/Address'
        details:
          $ref: '#/components/schemas/PropertyDetails'
      required:
      - id
      - name
      - type
      type: object
    Tenancy:
      description: |
        A tenancy is a contract between a tenant and a property manager.
      example:
        end_date: 5
        tenants:
        - updated_at: 6
          created_at: 1
          last_name: last_name
          external_id: external_id
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
          external_source: external_source
        - updated_at: 6
          created_at: 1
          last_name: last_name
          external_id: external_id
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
          external_source: external_source
        duration_type: null
        created_at: 0
        external_id: external_id
        extension_options:
        - 5
        - 5
        rent_details:
          rent_type: null
          taxable: true
          graduated_updates:
          - date: 9
            value: 3.616076749251911
          - date: 9
            value: 3.616076749251911
          deposit: 2.3021358869347655
          graduated_length: 7
        current_rent:
          additional_costs:
          - amount: 1.0246457001441578
            name: name
          - amount: 1.0246457001441578
            name: name
          index_month: 7
          index_points: 1.2315135367772556
          rent: 2.027123023002322
          incidentals: 4.145608029883936
        updated_at: 6
        property_ref: property_ref
        id: id
        external_source: external_source
        start_date: 1
      properties:
        id:
          description: generated unique ID
          type: string
        external_id:
          description: |
            optional external ID, in case tenancy was created via backend integration
          type: string
        external_source:
          description: |
            optional external source, in case tenancy was created via backend integration
          type: string
        created_at:
          description: The timestamp of when the tenant was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the tenant was last updated
          format: int64
          type: integer
        property_ref:
          description: The ID of the property that is being rented out
          type: string
        start_date:
          description: The timestamp of when the tenancy has started
          format: int64
          type: integer
        end_date:
          description: |
            The timestamp of when the tenancy has ended or is scheduled to end (optional)
          format: int64
          type: integer
        duration_type:
          $ref: '#/components/schemas/TenancyDurationEnum'
        extension_options:
          description: Options to extend the contract if it's fixed term.
          items:
            description: Duration in months to extend the length of the tenancy by.
            format: int64
            type: integer
          type: array
        rent_details:
          $ref: '#/components/schemas/RentDetails'
        current_rent:
          $ref: '#/components/schemas/RentData'
        tenants:
          description: The IDs of the tenants
          items:
            $ref: '#/components/schemas/Tenant'
          type: array
      required:
      - created_at
      - current_rent
      - duration_type
      - id
      - property_ref
      - rent_details
      - start_date
      - tenants
      - updated_at
      type: object
    TenancyDurationEnum:
      description: |
        The duration of the tenancy. This is used to determine which fields are required for the tenancy contract.
      enum:
      - OPEN_ENDED
      - FIXED_TERM
      type: string
    RentDetails:
      description: Contract terms about the rent
      example:
        rent_type: null
        taxable: true
        graduated_updates:
        - date: 9
          value: 3.616076749251911
        - date: 9
          value: 3.616076749251911
        deposit: 2.3021358869347655
        graduated_length: 7
      properties:
        taxable:
          description: Whether the tenancy is taxed or not
          type: boolean
        rent_type:
          $ref: '#/components/schemas/RentTypeEnum'
        deposit:
          description: the deposit amount
          format: double
          type: number
        graduated_length:
          description: the date the graduated rent expires at
          format: int64
          type: integer
        graduated_updates:
          description: |
            A list of date-value pairs, representing a map, since the generator doesn't allow for maps that don't have strings as keys.
          items:
            $ref: '#/components/schemas/GraduatedUpdate'
          type: array
      type: object
    RentTypeEnum:
      enum:
      - REGULAR
      - INDEXED
      - GRADUATED
      - GRATUITOUS_TRANSFER
      type: string
    GraduatedUpdate:
      description: |
        A date-value pair, which is used to indicate a future change in the rent amount, as part of a graduated rent contract.
      example:
        date: 9
        value: 3.616076749251911
      properties:
        date:
          format: int64
          type: integer
        value:
          format: double
          type: number
      type: object
    RentData:
      description: Information about the rent of a property
      example:
        additional_costs:
        - amount: 1.0246457001441578
          name: name
        - amount: 1.0246457001441578
          name: name
        index_month: 7
        index_points: 1.2315135367772556
        rent: 2.027123023002322
        incidentals: 4.145608029883936
      properties:
        rent:
          description: the monthly rent amount
          format: double
          type: number
        incidentals:
          description: the amount of incidentals paid monthly
          format: double
          type: number
        index_month:
          description: |
            In case the rent type is INDEXED, this contains the timestamp of the last published index value at the time of the rent change.
          format: int64
          type: integer
        index_points:
          description: |
            In case the rent type is INDEXED, this contains the index value published at `index_month` and valid for the current rent.
          format: double
          type: number
        additional_costs:
          description: |
            Additional costs that are not part of the rent, but are paid by the tenant, e.g. garage rent, parking space rent, etc.
          items:
            $ref: '#/components/schemas/AdditionalRentCost'
          type: array
      type: object
    AdditionalRentCost:
      description: |
        Additional costs that are not part of the rent, but are paid by the tenant, e.g. garage rent, parking space rent, etc.
      example:
        amount: 1.0246457001441578
        name: name
      properties:
        name:
          description: "The name of the cost, e.g. \"garage\""
          type: string
        amount:
          description: The monthly amount due
          format: double
          type: number
      type: object
    CreateTenancyRequest:
      allOf:
      - $ref: '#/components/schemas/UpdateTenancyRequest'
      - description: |
          Request issued by a property manager to create a new tenancy for a property
        properties:
          initial_rent:
            $ref: '#/components/schemas/RentData'
          tenants:
            description: |
              The list of tenants that are part of this tenancy. Can be empty, or include new or existing tenants.
            items:
              $ref: '#/components/schemas/ContactData'
            type: array
        required:
        - initial_rent
        - tenants
        type: object
      example:
        end_date: 6
        extension_options:
        - 1
        - 1
        tenants:
        - address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          last_name: last_name
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
        - address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          last_name: last_name
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
        initial_rent:
          additional_costs:
          - amount: 1.0246457001441578
            name: name
          - amount: 1.0246457001441578
            name: name
          index_month: 7
          index_points: 1.2315135367772556
          rent: 2.027123023002322
          incidentals: 4.145608029883936
        rent_details:
          rent_type: null
          taxable: true
          graduated_updates:
          - date: 9
            value: 3.616076749251911
          - date: 9
            value: 3.616076749251911
          deposit: 2.3021358869347655
          graduated_length: 7
        start_date: 0
    UpdateTenancyRequest:
      description: |
        Request issued by a property manager to update the initial tenancy infomation for a property (the contract data).
      example:
        end_date: 6
        extension_options:
        - 1
        - 1
        rent_details:
          rent_type: null
          taxable: true
          graduated_updates:
          - date: 9
            value: 3.616076749251911
          - date: 9
            value: 3.616076749251911
          deposit: 2.3021358869347655
          graduated_length: 7
        start_date: 0
      properties:
        start_date:
          description: The timestamp of when the tenancy has started
          format: int64
          type: integer
        end_date:
          description: |
            The timestamp of when the tenancy has ended or is scheduled to end (required depending on the duration_type)
          format: int64
          type: integer
        rent_details:
          $ref: '#/components/schemas/RentDetails'
        extension_options:
          description: Options to extend the contract if it's fixed term.
          items:
            description: Duration in months to extend the length of the tenancy by.
            format: int64
            type: integer
          type: array
      required:
      - duration_type
      - rent_details
      - rent_type
      - start_date
      type: object
    CreateOrUpdatePropertyHandoverTemplateRequest:
      example:
        custom_form:
          layout:
          - ref_id: ref_id
            ref_type: ref_type
          - ref_id: ref_id
            ref_type: ref_type
          inputs:
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          groups:
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          validations:
          - expression: expression
            id: id
            message:
              key: message
            target: target
          - expression: expression
            id: id
            message:
              key: message
            target: target
        name: name
        description: description
      properties:
        name:
          description: |
            The name of the property handover template.
          type: string
        description:
          description: |
            The description of the property handover template.
          type: string
        custom_form:
          $ref: '#/components/schemas/CustomForm'
      required:
      - custom_form
      - name
      type: object
    PropertyHandoverTemplate:
      example:
        custom_form:
          layout:
          - ref_id: ref_id
            ref_type: ref_type
          - ref_id: ref_id
            ref_type: ref_type
          inputs:
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          groups:
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          validations:
          - expression: expression
            id: id
            message:
              key: message
            target: target
          - expression: expression
            id: id
            message:
              key: message
            target: target
        name: name
        description: description
        id: id
      properties:
        id:
          description: |
            The ID of the property handover template. This ID is unique within the system.
          type: string
        name:
          description: |
            The name of the property handover template.
          type: string
        description:
          description: |
            The description of the property handover template.
          type: string
        custom_form:
          $ref: '#/components/schemas/CustomForm'
      required:
      - custom_form
      - id
      - name
      type: object
    CreateOrUpdatePropertyHandoverRequest:
      example:
        tenants:
        - address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          last_name: last_name
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
        - address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          last_name: last_name
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
        property_address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        property_ref: property_ref
        template_ref: template_ref
        handover_time: 0
      properties:
        template_ref:
          description: |
            The ID of the property handover template.
          type: string
        property_ref:
          type: string
        property_address:
          $ref: '#/components/schemas/Address'
        handover_time:
          description: |
            The time of the property handover.
          format: int64
          type: integer
        tenants:
          items:
            $ref: '#/components/schemas/ContactData'
          type: array
      required:
      - handover_time
      - template_ref
      - tenants
      type: object
    PropertyHandover:
      example:
        tenants:
        - address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          last_name: last_name
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
        - address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          last_name: last_name
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
        archived: true
        property_address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        property_ref: property_ref
        data: "{}"
        template_ref: template_ref
        id: id
        handover_time: 0
        status: null
      properties:
        id:
          description: |
            The ID of the property handover schedule. This ID is unique within the system.
          type: string
        property_ref:
          type: string
        property_address:
          $ref: '#/components/schemas/Address'
        template_ref:
          description: |
            The ID of the property handover template.
          type: string
        handover_time:
          description: |
            The time of the property handover.
          format: int64
          type: integer
        tenants:
          items:
            $ref: '#/components/schemas/ContactData'
          type: array
        status:
          $ref: '#/components/schemas/PropertyHandoverStatusEnum'
        archived:
          description: Whether the property handover has been archived or not.
          type: boolean
        data:
          description: |
            The data captured by of the property handover.
          type: object
      required:
      - handover_time
      - id
      - status
      - template_ref
      - tenants
      type: object
    PropertyHandoverStatusEnum:
      description: The allowed values for a property handover status.
      enum:
      - PENDING
      - DONE
      type: string
    QueryPropertyHandoversRequest:
      example:
        archived: null
        offset: 6
        limit: 0
        status: null
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/PropertyHandoverStatusEnum'
        archived:
          $ref: '#/components/schemas/QueryBooleanParameter'
      type: object
    SubmitPropertyHandoverRequest:
      example:
        data: "{}"
      properties:
        data:
          description: |
            The data captured by of the property handover.
          type: object
      required:
      - data
      type: object
    ReportDefinition:
      example:
        result_schema:
          is_list: true
          properties:
          - sequence: 0
            id: id
            label:
              key: label
          - sequence: 0
            id: id
            label:
              key: label
        name: name
        description: description
        id: id
        result_mapper: result_mapper
        parameters:
          layout:
          - ref_id: ref_id
            ref_type: ref_type
          - ref_id: ref_id
            ref_type: ref_type
          inputs:
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          groups:
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          validations:
          - expression: expression
            id: id
            message:
              key: message
            target: target
          - expression: expression
            id: id
            message:
              key: message
            target: target
        script: script
      properties:
        id:
          type: string
        name:
          description: The name of the report
          type: string
        description:
          description: The description of the report
          type: string
        result_schema:
          $ref: '#/components/schemas/ReportResultSchema'
        result_mapper:
          description: The JS script to execute to map the result to the result schema
          type: string
        parameters:
          $ref: '#/components/schemas/CustomForm'
        script:
          description: The JS script to execute to generate the report result
          type: string
      type: object
    ReportResultSchema:
      example:
        is_list: true
        properties:
        - sequence: 0
          id: id
          label:
            key: label
        - sequence: 0
          id: id
          label:
            key: label
      properties:
        is_list:
          description: Whether the result is a list of items
          type: boolean
        properties:
          items:
            $ref: '#/components/schemas/ReportResultSchemaProperty'
          type: array
      type: object
    ReportResultSchemaProperty:
      example:
        sequence: 0
        id: id
        label:
          key: label
      properties:
        id:
          type: string
        label:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        sequence:
          format: int32
          type: integer
      type: object
    CreateOrUpdateReportDefinitionRequest:
      example:
        result_schema:
          is_list: true
          properties:
          - sequence: 0
            id: id
            label:
              key: label
          - sequence: 0
            id: id
            label:
              key: label
        name: name
        description: description
        result_mapper: result_mapper
        parameters:
          layout:
          - ref_id: ref_id
            ref_type: ref_type
          - ref_id: ref_id
            ref_type: ref_type
          inputs:
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          - propagate_changes: true
            view_label:
              key: view_label
            ephemeral: true
            default_value: default_value
            attributes:
              key: attributes
            id: id
            label:
              key: label
            placeholder:
              key: placeholder
            type: type
            items:
            - items
            - items
            required: true
            target: target
          groups:
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          - use_item_group: true
            bottom_divider: true
            top_divider: true
            min_size: 6
            id: id
            label:
              key: label
            type: type
            items:
            - ref_id: ref_id
              ref_type: ref_type
            - ref_id: ref_id
              ref_type: ref_type
            info:
              key: info
            target: target
          validations:
          - expression: expression
            id: id
            message:
              key: message
            target: target
          - expression: expression
            id: id
            message:
              key: message
            target: target
        script: script
      properties:
        name:
          description: The name of the report
          type: string
        description:
          description: The description of the report
          type: string
        result_schema:
          $ref: '#/components/schemas/ReportResultSchema'
        result_mapper:
          description: The JS script to execute to map the result to the result schema
          type: string
        parameters:
          $ref: '#/components/schemas/CustomForm'
        script:
          description: The JS script to execute to generate the report result
          type: string
      type: object
    ExecuteReportRequest:
      description: The data required to execute a report
      example:
        parameters:
          key: ""
      properties:
        parameters:
          additionalProperties: true
          description: The parameters used to execute the report as a data map
          type: object
      type: object
    ReportExecution:
      example:
        result: result
        updated_at: 6
        created_at: 0
        id: id
        report_ref: report_ref
        error: error
        parameters:
          key: ""
        status: null
      properties:
        id:
          type: string
        created_at:
          description: The timestamp of when the report execution was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the report execution was last updated
          format: int64
          type: integer
        report_ref:
          type: string
        status:
          $ref: '#/components/schemas/ReportExecutionStatusEnum'
        parameters:
          additionalProperties: true
          description: The parameters used to execute the report as a data map
          type: object
        result:
          description: The result of the report execution as a JSON string
          type: string
        error:
          description: Error message should the report execution fail
          type: string
      type: object
    ReportExecutionStatusEnum:
      enum:
      - SCHEDULED
      - RUNNING
      - COMPLETED
      - FAILED
      type: string
    QueryReportExecutionsRequest:
      description: The data required to query report executions
      example:
        limit: 0
        report_ref: report_ref
        status: null
      properties:
        report_ref:
          type: string
        status:
          $ref: '#/components/schemas/ReportExecutionStatusEnum'
        limit:
          format: int32
          type: integer
      type: object
    CreateOrUpdateServiceProvider:
      description: Request used to create a new service provider
      example:
        address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        last_name: last_name
        company: company
        phone_number: phone_number
        title: title
        category: null
        first_name: first_name
        email: email
      properties:
        title:
          description: "The salutation to be used for the contant person (Miss, Mister)"
          type: string
        first_name:
          description: optional first name of contact person
          type: string
        last_name:
          description: optional last name of contact person
          type: string
        company:
          description: the name of the company
          type: string
        email:
          description: the email address at which the company can be contacted by
            the platform
          type: string
        phone_number:
          description: a phone number at which the company can be reached
          type: string
        category:
          $ref: '#/components/schemas/ServiceCategoryEnum'
        address:
          $ref: '#/components/schemas/Address'
      type: object
    ServiceProvider:
      description: ServiceProvider is used by PMs to manage the list of service providers
        the work with in the respective category and subcategory
      example:
        address:
          line1: 1 ZestLabs Blvd
          line2: CSS District
          city: Mannheim
          postcode: 680001
          province: Baden-Wuerttemberg
          country: Germany
        created_at: 0
        last_name: last_name
        external_id: external_id
        title: title
        connected: true
        updated_at: 6
        company: company
        phone_number: phone_number
        id: id
        category: null
        first_name: first_name
        email: email
        external_source: external_source
      properties:
        id:
          description: the unique ID of this entry
          type: string
        external_id:
          description: "optional external ID, in case tenancy was created via backend\
            \ integration"
          type: string
        external_source:
          description: "optional external source, in case tenancy was created via\
            \ backend integration"
          type: string
        created_at:
          description: The timestamp of when the tenant was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the tenant was last updated
          format: int64
          type: integer
        title:
          description: "The salutation to be used for the contant person (Miss, Mister)"
          type: string
        first_name:
          description: optional first name of contact person
          type: string
        last_name:
          description: optional last name of contact person
          type: string
        company:
          description: the name of the company
          type: string
        email:
          description: the email address at which the company can be contacted by
            the platform
          type: string
        phone_number:
          description: a phone number at which the company can be reached
          type: string
        category:
          $ref: '#/components/schemas/ServiceCategoryEnum'
        connected:
          description: |
            Indicates whether the service provider has an active account with Udoma. If so, it will be possible to assign cases directly to them.
          type: boolean
        address:
          $ref: '#/components/schemas/Address'
      type: object
    QueryServiceProvidersRequest:
      description: Search criteria for querying service providers
      example:
        connected: null
      properties:
        connected:
          $ref: '#/components/schemas/QueryBooleanParameter'
      type: object
    QueryServiceProvidersResponse:
      description: Response to a query for service providers
      example:
        service_providers:
        - address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          created_at: 0
          last_name: last_name
          external_id: external_id
          title: title
          connected: true
          updated_at: 6
          company: company
          phone_number: phone_number
          id: id
          category: null
          first_name: first_name
          email: email
          external_source: external_source
        - address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          created_at: 0
          last_name: last_name
          external_id: external_id
          title: title
          connected: true
          updated_at: 6
          company: company
          phone_number: phone_number
          id: id
          category: null
          first_name: first_name
          email: email
          external_source: external_source
      properties:
        service_providers:
          description: list of service providers
          items:
            $ref: '#/components/schemas/ServiceProvider'
          type: array
      type: object
    QueryServiceProviderCasesResponse:
      example:
        cases:
        - template: template
          comments:
          - deleted: true
            attachments:
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            updated_at: 2
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 5
            id: id
            content: content
          - deleted: true
            attachments:
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            updated_at: 2
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 5
            id: id
            content: content
          data:
            key: ""
          status_history:
          - author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            action: null
            id: id
            assignee:
              contact_ref: contact_ref
              account_ref: 1
            timestamp: 5
            status: null
          - author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            action: null
            id: id
            assignee:
              contact_ref: contact_ref
              account_ref: 1
            timestamp: 5
            status: null
          created_at: 0
          reporter:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
          feedback:
          - form_data:
              key: ""
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 7
            action: null
            feedback_id: feedback_id
            id: id
            source_status: null
          - form_data:
              key: ""
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 7
            action: null
            feedback_id: feedback_id
            id: id
            source_status: null
          archived: true
          property_address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          updated_at: 6
          property_ref: property_ref
          name: name
          parties:
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          id: id
          assignee:
            contact_ref: contact_ref
            account_ref: 1
          status: null
        - template: template
          comments:
          - deleted: true
            attachments:
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            updated_at: 2
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 5
            id: id
            content: content
          - deleted: true
            attachments:
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            - ref: ref
              thumbnail: thumbnail
              created: 0
              file_type: file_type
              file_name: file_name
              id: id
              file_sha256: file_sha256
              file_size: 6
              url: url
            updated_at: 2
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 5
            id: id
            content: content
          data:
            key: ""
          status_history:
          - author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            action: null
            id: id
            assignee:
              contact_ref: contact_ref
              account_ref: 1
            timestamp: 5
            status: null
          - author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            action: null
            id: id
            assignee:
              contact_ref: contact_ref
              account_ref: 1
            timestamp: 5
            status: null
          created_at: 0
          reporter:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
          feedback:
          - form_data:
              key: ""
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 7
            action: null
            feedback_id: feedback_id
            id: id
            source_status: null
          - form_data:
              key: ""
            visibility:
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            - ref: ref
              role: null
              name: name
              ref_type: ref_type
            author_ref:
              user_role: null
              user_id: user_id
              contact_data:
                address:
                  line1: 1 ZestLabs Blvd
                  line2: CSS District
                  city: Mannheim
                  postcode: 680001
                  province: Baden-Wuerttemberg
                  country: Germany
                last_name: last_name
                company: company
                phone_number: phone_number
                id: id
                title: title
                first_name: first_name
                email: email
            created_at: 7
            action: null
            feedback_id: feedback_id
            id: id
            source_status: null
          archived: true
          property_address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          updated_at: 6
          property_ref: property_ref
          name: name
          parties:
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          - ref: ref
            role: null
            name: name
            ref_type: ref_type
          id: id
          assignee:
            contact_ref: contact_ref
            account_ref: 1
          status: null
      properties:
        cases:
          items:
            $ref: '#/components/schemas/Case'
          type: array
      type: object
    GetSummaryRequest:
      description: Request used to get a summary of the account
      example:
        total_properties: true
        total_service_providers: true
        total_cases: true
        active_document_generation_flows: true
        total_tenancies: true
        total_tenants: true
      properties:
        total_properties:
          description: "If true, the total number of properties will be returned"
          type: boolean
        total_tenants:
          description: "If true, the total number of tenants will be returned"
          type: boolean
        total_tenancies:
          description: "If true, the total number of tenancies will be returned"
          type: boolean
        total_cases:
          description: "If true, the total number of cases will be returned"
          type: boolean
        total_service_providers:
          description: "If true, the total number of service providers will be returned"
          type: boolean
        active_document_generation_flows:
          description: "If true, the total number of document generation flows will\
            \ be returned that were not archived"
          type: boolean
      type: object
    GetSummaryResponse:
      description: Contains a summary of the account
      example:
        total_properties: 0
        total_service_providers: 5
        total_cases: 5
        active_document_generation_flows: 2
        total_tenancies: 1
        total_tenants: 6
      properties:
        total_properties:
          description: The total number of properties
          format: int64
          type: integer
        total_tenants:
          description: The total number of tenants
          format: int64
          type: integer
        total_tenancies:
          description: The total number of tenancies
          format: int64
          type: integer
        total_cases:
          description: The total number of cases
          format: int64
          type: integer
        total_service_providers:
          description: The total number of service providers
          format: int64
          type: integer
        active_document_generation_flows:
          description: The total number of document generation flows that were not
            archived
          format: int64
          type: integer
      type: object
    RentUpdate:
      description: |
        A rent update is a change to the monthly amount due for a rent of a property.
      example:
        tenancy_ref: tenancy_ref
        updated_at: 6
        created_at: 0
        external_id: external_id
        id: id
        entry_into_force: 1
        rent:
          additional_costs:
          - amount: 1.0246457001441578
            name: name
          - amount: 1.0246457001441578
            name: name
          index_month: 7
          index_points: 1.2315135367772556
          rent: 2.027123023002322
          incidentals: 4.145608029883936
        external_source: external_source
        mask: 5
      properties:
        id:
          description: generated unique ID
          type: string
        created_at:
          description: The timestamp of when the tenant was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the tenant was last updated
          format: int64
          type: integer
        external_id:
          description: |
            optional external ID, in case tenancy was created via backend integration
          type: string
        external_source:
          description: |
            optional external source, in case tenancy was created via backend integration
          type: string
        tenancy_ref:
          description: The ID of the tenancy that this update is for
          type: string
        entry_into_force:
          description: The date when the update will enter into force
          format: int64
          type: integer
        rent:
          $ref: '#/components/schemas/RentData'
        mask:
          description: |
            A mask on which fields of rent to update. We cannot leave them empty because the generator doesn't differentiate between 0 and empty.
          type: integer
      required:
      - created_at
      - entry_into_force
      - id
      - rent
      - tenancy_ref
      - updated_at
      type: object
    CreateOrUpdateRentUpdateRequest:
      description: |
        Request issued by a property manager to create a new update for a tenancy
      example:
        entry_into_force: 0
        rent:
          additional_costs:
          - amount: 1.0246457001441578
            name: name
          - amount: 1.0246457001441578
            name: name
          index_month: 7
          index_points: 1.2315135367772556
          rent: 2.027123023002322
          incidentals: 4.145608029883936
        mask: 6
      properties:
        entry_into_force:
          description: |
            The date when the update will enter into force
          format: int64
          type: integer
        rent:
          $ref: '#/components/schemas/RentData'
        mask:
          description: |
            A mask on which fields of rent to update. We cannot leave them empty because the generator doesn't differentiate between 0 and empty.
          type: integer
      required:
      - entry_into_force
      - rent
      type: object
    TenantChange:
      description: |
        A change to the tenants of a property. This is used to indicate that a tenant has moved out or moved in. To be able to know whe stayed in the property, we also provide the list of tenants that remained.
      example:
        tenancy_ref: tenancy_ref
        updated_at: 6
        created_at: 0
        action: null
        external_id: external_id
        id: id
        entry_into_force: 1
        tenant:
          updated_at: 6
          created_at: 1
          last_name: last_name
          external_id: external_id
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
          external_source: external_source
        external_source: external_source
      properties:
        id:
          description: generated unique ID
          type: string
        tenant:
          $ref: '#/components/schemas/Tenant'
        created_at:
          description: The timestamp of when the tenant was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the tenant was last updated
          format: int64
          type: integer
        external_id:
          description: |
            optional external ID, in case tenancy was created via backend integration
          type: string
        external_source:
          description: |
            optional external source, in case tenancy was created via backend integration
          type: string
        tenancy_ref:
          description: The ID of the tenancy that this update is for
          type: string
        entry_into_force:
          description: The date when the update will enter into force
          format: int64
          type: integer
        action:
          $ref: '#/components/schemas/TenantChangeActionEnum'
      required:
      - action
      - created_at
      - entry_into_force
      - id
      - tenancy_ref
      - tenant
      - updated_at
      type: object
    TenantChangeActionEnum:
      description: Indication whether the tenant is moving in or moving out
      enum:
      - MOVE_IN
      - MOVE_OUT
      - REMAIN
      type: string
    CreateTenantChangeRequest:
      description: A list of changes to the tenants.
      example:
        tenant_changes:
        - action: null
          tenant:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
        - action: null
          tenant:
            address:
              line1: 1 ZestLabs Blvd
              line2: CSS District
              city: Mannheim
              postcode: 680001
              province: Baden-Wuerttemberg
              country: Germany
            last_name: last_name
            company: company
            phone_number: phone_number
            id: id
            title: title
            first_name: first_name
            email: email
        entry_into_force: 0
      properties:
        entry_into_force:
          description: |
            The date when the change will enter into force
          format: int64
          type: integer
        tenant_changes:
          description: |
            The list of changes to the tenants.
          items:
            $ref: '#/components/schemas/TenantChanges_inner'
          type: array
      required:
      - entry_into_force
      - tenant_changes
      type: object
    TenantChanges:
      description: |
        The list of changes to the tenants.
      items:
        $ref: '#/components/schemas/TenantChanges_inner'
      type: array
    QueryTenantsRequest:
      description: Search criteria for querying tenants
      example:
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
      type: object
    QueryTenantsResponse:
      description: Result of a tenants query
      example:
        tenants:
        - updated_at: 6
          created_at: 1
          last_name: last_name
          external_id: external_id
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
          external_source: external_source
        - updated_at: 6
          created_at: 1
          last_name: last_name
          external_id: external_id
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
          external_source: external_source
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        tenants:
          items:
            $ref: '#/components/schemas/Tenant'
          type: array
      type: object
    Tenant:
      description: |
        A person or company, renting a particular property.
      example:
        updated_at: 6
        created_at: 1
        last_name: last_name
        external_id: external_id
        company: company
        phone_number: phone_number
        id: id
        title: title
        first_name: first_name
        email: email
        external_source: external_source
      properties:
        id:
          description: generated unique ID
          type: string
        external_id:
          description: |
            optional external ID, in case tenant was created via backend integration
          type: string
        external_source:
          description: |
            optional external source, in case tenant was created via backend integration
          type: string
        created_at:
          description: The timestamp of when the tenant was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the tenant was last updated
          format: int64
          type: integer
        title:
          description: |
            The salutation to be used for the tenant (Miss, Mister, Family)
          type: string
        first_name:
          description: |
            First name(s) of the tenant. In case of a company, this is the first name of the contact person within the company.
          type: string
        last_name:
          description: |
            Last name of the tenant. In case of a company, this is the last name of the contact person within the company.
          type: string
        company:
          description: |
            Name of the company. Only used in case tenancy is between lessor and a company, otherwise this field is empty.
          type: string
        email:
          description: |
            The email address of the tenant. Used for sending communication to them, as well as used for invitations.
          type: string
        phone_number:
          description: |
            The phone number of the tenant. Not directly used by the system, but can be used by managers and service providers to contact the tenant.
          type: string
      required:
      - email
      - first_name
      - id
      - last_name
      - phone_number
      - registered
      - title
      type: object
    CreateOrUpdateTenantRequest:
      description: |
        Request issued by a property manager to create a new tenant, who is not yet assigned to a property
      example:
        last_name: last_name
        company: company
        phone_number: phone_number
        title: title
        first_name: first_name
        email: email
      properties:
        title:
          description: |
            The salutation to be used for the tenant (Miss, Mister, Family)
          type: string
        first_name:
          description: |
            First name(s) of the tenant. In case of a company, this is the first name of the contact person within the company.
          type: string
        last_name:
          description: |
            Last name of the tenant. In case of a company, this is the last name of the contact person within the company.
          type: string
        company:
          description: |
            Name of the company. Only used in case tenancy is between lessor and a company, otherwise this field is empty.
          type: string
        email:
          description: |
            The email address of the tenant. Used for sending communication to them, as well as used for invitations.
          type: string
        phone_number:
          description: |
            The phone number of the tenant. Not directly used by the system, but can be used by managers and service providers to contact the tenant.
          type: string
      type: object
    CreateOrUpdateWorkflowDefinitionRequest:
      description: a request for creating a new or updating an existing workflow
      example:
        first_step_id: first_step_id
        name_expression: name_expression
        billing_id: billing_id
        name: name
        icon: icon
        description: description
        billing_expression: billing_expression
        steps:
        - group_name: group_name
          dynamic_parameters:
            key: dynamic_parameters
          icon: icon
          name: name
          can_be_executed_expression: can_be_executed_expression
          prerun_action:
            button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
          id: id
          type: type
          parameters:
            key: ""
          actions:
          - button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
          - button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
        - group_name: group_name
          dynamic_parameters:
            key: dynamic_parameters
          icon: icon
          name: name
          can_be_executed_expression: can_be_executed_expression
          prerun_action:
            button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
          id: id
          type: type
          parameters:
            key: ""
          actions:
          - button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
          - button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
        released: true
        env_vars:
          key: env_vars
        billing_gate: billing_gate
        init_step:
          group_name: group_name
          dynamic_parameters:
            key: dynamic_parameters
          icon: icon
          name: name
          can_be_executed_expression: can_be_executed_expression
          prerun_action:
            button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
          id: id
          type: type
          parameters:
            key: ""
          actions:
          - button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
          - button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
      properties:
        name:
          type: string
        description:
          type: string
        name_expression:
          description: |
            a JS expression that determines the name of the workflow execution
          type: string
        icon:
          description: |
            The icon of the workflow (shown in the menu). If empty, the default icon  of the workflow type will be used.
          type: string
        env_vars:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        billing_gate:
          description: |
            The ID of the step that will cause billing to be triggered for an  execution of this workflow. If empty, billing will be triggered upon creation of the workflow execution.
          type: string
        billing_id:
          description: |
            The ID of the billing plan that will be used for billing of this workflow. If empty, no billing will be triggered.
          type: string
        billing_expression:
          description: |
            a JS expression that determines the billing plan of the workflow execution. If set, this will override the billing_id.
          type: string
        released:
          description: whether the workflow is released or not
          type: boolean
        first_step_id:
          description: "ID of the first step of the workflow, which will be executed\
            \ when the workflow is started"
          type: string
        init_step:
          $ref: '#/components/schemas/WorkflowStepDefinition'
        steps:
          items:
            $ref: '#/components/schemas/WorkflowStepDefinition'
          type: array
      type: object
    WorkflowStepDefinition:
      description: the definition of a single step within a workflow
      example:
        group_name: group_name
        dynamic_parameters:
          key: dynamic_parameters
        icon: icon
        name: name
        can_be_executed_expression: can_be_executed_expression
        prerun_action:
          button_modifier: button_modifier
          child_execution_iterator_expression: child_execution_iterator_expression
          child_execution_context_expression: child_execution_context_expression
          dynamic_parameters:
            key: dynamic_parameters
          icon: icon
          exec_before: exec_before
          label: label
          next_step_id: next_step_id
          can_be_executed_expression: can_be_executed_expression
          ui_filter: ui_filter
          id: id
          parameters:
            key: ""
          exec_after: exec_after
          start_child_workflow: start_child_workflow
        id: id
        type: type
        parameters:
          key: ""
        actions:
        - button_modifier: button_modifier
          child_execution_iterator_expression: child_execution_iterator_expression
          child_execution_context_expression: child_execution_context_expression
          dynamic_parameters:
            key: dynamic_parameters
          icon: icon
          exec_before: exec_before
          label: label
          next_step_id: next_step_id
          can_be_executed_expression: can_be_executed_expression
          ui_filter: ui_filter
          id: id
          parameters:
            key: ""
          exec_after: exec_after
          start_child_workflow: start_child_workflow
        - button_modifier: button_modifier
          child_execution_iterator_expression: child_execution_iterator_expression
          child_execution_context_expression: child_execution_context_expression
          dynamic_parameters:
            key: dynamic_parameters
          icon: icon
          exec_before: exec_before
          label: label
          next_step_id: next_step_id
          can_be_executed_expression: can_be_executed_expression
          ui_filter: ui_filter
          id: id
          parameters:
            key: ""
          exec_after: exec_after
          start_child_workflow: start_child_workflow
      nullable: true
      properties:
        id:
          description: "the ID of the step, unique within the workflow"
          type: string
        type:
          description: the type of the step
          type: string
        icon:
          description: |
            The icon of the step (shown in the menu). If empty, the default icon  of the step type will be used.
          type: string
        name:
          description: |
            The name of the step (shown as title and in the menu). If empty, the  default name of the step type will be used.
          type: string
        group_name:
          description: |
            Optional name of the group of the step. If a group is provided, steps within the same group will be grouped together in the UI as a drawer.
          type: string
        parameters:
          additionalProperties: true
          description: |
            a parameter of a workflow step or step action. The value of the parameter is contextual and can vary in type and meaning depending on the step or action that uses it. If used in a step, the parameter will be available in the UI and will not be interpreted, i.e. JS expressions are not allowed. In actions however, the parameter might be interpreted as a JS expression, if the action type requires it.
          type: object
        dynamic_parameters:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        prerun_action:
          $ref: '#/components/schemas/WorkflowStepActionDefinition'
        can_be_executed_expression:
          description: |
            An optional JS expression that determines whether the step can be executed or  not. If not set, this will default to true, once the previous step has been  executed.
          type: string
        actions:
          items:
            $ref: '#/components/schemas/WorkflowStepActionDefinition'
          type: array
      type: object
    WorkflowParameters:
      additionalProperties: true
      description: |
        a parameter of a workflow step or step action. The value of the parameter is contextual and can vary in type and meaning depending on the step or action that uses it. If used in a step, the parameter will be available in the UI and will not be interpreted, i.e. JS expressions are not allowed. In actions however, the parameter might be interpreted as a JS expression, if the action type requires it.
      type: object
    WorkflowStepActionDefinition:
      description: an action that can be performed on a workflow step
      example:
        button_modifier: button_modifier
        child_execution_iterator_expression: child_execution_iterator_expression
        child_execution_context_expression: child_execution_context_expression
        dynamic_parameters:
          key: dynamic_parameters
        icon: icon
        exec_before: exec_before
        label: label
        next_step_id: next_step_id
        can_be_executed_expression: can_be_executed_expression
        ui_filter: ui_filter
        id: id
        parameters:
          key: ""
        exec_after: exec_after
        start_child_workflow: start_child_workflow
      properties:
        id:
          description: the ID of the action
          type: string
        icon:
          description: the icon of the action
          type: string
        label:
          description: the button label for the action
          type: string
        button_modifier:
          description: optional button modifier of the action
          type: string
        ui_filter:
          description: optional filter that can be used by the UI to show or hide
            the action
          type: string
        parameters:
          additionalProperties: true
          description: |
            a parameter of a workflow step or step action. The value of the parameter is contextual and can vary in type and meaning depending on the step or action that uses it. If used in a step, the parameter will be available in the UI and will not be interpreted, i.e. JS expressions are not allowed. In actions however, the parameter might be interpreted as a JS expression, if the action type requires it.
          type: object
        dynamic_parameters:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        can_be_executed_expression:
          description: |
            An optional JS expression that determines whether the action can be executed or  not. If not set, this will default to true. If the expression returns false, the action will not show up in the UI.
          type: string
        next_step_id:
          description: the ID of the next step of the workflow
          type: string
        exec_before:
          description: |
            Optional JS expression that will be executed before any step- and action-specific logic is executed.
          type: string
        exec_after:
          description: |
            Optional JS expression that will be executed after the step- and action-specific logic is executed.
          type: string
        start_child_workflow:
          description: optional ID of a workflow definition that should be executed
          type: string
        child_execution_iterator_expression:
          description: |
            An optional JS expression that returns an array of entities. For each entity, a new workflow execution will be started. The entity will be available as a parameter `iterator` in the child execution context expression.
          type: string
        child_execution_context_expression:
          description: |
            An optional JS expression that determines the context of the child workflow execution. If not set, the context of the parent workflow execution will be used.
          type: string
      type: object
    WorkflowDefinition:
      description: a workflow that can guide the user through a process
      example:
        first_step_id: first_step_id
        name_expression: name_expression
        billing_id: billing_id
        icon: icon
        created_at: 0
        description: description
        billing_expression: billing_expression
        steps:
        - group_name: group_name
          dynamic_parameters:
            key: dynamic_parameters
          icon: icon
          name: name
          can_be_executed_expression: can_be_executed_expression
          prerun_action:
            button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
          id: id
          type: type
          parameters:
            key: ""
          actions:
          - button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
          - button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
        - group_name: group_name
          dynamic_parameters:
            key: dynamic_parameters
          icon: icon
          name: name
          can_be_executed_expression: can_be_executed_expression
          prerun_action:
            button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
          id: id
          type: type
          parameters:
            key: ""
          actions:
          - button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
          - button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
        env_vars:
          key: env_vars
        billing_gate: billing_gate
        updated_at: 6
        name: name
        id: id
        released: true
        init_step:
          group_name: group_name
          dynamic_parameters:
            key: dynamic_parameters
          icon: icon
          name: name
          can_be_executed_expression: can_be_executed_expression
          prerun_action:
            button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
          id: id
          type: type
          parameters:
            key: ""
          actions:
          - button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
          - button_modifier: button_modifier
            child_execution_iterator_expression: child_execution_iterator_expression
            child_execution_context_expression: child_execution_context_expression
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            exec_before: exec_before
            label: label
            next_step_id: next_step_id
            can_be_executed_expression: can_be_executed_expression
            ui_filter: ui_filter
            id: id
            parameters:
              key: ""
            exec_after: exec_after
            start_child_workflow: start_child_workflow
      properties:
        id:
          type: string
        created_at:
          description: The timestamp of when the workflow was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the workflow was last updated
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        icon:
          description: |
            The icon of the workflow (shown in the menu). If empty, a default icon  will be used.
          type: string
        name_expression:
          description: |
            a JS expression that determines the name of the workflow execution
          type: string
        env_vars:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        billing_gate:
          description: |
            The ID of the step that will cause billing to be triggered for an  execution of this workflow. If empty, billing will be triggered upon creation of the workflow execution.
          type: string
        billing_id:
          description: |
            The ID of the billing plan that will be used for billing of this workflow. If empty, no billing will be triggered.
          type: string
        billing_expression:
          description: |
            a JS expression that determines the billing plan of the workflow execution. If set, this will override the billing_id.
          type: string
        released:
          description: whether the workflow is released or not
          type: boolean
        init_step:
          $ref: '#/components/schemas/WorkflowStepDefinition'
        first_step_id:
          description: "ID of the first step of the workflow, which will be executed\
            \ when the workflow is started"
          type: string
        steps:
          items:
            $ref: '#/components/schemas/WorkflowStepDefinition'
          type: array
      type: object
    QueryWorkflowDefinitionsRequest:
      description: a request for querying workflow definitions
      example:
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
      type: object
    QueryWorkflowDefinitionsResponse:
      description: a response for querying workflow definitions
      example:
        workflows:
        - first_step_id: first_step_id
          name_expression: name_expression
          billing_id: billing_id
          icon: icon
          created_at: 0
          description: description
          billing_expression: billing_expression
          steps:
          - group_name: group_name
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            name: name
            can_be_executed_expression: can_be_executed_expression
            prerun_action:
              button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
            id: id
            type: type
            parameters:
              key: ""
            actions:
            - button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
            - button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
          - group_name: group_name
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            name: name
            can_be_executed_expression: can_be_executed_expression
            prerun_action:
              button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
            id: id
            type: type
            parameters:
              key: ""
            actions:
            - button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
            - button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
          env_vars:
            key: env_vars
          billing_gate: billing_gate
          updated_at: 6
          name: name
          id: id
          released: true
          init_step:
            group_name: group_name
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            name: name
            can_be_executed_expression: can_be_executed_expression
            prerun_action:
              button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
            id: id
            type: type
            parameters:
              key: ""
            actions:
            - button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
            - button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
        - first_step_id: first_step_id
          name_expression: name_expression
          billing_id: billing_id
          icon: icon
          created_at: 0
          description: description
          billing_expression: billing_expression
          steps:
          - group_name: group_name
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            name: name
            can_be_executed_expression: can_be_executed_expression
            prerun_action:
              button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
            id: id
            type: type
            parameters:
              key: ""
            actions:
            - button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
            - button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
          - group_name: group_name
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            name: name
            can_be_executed_expression: can_be_executed_expression
            prerun_action:
              button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
            id: id
            type: type
            parameters:
              key: ""
            actions:
            - button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
            - button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
          env_vars:
            key: env_vars
          billing_gate: billing_gate
          updated_at: 6
          name: name
          id: id
          released: true
          init_step:
            group_name: group_name
            dynamic_parameters:
              key: dynamic_parameters
            icon: icon
            name: name
            can_be_executed_expression: can_be_executed_expression
            prerun_action:
              button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
            id: id
            type: type
            parameters:
              key: ""
            actions:
            - button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
            - button_modifier: button_modifier
              child_execution_iterator_expression: child_execution_iterator_expression
              child_execution_context_expression: child_execution_context_expression
              dynamic_parameters:
                key: dynamic_parameters
              icon: icon
              exec_before: exec_before
              label: label
              next_step_id: next_step_id
              can_be_executed_expression: can_be_executed_expression
              ui_filter: ui_filter
              id: id
              parameters:
                key: ""
              exec_after: exec_after
              start_child_workflow: start_child_workflow
      properties:
        workflows:
          items:
            $ref: '#/components/schemas/WorkflowDefinition'
          type: array
      type: object
    CreateOrUpdateWorkflowEntrypointRequest:
      description: an app entrypoint to a workflow execution
      example:
        init_script: init_script
        workflow_definition_ref: workflow_definition_ref
        app_location: null
        icon: icon
        label:
          key: label
        skip_init_step: true
        location_filter: location_filter
      properties:
        workflow_definition_ref:
          description: the ID of the workflow definition
          type: string
        app_location:
          $ref: '#/components/schemas/WorkflowEntrypointLocation'
        location_filter:
          description: |
            optional filter that can be used to limit where the entrypoint is shown, e.g. for cases this can be the case template, for reports this can be the report  definition, etc.
          type: string
        icon:
          description: |
            Optional icon of the entrypoint
          type: string
        label:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        init_script:
          description: optional JS script to be executed before the workflow is started
          type: string
        skip_init_step:
          description: whether the init step should be skipped or not
          type: boolean
      type: object
    WorkflowEntrypointLocation:
      enum:
      - manual
      - property
      - tenancy
      - tenant
      - case
      - report
      type: string
    WorkflowEntrypoint:
      description: an app entrypoint to a workflow execution
      example:
        init_script: init_script
        updated_at: 6
        workflow_definition_ref: workflow_definition_ref
        app_location: null
        icon: icon
        created_at: 0
        id: id
        label:
          key: label
        skip_init_step: true
        location_filter: location_filter
      properties:
        id:
          description: the ID of the entrypoint
          type: string
        created_at:
          description: The timestamp of when the workflow was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the workflow was last updated
          format: int64
          type: integer
        workflow_definition_ref:
          description: the ID of the workflow definition
          type: string
        app_location:
          $ref: '#/components/schemas/WorkflowEntrypointLocation'
        location_filter:
          description: |
            optional filter that can be used to limit where the entrypoint is shown, e.g. for cases this can be the case template, for reports this can be the report  definition, etc.
          type: string
        icon:
          description: |
            Optional icon of the entrypoint
          type: string
        label:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        init_script:
          description: optional JS script to be executed before the workflow is started
          type: string
        skip_init_step:
          description: whether the init step should be skipped or not
          type: boolean
      type: object
    ExecuteWorkflowEntrypointRequest:
      description: a request for starting a workflow execution via an entry point
      example:
        data:
          key: ""
        source_ref: source_ref
      properties:
        source_ref:
          description: "optional ID of the source object, for which this entrypoint\
            \ was triggered"
          type: string
        data:
          additionalProperties: true
          description: "the data to be passed to the workflow execution \n"
          type: object
      type: object
    WorkflowExecutionResponse:
      description: a response for starting or executing a step in a workflow execution
      example:
        result: result
        next_step: next_step
        success: true
        workflow_execution:
          definition_ref: definition_ref
          created_at: 0
          step_history:
          - data: data
            executed_at: 1
            action: action
            step_ref: step_ref
          - data: data
            executed_at: 1
            action: action
            step_ref: step_ref
          steps:
          - can_be_executed: true
            group_name: group_name
            icon: icon
            name: name
            id: id
            type: type
            parameters:
              key: ""
            actions:
            - next_step_id: next_step_id
              button_modifier: button_modifier
              icon: icon
              ui_filter: ui_filter
              id: id
              label: label
            - next_step_id: next_step_id
              button_modifier: button_modifier
              icon: icon
              ui_filter: ui_filter
              id: id
              label: label
            is_completed: true
          - can_be_executed: true
            group_name: group_name
            icon: icon
            name: name
            id: id
            type: type
            parameters:
              key: ""
            actions:
            - next_step_id: next_step_id
              button_modifier: button_modifier
              icon: icon
              ui_filter: ui_filter
              id: id
              label: label
            - next_step_id: next_step_id
              button_modifier: button_modifier
              icon: icon
              ui_filter: ui_filter
              id: id
              label: label
            is_completed: true
          parent_ref: parent_ref
          archived: true
          updated_at: 6
          name: name
          context: context
          id: id
          current_step_name: current_step_name
          status: null
          current_step: current_step
      properties:
        success:
          type: boolean
        result:
          description: the result of the workflow execution as JSON
          type: string
        next_step:
          description: the ID of the next step of the workflow execution
          type: string
        workflow_execution:
          $ref: '#/components/schemas/WorkflowExecution'
      type: object
    WorkflowExecution:
      description: contains all information of the execution of a single workflow
      example:
        definition_ref: definition_ref
        created_at: 0
        step_history:
        - data: data
          executed_at: 1
          action: action
          step_ref: step_ref
        - data: data
          executed_at: 1
          action: action
          step_ref: step_ref
        steps:
        - can_be_executed: true
          group_name: group_name
          icon: icon
          name: name
          id: id
          type: type
          parameters:
            key: ""
          actions:
          - next_step_id: next_step_id
            button_modifier: button_modifier
            icon: icon
            ui_filter: ui_filter
            id: id
            label: label
          - next_step_id: next_step_id
            button_modifier: button_modifier
            icon: icon
            ui_filter: ui_filter
            id: id
            label: label
          is_completed: true
        - can_be_executed: true
          group_name: group_name
          icon: icon
          name: name
          id: id
          type: type
          parameters:
            key: ""
          actions:
          - next_step_id: next_step_id
            button_modifier: button_modifier
            icon: icon
            ui_filter: ui_filter
            id: id
            label: label
          - next_step_id: next_step_id
            button_modifier: button_modifier
            icon: icon
            ui_filter: ui_filter
            id: id
            label: label
          is_completed: true
        parent_ref: parent_ref
        archived: true
        updated_at: 6
        name: name
        context: context
        id: id
        current_step_name: current_step_name
        status: null
        current_step: current_step
      properties:
        id:
          description: the unique ID generated when the workflow execution was started
          type: string
        created_at:
          description: The timestamp of when the workflow execution was created
          format: int64
          type: integer
        updated_at:
          description: The timestamp of when the workflow execution was last updated
          format: int64
          type: integer
        definition_ref:
          description: the ID of the workflow definition on which the workflow execution
            is based
          type: string
        parent_ref:
          description: optional ID of the parent workflow execution
          type: string
        name:
          description: the name of the workflow execution generated by the name expression
            of the workflow definition
          type: string
        status:
          $ref: '#/components/schemas/WorkflowExecutionStatus'
        archived:
          description: whether the workflow execution is archived or not
          type: boolean
        current_step:
          description: |
            the ID of the step that is the current step of the workflow execution, i.e. it's  the next step to be executed
          type: string
        current_step_name:
          description: |
            the name of the step that is the current step of the workflow execution. This is used in the UI to display the current step, without loading the step definition.
          type: string
        context:
          description: |
            the data collected and generated during the workflow execution, serialiased as JSON
          type: string
        steps:
          description: |
            the steps of the workflow execution, including the result of the execution of each step
          items:
            $ref: '#/components/schemas/WorkflowExecutionStep'
          type: array
        step_history:
          items:
            $ref: '#/components/schemas/WorkflowExecutionStepResult'
          type: array
      type: object
    WorkflowExecutionStatus:
      enum:
      - started
      - finished
      - canceled
      - archived
      type: string
    WorkflowExecutionStep:
      description: |
        a single step within a workflow execution. This is derived from the step definition, however, dynamic data is computed and populated by the backend, before the result is  being sent to the client.
      example:
        can_be_executed: true
        group_name: group_name
        icon: icon
        name: name
        id: id
        type: type
        parameters:
          key: ""
        actions:
        - next_step_id: next_step_id
          button_modifier: button_modifier
          icon: icon
          ui_filter: ui_filter
          id: id
          label: label
        - next_step_id: next_step_id
          button_modifier: button_modifier
          icon: icon
          ui_filter: ui_filter
          id: id
          label: label
        is_completed: true
      nullable: true
      properties:
        id:
          description: "the ID of the step, unique within the workflow"
          type: string
        type:
          description: the type of the step
          type: string
        icon:
          description: |
            The icon of the step (shown in the menu). If empty, the default icon  of the step type will be used.
          type: string
        name:
          description: |
            The name of the step (shown as title and in the menu). If empty, the  default name of the step type will be used.
          type: string
        parameters:
          additionalProperties: true
          description: |
            a parameter of a workflow step or step action. The value of the parameter is contextual and can vary in type and meaning depending on the step or action that uses it. If used in a step, the parameter will be available in the UI and will not be interpreted, i.e. JS expressions are not allowed. In actions however, the parameter might be interpreted as a JS expression, if the action type requires it.
          type: object
        group_name:
          description: |
            Optional name of the group of the step. If a group is provided, steps within the same group will be grouped together in the UI as a drawer.
          type: string
        actions:
          items:
            $ref: '#/components/schemas/WorkflowStepAction'
          type: array
        is_completed:
          description: |
            Indicates whether the step has been completed or not.
          type: boolean
        can_be_executed:
          description: |
            Indicates whether the step can be executed or not.
          type: boolean
      type: object
    WorkflowStepAction:
      description: |
        an action that can be performed on a workflow execution step. This is derived from the step action definition, however, dynamic data is computed and populated by the backend, before the result is being sent to the client.
      example:
        next_step_id: next_step_id
        button_modifier: button_modifier
        icon: icon
        ui_filter: ui_filter
        id: id
        label: label
      properties:
        id:
          description: the ID of the action
          type: string
        icon:
          description: the icon of the action
          type: string
        label:
          description: the button label for the action
          type: string
        button_modifier:
          description: optional button modifier of the action
          type: string
        ui_filter:
          description: optional filter that can be used by the UI to show or hide
            the action
          type: string
        next_step_id:
          description: the ID of the next step of the workflow
          type: string
      type: object
    WorkflowExecutionStepResult:
      description: |
        this holds the result of the execution of a single workflow step
      example:
        data: data
        executed_at: 1
        action: action
        step_ref: step_ref
      properties:
        step_ref:
          type: string
        action:
          description: the ID of the action that was executed
          type: string
        executed_at:
          description: The timestamp of when the workflow step execution was executed
          format: int64
          type: integer
        data:
          description: the result of the workflow step execution as JSON
          type: string
      type: object
    QueryWorkflowExecutionsRequest:
      description: a request for querying workflow executions
      example:
        parent_workflow_execution_ref: parent_workflow_execution_ref
        archived: null
        limit: 0
        active: null
        finished: null
        workflow_ref: workflow_ref
      properties:
        workflow_ref:
          nullable: true
          type: string
        parent_workflow_execution_ref:
          nullable: true
          type: string
        active:
          $ref: '#/components/schemas/QueryBooleanParameter'
        finished:
          $ref: '#/components/schemas/QueryBooleanParameter'
        archived:
          $ref: '#/components/schemas/QueryBooleanParameter'
        limit:
          format: int32
          type: integer
      type: object
    QueryWorkflowExecutionsResponse:
      description: a response for querying workflow executions
      example:
        workflow_executions:
        - definition_ref: definition_ref
          created_at: 0
          step_history:
          - data: data
            executed_at: 1
            action: action
            step_ref: step_ref
          - data: data
            executed_at: 1
            action: action
            step_ref: step_ref
          steps:
          - can_be_executed: true
            group_name: group_name
            icon: icon
            name: name
            id: id
            type: type
            parameters:
              key: ""
            actions:
            - next_step_id: next_step_id
              button_modifier: button_modifier
              icon: icon
              ui_filter: ui_filter
              id: id
              label: label
            - next_step_id: next_step_id
              button_modifier: button_modifier
              icon: icon
              ui_filter: ui_filter
              id: id
              label: label
            is_completed: true
          - can_be_executed: true
            group_name: group_name
            icon: icon
            name: name
            id: id
            type: type
            parameters:
              key: ""
            actions:
            - next_step_id: next_step_id
              button_modifier: button_modifier
              icon: icon
              ui_filter: ui_filter
              id: id
              label: label
            - next_step_id: next_step_id
              button_modifier: button_modifier
              icon: icon
              ui_filter: ui_filter
              id: id
              label: label
            is_completed: true
          parent_ref: parent_ref
          archived: true
          updated_at: 6
          name: name
          context: context
          id: id
          current_step_name: current_step_name
          status: null
          current_step: current_step
        - definition_ref: definition_ref
          created_at: 0
          step_history:
          - data: data
            executed_at: 1
            action: action
            step_ref: step_ref
          - data: data
            executed_at: 1
            action: action
            step_ref: step_ref
          steps:
          - can_be_executed: true
            group_name: group_name
            icon: icon
            name: name
            id: id
            type: type
            parameters:
              key: ""
            actions:
            - next_step_id: next_step_id
              button_modifier: button_modifier
              icon: icon
              ui_filter: ui_filter
              id: id
              label: label
            - next_step_id: next_step_id
              button_modifier: button_modifier
              icon: icon
              ui_filter: ui_filter
              id: id
              label: label
            is_completed: true
          - can_be_executed: true
            group_name: group_name
            icon: icon
            name: name
            id: id
            type: type
            parameters:
              key: ""
            actions:
            - next_step_id: next_step_id
              button_modifier: button_modifier
              icon: icon
              ui_filter: ui_filter
              id: id
              label: label
            - next_step_id: next_step_id
              button_modifier: button_modifier
              icon: icon
              ui_filter: ui_filter
              id: id
              label: label
            is_completed: true
          parent_ref: parent_ref
          archived: true
          updated_at: 6
          name: name
          context: context
          id: id
          current_step_name: current_step_name
          status: null
          current_step: current_step
      properties:
        workflow_executions:
          items:
            $ref: '#/components/schemas/WorkflowExecution'
          type: array
      type: object
    StartWorkflowExecutionRequest:
      description: a request for starting a workflow execution
      example:
        parent_workflow_execution_ref: parent_workflow_execution_ref
        context: context
        workflow_ref: workflow_ref
      properties:
        workflow_ref:
          type: string
        parent_workflow_execution_ref:
          type: string
        context:
          description: |
            the initial context of the workflow execution as JSON
          type: string
      type: object
    UpdateWorkflowExecutionRequest:
      description: a request for updating a workflow execution
      example:
        status: null
      properties:
        status:
          $ref: '#/components/schemas/WorkflowExecutionStatus'
      type: object
    ExecuteWorkflowStepRequest:
      description: a request for executing a workflow step
      example:
        data: data
        action: action
        step_ref: step_ref
      properties:
        step_ref:
          type: string
        action:
          description: the action that was executed on the step
          type: string
        data:
          description: |
            the data to be used for executing the workflow step as JSON
          type: string
      type: object
    WorkflowTrigger:
      description: information for the trigger of a workflow execution
      example:
        entrypoint_type: null
        execution_ref: execution_ref
        created_at: 0
        source_ref: source_ref
        label: label
      properties:
        execution_ref:
          description: the ID of the workflow execution
          type: string
        entrypoint_type:
          $ref: '#/components/schemas/WorkflowEntrypointLocation'
        source_ref:
          description: the ID of the source object
          type: string
        created_at:
          description: The timestamp of when the workflow was created
          format: int64
          type: integer
        label:
          description: the name of the related workflow execution
          type: string
      type: object
    ValueMap:
      additionalProperties:
        type: string
      description: "a map of values, where the key and values are strings"
      type: object
    CustomForm:
      description: a custom form that is used to collect data from the user
      example:
        layout:
        - ref_id: ref_id
          ref_type: ref_type
        - ref_id: ref_id
          ref_type: ref_type
        inputs:
        - propagate_changes: true
          view_label:
            key: view_label
          ephemeral: true
          default_value: default_value
          attributes:
            key: attributes
          id: id
          label:
            key: label
          placeholder:
            key: placeholder
          type: type
          items:
          - items
          - items
          required: true
          target: target
        - propagate_changes: true
          view_label:
            key: view_label
          ephemeral: true
          default_value: default_value
          attributes:
            key: attributes
          id: id
          label:
            key: label
          placeholder:
            key: placeholder
          type: type
          items:
          - items
          - items
          required: true
          target: target
        groups:
        - use_item_group: true
          bottom_divider: true
          top_divider: true
          min_size: 6
          id: id
          label:
            key: label
          type: type
          items:
          - ref_id: ref_id
            ref_type: ref_type
          - ref_id: ref_id
            ref_type: ref_type
          info:
            key: info
          target: target
        - use_item_group: true
          bottom_divider: true
          top_divider: true
          min_size: 6
          id: id
          label:
            key: label
          type: type
          items:
          - ref_id: ref_id
            ref_type: ref_type
          - ref_id: ref_id
            ref_type: ref_type
          info:
            key: info
          target: target
        validations:
        - expression: expression
          id: id
          message:
            key: message
          target: target
        - expression: expression
          id: id
          message:
            key: message
          target: target
      properties:
        layout:
          description: "the layout of the form, which groups and inputs will be displayed"
          items:
            $ref: '#/components/schemas/FormItem'
          type: array
        groups:
          description: the groups of inputs that will be displayed to the user
          items:
            $ref: '#/components/schemas/FormGroup'
          type: array
        inputs:
          description: the inputs that will be displayed to the user
          items:
            $ref: '#/components/schemas/FormInput'
          type: array
        validations:
          description: the validations that will be performed on the data provided
            by the user
          items:
            $ref: '#/components/schemas/FormValidation'
          type: array
      type: object
    FormItem:
      description: "an item in a form group, referencing another entity in the form"
      example:
        ref_id: ref_id
        ref_type: ref_type
      properties:
        ref_id:
          description: the ID of the entity that will be referenced
          type: string
        ref_type:
          $ref: '#/components/schemas/FormItemType'
      type: object
    FormItemType:
      enum:
      - input
      - group
      - slot
      type: string
    FormGroup:
      description: a group of inputs that will be displayed together in the UI
      example:
        use_item_group: true
        bottom_divider: true
        top_divider: true
        min_size: 6
        id: id
        label:
          key: label
        type: type
        items:
        - ref_id: ref_id
          ref_type: ref_type
        - ref_id: ref_id
          ref_type: ref_type
        info:
          key: info
        target: target
      properties:
        id:
          description: the ID of the group
          type: string
        type:
          $ref: '#/components/schemas/FormGroupType'
        label:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        info:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        items:
          description: the IDs of the inputs that will be displayed in the group
          items:
            $ref: '#/components/schemas/FormItem'
          type: array
        target:
          description: the attribute name to use when exporting the result of this
            group (only used for repeat groups)
          type: string
        top_divider:
          description: "if true, a divider will be displayed above the group"
          type: boolean
        bottom_divider:
          description: "if true, a divider will be displayed below the group"
          type: boolean
        use_item_group:
          description: "if true, the inputs will be displayed in a group, otherwise\
            \ they will be displayed in a row"
          type: boolean
        min_size:
          description: the minimum number of items that must be submitted in the group
            (only used for repeat groups)
          type: integer
      type: object
    FormGroupType:
      enum:
      - section
      - repeat_group
      - row
      type: string
    FormInput:
      description: a custom input that is used in dynamic forms to collect data from
        the user
      example:
        propagate_changes: true
        view_label:
          key: view_label
        ephemeral: true
        default_value: default_value
        attributes:
          key: attributes
        id: id
        label:
          key: label
        placeholder:
          key: placeholder
        type: type
        items:
        - items
        - items
        required: true
        target: target
      properties:
        id:
          description: "the ID of the input field, used to identify it and later access\
            \ the data"
          type: string
        label:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        view_label:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        placeholder:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        type:
          $ref: '#/components/schemas/FormInputType'
        default_value:
          description: optional default value for the input field (as a JSON string)
          type: string
        required:
          description: "if true, the user will be required to provide a value"
          type: boolean
        ephemeral:
          description: "if true, the value of the input will not be persisted"
          type: boolean
        propagate_changes:
          description: "if true, changes to the input will be propagated to event\
            \ listeners for the custom form"
          type: boolean
        target:
          description: the attribute name to use when exporting the result of this
            input
          type: string
        attributes:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
        items:
          description: only used when the type is select or multi select. This is
            a list of values that the user can choose from
          items:
            type: string
          type: array
      type: object
    FormInputType:
      enum:
      - text
      - number
      - date
      - boolean
      - single_select
      - multi_select
      - file
      - id_upload
      - address
      - contact_data
      - rent
      - bank_account
      - yes_no_or_value
      - service_provider_ref
      - reporter
      - property
      - case_party
      type: string
    FormValidation:
      description: a custom validation that is used to validate data provided by the
        user
      example:
        expression: expression
        id: id
        message:
          key: message
        target: target
      properties:
        id:
          description: "the ID of the validation, used to identify it"
          type: string
        expression:
          description: a JS expression that will be evaluated to determine if the
            validation passes or fails
          type: string
        target:
          description: the index of the input should be highlighted if the validation
            fails (nesting is supported via dot notation)
          type: string
        message:
          additionalProperties:
            type: string
          description: "a map of values, where the key and values are strings"
          type: object
      type: object
    FloatNumber:
      example:
        f: 5
        i: 5
      properties:
        i:
          description: the integer value (the part before the decimal point)
          format: int32
          type: integer
        f:
          description: the fractiopnal value (the part after the decimal point)
          format: int32
          type: integer
      type: object
    QueryBooleanParameter:
      enum:
      - IS_TRUE
      - IS_FALSE
      - ANY
      type: string
    ServiceCategoryEnum:
      enum:
      - OTHERS
      - ARCHITECT
      - CARPENTER
      - CHIMNEY_SWEEP
      - CLEANING_AND_WASTE_DISPOSAL
      - DOORS_AND_WINDOWS
      - ELECTRICIAN
      - ELEVATOR_AND_LIFT
      - FLOORING
      - GARDENING
      - HEATING
      - INSURANCE
      - INSTALLATION
      - JANITOR
      - LOCKSMITH
      - MASONRY
      - METER_READING
      - KEY_SERVICE
      - PAINTING
      - PEST_CONTROL
      - ROOFER
      - SANITARY
      - SOLAR_PANELS
      - TILER
      - VENTILATION_AND_AIR_CONDITIONING
      type: string
    publicUploadAttachment_request:
      properties:
        data:
          format: binary
          type: string
      type: object
    CaseReportingEndpointCategory_templates_inner:
      example:
        id: id
        priority: 5
      properties:
        id:
          description: |
            The ID of the Case Template
          type: string
        priority:
          description: |
            The priority of the Template, used to decide the order in which to display the tempaltes in the category.
          format: int32
          type: integer
      type: object
    TenantChanges_inner:
      example:
        action: null
        tenant:
          address:
            line1: 1 ZestLabs Blvd
            line2: CSS District
            city: Mannheim
            postcode: 680001
            province: Baden-Wuerttemberg
            country: Germany
          last_name: last_name
          company: company
          phone_number: phone_number
          id: id
          title: title
          first_name: first_name
          email: email
      properties:
        tenant:
          $ref: '#/components/schemas/ContactData'
        action:
          $ref: '#/components/schemas/TenantChangeActionEnum'
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
