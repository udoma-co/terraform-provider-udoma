/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateOrUpdateBankAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateBankAccountRequest{}

// CreateOrUpdateBankAccountRequest The data required to create a new bank account
type CreateOrUpdateBankAccountRequest struct {
	// The name of the account holder (required)
	AccountHolder string `json:"account_holder"`
	// The IBAN of the bank account (required)
	Iban string `json:"iban"`
	// The BIC of the bank account (optional)
	Bic *string `json:"bic,omitempty"`
	// The name of the bank (optional)
	BankName *string `json:"bank_name,omitempty"`
	// A user friendly label, used to identify the account (optional)
	Description *string `json:"description,omitempty"`
}

type _CreateOrUpdateBankAccountRequest CreateOrUpdateBankAccountRequest

// NewCreateOrUpdateBankAccountRequest instantiates a new CreateOrUpdateBankAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateBankAccountRequest(accountHolder string, iban string) *CreateOrUpdateBankAccountRequest {
	this := CreateOrUpdateBankAccountRequest{}
	this.AccountHolder = accountHolder
	this.Iban = iban
	return &this
}

// NewCreateOrUpdateBankAccountRequestWithDefaults instantiates a new CreateOrUpdateBankAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateBankAccountRequestWithDefaults() *CreateOrUpdateBankAccountRequest {
	this := CreateOrUpdateBankAccountRequest{}
	return &this
}

// GetAccountHolder returns the AccountHolder field value
func (o *CreateOrUpdateBankAccountRequest) GetAccountHolder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountHolder
}

// GetAccountHolderOk returns a tuple with the AccountHolder field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateBankAccountRequest) GetAccountHolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountHolder, true
}

// SetAccountHolder sets field value
func (o *CreateOrUpdateBankAccountRequest) SetAccountHolder(v string) {
	o.AccountHolder = v
}

// GetIban returns the Iban field value
func (o *CreateOrUpdateBankAccountRequest) GetIban() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Iban
}

// GetIbanOk returns a tuple with the Iban field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateBankAccountRequest) GetIbanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Iban, true
}

// SetIban sets field value
func (o *CreateOrUpdateBankAccountRequest) SetIban(v string) {
	o.Iban = v
}

// GetBic returns the Bic field value if set, zero value otherwise.
func (o *CreateOrUpdateBankAccountRequest) GetBic() string {
	if o == nil || IsNil(o.Bic) {
		var ret string
		return ret
	}
	return *o.Bic
}

// GetBicOk returns a tuple with the Bic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateBankAccountRequest) GetBicOk() (*string, bool) {
	if o == nil || IsNil(o.Bic) {
		return nil, false
	}
	return o.Bic, true
}

// HasBic returns a boolean if a field has been set.
func (o *CreateOrUpdateBankAccountRequest) HasBic() bool {
	if o != nil && !IsNil(o.Bic) {
		return true
	}

	return false
}

// SetBic gets a reference to the given string and assigns it to the Bic field.
func (o *CreateOrUpdateBankAccountRequest) SetBic(v string) {
	o.Bic = &v
}

// GetBankName returns the BankName field value if set, zero value otherwise.
func (o *CreateOrUpdateBankAccountRequest) GetBankName() string {
	if o == nil || IsNil(o.BankName) {
		var ret string
		return ret
	}
	return *o.BankName
}

// GetBankNameOk returns a tuple with the BankName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateBankAccountRequest) GetBankNameOk() (*string, bool) {
	if o == nil || IsNil(o.BankName) {
		return nil, false
	}
	return o.BankName, true
}

// HasBankName returns a boolean if a field has been set.
func (o *CreateOrUpdateBankAccountRequest) HasBankName() bool {
	if o != nil && !IsNil(o.BankName) {
		return true
	}

	return false
}

// SetBankName gets a reference to the given string and assigns it to the BankName field.
func (o *CreateOrUpdateBankAccountRequest) SetBankName(v string) {
	o.BankName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateOrUpdateBankAccountRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateBankAccountRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateOrUpdateBankAccountRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateOrUpdateBankAccountRequest) SetDescription(v string) {
	o.Description = &v
}

func (o CreateOrUpdateBankAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateBankAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_holder"] = o.AccountHolder
	toSerialize["iban"] = o.Iban
	if !IsNil(o.Bic) {
		toSerialize["bic"] = o.Bic
	}
	if !IsNil(o.BankName) {
		toSerialize["bank_name"] = o.BankName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

func (o *CreateOrUpdateBankAccountRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_holder",
		"iban",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrUpdateBankAccountRequest := _CreateOrUpdateBankAccountRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrUpdateBankAccountRequest)

	if err != nil {
		return err
	}

	*o = CreateOrUpdateBankAccountRequest(varCreateOrUpdateBankAccountRequest)

	return err
}

type NullableCreateOrUpdateBankAccountRequest struct {
	value *CreateOrUpdateBankAccountRequest
	isSet bool
}

func (v NullableCreateOrUpdateBankAccountRequest) Get() *CreateOrUpdateBankAccountRequest {
	return v.value
}

func (v *NullableCreateOrUpdateBankAccountRequest) Set(val *CreateOrUpdateBankAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateBankAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateBankAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateBankAccountRequest(val *CreateOrUpdateBankAccountRequest) *NullableCreateOrUpdateBankAccountRequest {
	return &NullableCreateOrUpdateBankAccountRequest{value: val, isSet: true}
}

func (v NullableCreateOrUpdateBankAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateBankAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
