/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the QueryBankAccountsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryBankAccountsResponse{}

// QueryBankAccountsResponse Result of a bank account query
type QueryBankAccountsResponse struct {
	Limit        *int32        `json:"limit,omitempty"`
	Offset       *int32        `json:"offset,omitempty"`
	Total        *int32        `json:"total,omitempty"`
	BankAccounts []BankAccount `json:"bank_accounts,omitempty"`
}

// NewQueryBankAccountsResponse instantiates a new QueryBankAccountsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryBankAccountsResponse() *QueryBankAccountsResponse {
	this := QueryBankAccountsResponse{}
	return &this
}

// NewQueryBankAccountsResponseWithDefaults instantiates a new QueryBankAccountsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryBankAccountsResponseWithDefaults() *QueryBankAccountsResponse {
	this := QueryBankAccountsResponse{}
	return &this
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *QueryBankAccountsResponse) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryBankAccountsResponse) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *QueryBankAccountsResponse) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *QueryBankAccountsResponse) SetLimit(v int32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *QueryBankAccountsResponse) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryBankAccountsResponse) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *QueryBankAccountsResponse) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *QueryBankAccountsResponse) SetOffset(v int32) {
	o.Offset = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *QueryBankAccountsResponse) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryBankAccountsResponse) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *QueryBankAccountsResponse) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *QueryBankAccountsResponse) SetTotal(v int32) {
	o.Total = &v
}

// GetBankAccounts returns the BankAccounts field value if set, zero value otherwise.
func (o *QueryBankAccountsResponse) GetBankAccounts() []BankAccount {
	if o == nil || IsNil(o.BankAccounts) {
		var ret []BankAccount
		return ret
	}
	return o.BankAccounts
}

// GetBankAccountsOk returns a tuple with the BankAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryBankAccountsResponse) GetBankAccountsOk() ([]BankAccount, bool) {
	if o == nil || IsNil(o.BankAccounts) {
		return nil, false
	}
	return o.BankAccounts, true
}

// HasBankAccounts returns a boolean if a field has been set.
func (o *QueryBankAccountsResponse) HasBankAccounts() bool {
	if o != nil && !IsNil(o.BankAccounts) {
		return true
	}

	return false
}

// SetBankAccounts gets a reference to the given []BankAccount and assigns it to the BankAccounts field.
func (o *QueryBankAccountsResponse) SetBankAccounts(v []BankAccount) {
	o.BankAccounts = v
}

func (o QueryBankAccountsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryBankAccountsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.BankAccounts) {
		toSerialize["bank_accounts"] = o.BankAccounts
	}
	return toSerialize, nil
}

type NullableQueryBankAccountsResponse struct {
	value *QueryBankAccountsResponse
	isSet bool
}

func (v NullableQueryBankAccountsResponse) Get() *QueryBankAccountsResponse {
	return v.value
}

func (v *NullableQueryBankAccountsResponse) Set(val *QueryBankAccountsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryBankAccountsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryBankAccountsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryBankAccountsResponse(val *QueryBankAccountsResponse) *NullableQueryBankAccountsResponse {
	return &NullableQueryBankAccountsResponse{value: val, isSet: true}
}

func (v NullableQueryBankAccountsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryBankAccountsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
