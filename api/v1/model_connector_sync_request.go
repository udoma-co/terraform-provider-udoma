/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ConnectorSyncRequest Used by connectors to push data to the backend. It contains a list of entities to be synchronised and the timestamp of the last update, as well as error logs in case the connector failed to sync data.
type ConnectorSyncRequest struct {
	ConnectorMeta *ConnectorMeta `json:"connector_meta,omitempty"`
	// list of entities to be synchronised
	Data []ConnectorSyncEntity `json:"data,omitempty"`
	// list of errors that occurred during the sync
	Logs []ConnectorSyncLog `json:"logs,omitempty"`
}

// NewConnectorSyncRequest instantiates a new ConnectorSyncRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorSyncRequest() *ConnectorSyncRequest {
	this := ConnectorSyncRequest{}
	return &this
}

// NewConnectorSyncRequestWithDefaults instantiates a new ConnectorSyncRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorSyncRequestWithDefaults() *ConnectorSyncRequest {
	this := ConnectorSyncRequest{}
	return &this
}

// GetConnectorMeta returns the ConnectorMeta field value if set, zero value otherwise.
func (o *ConnectorSyncRequest) GetConnectorMeta() ConnectorMeta {
	if o == nil || o.ConnectorMeta == nil {
		var ret ConnectorMeta
		return ret
	}
	return *o.ConnectorMeta
}

// GetConnectorMetaOk returns a tuple with the ConnectorMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorSyncRequest) GetConnectorMetaOk() (*ConnectorMeta, bool) {
	if o == nil || o.ConnectorMeta == nil {
		return nil, false
	}
	return o.ConnectorMeta, true
}

// HasConnectorMeta returns a boolean if a field has been set.
func (o *ConnectorSyncRequest) HasConnectorMeta() bool {
	if o != nil && o.ConnectorMeta != nil {
		return true
	}

	return false
}

// SetConnectorMeta gets a reference to the given ConnectorMeta and assigns it to the ConnectorMeta field.
func (o *ConnectorSyncRequest) SetConnectorMeta(v ConnectorMeta) {
	o.ConnectorMeta = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ConnectorSyncRequest) GetData() []ConnectorSyncEntity {
	if o == nil || o.Data == nil {
		var ret []ConnectorSyncEntity
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorSyncRequest) GetDataOk() ([]ConnectorSyncEntity, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ConnectorSyncRequest) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []ConnectorSyncEntity and assigns it to the Data field.
func (o *ConnectorSyncRequest) SetData(v []ConnectorSyncEntity) {
	o.Data = v
}

// GetLogs returns the Logs field value if set, zero value otherwise.
func (o *ConnectorSyncRequest) GetLogs() []ConnectorSyncLog {
	if o == nil || o.Logs == nil {
		var ret []ConnectorSyncLog
		return ret
	}
	return o.Logs
}

// GetLogsOk returns a tuple with the Logs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorSyncRequest) GetLogsOk() ([]ConnectorSyncLog, bool) {
	if o == nil || o.Logs == nil {
		return nil, false
	}
	return o.Logs, true
}

// HasLogs returns a boolean if a field has been set.
func (o *ConnectorSyncRequest) HasLogs() bool {
	if o != nil && o.Logs != nil {
		return true
	}

	return false
}

// SetLogs gets a reference to the given []ConnectorSyncLog and assigns it to the Logs field.
func (o *ConnectorSyncRequest) SetLogs(v []ConnectorSyncLog) {
	o.Logs = v
}

func (o ConnectorSyncRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectorMeta != nil {
		toSerialize["connector_meta"] = o.ConnectorMeta
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Logs != nil {
		toSerialize["logs"] = o.Logs
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorSyncRequest struct {
	value *ConnectorSyncRequest
	isSet bool
}

func (v NullableConnectorSyncRequest) Get() *ConnectorSyncRequest {
	return v.value
}

func (v *NullableConnectorSyncRequest) Set(val *ConnectorSyncRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorSyncRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorSyncRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorSyncRequest(val *ConnectorSyncRequest) *NullableConnectorSyncRequest {
	return &NullableConnectorSyncRequest{value: val, isSet: true}
}

func (v NullableConnectorSyncRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorSyncRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
