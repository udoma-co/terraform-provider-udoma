/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetCorrespondenceDocumentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCorrespondenceDocumentResponse{}

// GetCorrespondenceDocumentResponse The response when getting the document
type GetCorrespondenceDocumentResponse struct {
	TiptapDocument TipTapDocument `json:"tiptap_document"`
	// A URL used to download the document in a PDF format
	PdfUrl string `json:"pdf_url"`
}

type _GetCorrespondenceDocumentResponse GetCorrespondenceDocumentResponse

// NewGetCorrespondenceDocumentResponse instantiates a new GetCorrespondenceDocumentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCorrespondenceDocumentResponse(tiptapDocument TipTapDocument, pdfUrl string) *GetCorrespondenceDocumentResponse {
	this := GetCorrespondenceDocumentResponse{}
	this.TiptapDocument = tiptapDocument
	this.PdfUrl = pdfUrl
	return &this
}

// NewGetCorrespondenceDocumentResponseWithDefaults instantiates a new GetCorrespondenceDocumentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCorrespondenceDocumentResponseWithDefaults() *GetCorrespondenceDocumentResponse {
	this := GetCorrespondenceDocumentResponse{}
	return &this
}

// GetTiptapDocument returns the TiptapDocument field value
func (o *GetCorrespondenceDocumentResponse) GetTiptapDocument() TipTapDocument {
	if o == nil {
		var ret TipTapDocument
		return ret
	}

	return o.TiptapDocument
}

// GetTiptapDocumentOk returns a tuple with the TiptapDocument field value
// and a boolean to check if the value has been set.
func (o *GetCorrespondenceDocumentResponse) GetTiptapDocumentOk() (*TipTapDocument, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TiptapDocument, true
}

// SetTiptapDocument sets field value
func (o *GetCorrespondenceDocumentResponse) SetTiptapDocument(v TipTapDocument) {
	o.TiptapDocument = v
}

// GetPdfUrl returns the PdfUrl field value
func (o *GetCorrespondenceDocumentResponse) GetPdfUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PdfUrl
}

// GetPdfUrlOk returns a tuple with the PdfUrl field value
// and a boolean to check if the value has been set.
func (o *GetCorrespondenceDocumentResponse) GetPdfUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PdfUrl, true
}

// SetPdfUrl sets field value
func (o *GetCorrespondenceDocumentResponse) SetPdfUrl(v string) {
	o.PdfUrl = v
}

func (o GetCorrespondenceDocumentResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCorrespondenceDocumentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tiptap_document"] = o.TiptapDocument
	toSerialize["pdf_url"] = o.PdfUrl
	return toSerialize, nil
}

func (o *GetCorrespondenceDocumentResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tiptap_document",
		"pdf_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetCorrespondenceDocumentResponse := _GetCorrespondenceDocumentResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetCorrespondenceDocumentResponse)

	if err != nil {
		return err
	}

	*o = GetCorrespondenceDocumentResponse(varGetCorrespondenceDocumentResponse)

	return err
}

type NullableGetCorrespondenceDocumentResponse struct {
	value *GetCorrespondenceDocumentResponse
	isSet bool
}

func (v NullableGetCorrespondenceDocumentResponse) Get() *GetCorrespondenceDocumentResponse {
	return v.value
}

func (v *NullableGetCorrespondenceDocumentResponse) Set(val *GetCorrespondenceDocumentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCorrespondenceDocumentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCorrespondenceDocumentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCorrespondenceDocumentResponse(val *GetCorrespondenceDocumentResponse) *NullableGetCorrespondenceDocumentResponse {
	return &NullableGetCorrespondenceDocumentResponse{value: val, isSet: true}
}

func (v NullableGetCorrespondenceDocumentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCorrespondenceDocumentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
