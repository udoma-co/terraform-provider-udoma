/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WorkflowTrigger type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowTrigger{}

// WorkflowTrigger information for the trigger of a workflow execution
type WorkflowTrigger struct {
	// the ID of the workflow execution
	ExecutionRef   string                     `json:"execution_ref"`
	EntrypointType WorkflowEntrypointLocation `json:"entrypoint_type"`
	// the ID of the source object
	SourceRef string `json:"source_ref"`
	// The timestamp of when the workflow was created
	CreatedAt int64 `json:"created_at"`
	// the name of the related workflow execution
	Label string `json:"label"`
}

type _WorkflowTrigger WorkflowTrigger

// NewWorkflowTrigger instantiates a new WorkflowTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTrigger(executionRef string, entrypointType WorkflowEntrypointLocation, sourceRef string, createdAt int64, label string) *WorkflowTrigger {
	this := WorkflowTrigger{}
	this.ExecutionRef = executionRef
	this.EntrypointType = entrypointType
	this.SourceRef = sourceRef
	this.CreatedAt = createdAt
	this.Label = label
	return &this
}

// NewWorkflowTriggerWithDefaults instantiates a new WorkflowTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTriggerWithDefaults() *WorkflowTrigger {
	this := WorkflowTrigger{}
	return &this
}

// GetExecutionRef returns the ExecutionRef field value
func (o *WorkflowTrigger) GetExecutionRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExecutionRef
}

// GetExecutionRefOk returns a tuple with the ExecutionRef field value
// and a boolean to check if the value has been set.
func (o *WorkflowTrigger) GetExecutionRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExecutionRef, true
}

// SetExecutionRef sets field value
func (o *WorkflowTrigger) SetExecutionRef(v string) {
	o.ExecutionRef = v
}

// GetEntrypointType returns the EntrypointType field value
func (o *WorkflowTrigger) GetEntrypointType() WorkflowEntrypointLocation {
	if o == nil {
		var ret WorkflowEntrypointLocation
		return ret
	}

	return o.EntrypointType
}

// GetEntrypointTypeOk returns a tuple with the EntrypointType field value
// and a boolean to check if the value has been set.
func (o *WorkflowTrigger) GetEntrypointTypeOk() (*WorkflowEntrypointLocation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntrypointType, true
}

// SetEntrypointType sets field value
func (o *WorkflowTrigger) SetEntrypointType(v WorkflowEntrypointLocation) {
	o.EntrypointType = v
}

// GetSourceRef returns the SourceRef field value
func (o *WorkflowTrigger) GetSourceRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceRef
}

// GetSourceRefOk returns a tuple with the SourceRef field value
// and a boolean to check if the value has been set.
func (o *WorkflowTrigger) GetSourceRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceRef, true
}

// SetSourceRef sets field value
func (o *WorkflowTrigger) SetSourceRef(v string) {
	o.SourceRef = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *WorkflowTrigger) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WorkflowTrigger) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WorkflowTrigger) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetLabel returns the Label field value
func (o *WorkflowTrigger) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *WorkflowTrigger) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *WorkflowTrigger) SetLabel(v string) {
	o.Label = v
}

func (o WorkflowTrigger) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowTrigger) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["execution_ref"] = o.ExecutionRef
	toSerialize["entrypoint_type"] = o.EntrypointType
	toSerialize["source_ref"] = o.SourceRef
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["label"] = o.Label
	return toSerialize, nil
}

func (o *WorkflowTrigger) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"execution_ref",
		"entrypoint_type",
		"source_ref",
		"created_at",
		"label",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkflowTrigger := _WorkflowTrigger{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkflowTrigger)

	if err != nil {
		return err
	}

	*o = WorkflowTrigger(varWorkflowTrigger)

	return err
}

type NullableWorkflowTrigger struct {
	value *WorkflowTrigger
	isSet bool
}

func (v NullableWorkflowTrigger) Get() *WorkflowTrigger {
	return v.value
}

func (v *NullableWorkflowTrigger) Set(val *WorkflowTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTrigger(val *WorkflowTrigger) *NullableWorkflowTrigger {
	return &NullableWorkflowTrigger{value: val, isSet: true}
}

func (v NullableWorkflowTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
