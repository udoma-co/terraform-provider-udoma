/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the BooleanResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BooleanResponse{}

// BooleanResponse struct for BooleanResponse
type BooleanResponse struct {
	// Whether the value is set to true or false
	Val *bool `json:"val,omitempty"`
}

// NewBooleanResponse instantiates a new BooleanResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBooleanResponse() *BooleanResponse {
	this := BooleanResponse{}
	return &this
}

// NewBooleanResponseWithDefaults instantiates a new BooleanResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBooleanResponseWithDefaults() *BooleanResponse {
	this := BooleanResponse{}
	return &this
}

// GetVal returns the Val field value if set, zero value otherwise.
func (o *BooleanResponse) GetVal() bool {
	if o == nil || IsNil(o.Val) {
		var ret bool
		return ret
	}
	return *o.Val
}

// GetValOk returns a tuple with the Val field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BooleanResponse) GetValOk() (*bool, bool) {
	if o == nil || IsNil(o.Val) {
		return nil, false
	}
	return o.Val, true
}

// HasVal returns a boolean if a field has been set.
func (o *BooleanResponse) HasVal() bool {
	if o != nil && !IsNil(o.Val) {
		return true
	}

	return false
}

// SetVal gets a reference to the given bool and assigns it to the Val field.
func (o *BooleanResponse) SetVal(v bool) {
	o.Val = &v
}

func (o BooleanResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BooleanResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Val) {
		toSerialize["val"] = o.Val
	}
	return toSerialize, nil
}

type NullableBooleanResponse struct {
	value *BooleanResponse
	isSet bool
}

func (v NullableBooleanResponse) Get() *BooleanResponse {
	return v.value
}

func (v *NullableBooleanResponse) Set(val *BooleanResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBooleanResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBooleanResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBooleanResponse(val *BooleanResponse) *NullableBooleanResponse {
	return &NullableBooleanResponse{value: val, isSet: true}
}

func (v NullableBooleanResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBooleanResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
