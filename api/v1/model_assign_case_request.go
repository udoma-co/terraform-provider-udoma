/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// AssignCaseRequest input used to send out case information to service provider
type AssignCaseRequest struct {
	ContactRef *string `json:"contact_ref,omitempty"`
	Language   *string `json:"language,omitempty"`
	// a message to be included in the notification to the service provider
	Message *string `json:"message,omitempty"`
	// indicates if the message should be visible to the tenant or not
	PrivateMessage *bool    `json:"private_message,omitempty"`
	AttachmentRefs []string `json:"attachment_refs,omitempty"`
}

// NewAssignCaseRequest instantiates a new AssignCaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignCaseRequest() *AssignCaseRequest {
	this := AssignCaseRequest{}
	return &this
}

// NewAssignCaseRequestWithDefaults instantiates a new AssignCaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignCaseRequestWithDefaults() *AssignCaseRequest {
	this := AssignCaseRequest{}
	return &this
}

// GetContactRef returns the ContactRef field value if set, zero value otherwise.
func (o *AssignCaseRequest) GetContactRef() string {
	if o == nil || o.ContactRef == nil {
		var ret string
		return ret
	}
	return *o.ContactRef
}

// GetContactRefOk returns a tuple with the ContactRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignCaseRequest) GetContactRefOk() (*string, bool) {
	if o == nil || o.ContactRef == nil {
		return nil, false
	}
	return o.ContactRef, true
}

// HasContactRef returns a boolean if a field has been set.
func (o *AssignCaseRequest) HasContactRef() bool {
	if o != nil && o.ContactRef != nil {
		return true
	}

	return false
}

// SetContactRef gets a reference to the given string and assigns it to the ContactRef field.
func (o *AssignCaseRequest) SetContactRef(v string) {
	o.ContactRef = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *AssignCaseRequest) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignCaseRequest) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *AssignCaseRequest) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *AssignCaseRequest) SetLanguage(v string) {
	o.Language = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *AssignCaseRequest) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignCaseRequest) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *AssignCaseRequest) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *AssignCaseRequest) SetMessage(v string) {
	o.Message = &v
}

// GetPrivateMessage returns the PrivateMessage field value if set, zero value otherwise.
func (o *AssignCaseRequest) GetPrivateMessage() bool {
	if o == nil || o.PrivateMessage == nil {
		var ret bool
		return ret
	}
	return *o.PrivateMessage
}

// GetPrivateMessageOk returns a tuple with the PrivateMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignCaseRequest) GetPrivateMessageOk() (*bool, bool) {
	if o == nil || o.PrivateMessage == nil {
		return nil, false
	}
	return o.PrivateMessage, true
}

// HasPrivateMessage returns a boolean if a field has been set.
func (o *AssignCaseRequest) HasPrivateMessage() bool {
	if o != nil && o.PrivateMessage != nil {
		return true
	}

	return false
}

// SetPrivateMessage gets a reference to the given bool and assigns it to the PrivateMessage field.
func (o *AssignCaseRequest) SetPrivateMessage(v bool) {
	o.PrivateMessage = &v
}

// GetAttachmentRefs returns the AttachmentRefs field value if set, zero value otherwise.
func (o *AssignCaseRequest) GetAttachmentRefs() []string {
	if o == nil || o.AttachmentRefs == nil {
		var ret []string
		return ret
	}
	return o.AttachmentRefs
}

// GetAttachmentRefsOk returns a tuple with the AttachmentRefs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignCaseRequest) GetAttachmentRefsOk() ([]string, bool) {
	if o == nil || o.AttachmentRefs == nil {
		return nil, false
	}
	return o.AttachmentRefs, true
}

// HasAttachmentRefs returns a boolean if a field has been set.
func (o *AssignCaseRequest) HasAttachmentRefs() bool {
	if o != nil && o.AttachmentRefs != nil {
		return true
	}

	return false
}

// SetAttachmentRefs gets a reference to the given []string and assigns it to the AttachmentRefs field.
func (o *AssignCaseRequest) SetAttachmentRefs(v []string) {
	o.AttachmentRefs = v
}

func (o AssignCaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContactRef != nil {
		toSerialize["contact_ref"] = o.ContactRef
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.PrivateMessage != nil {
		toSerialize["private_message"] = o.PrivateMessage
	}
	if o.AttachmentRefs != nil {
		toSerialize["attachment_refs"] = o.AttachmentRefs
	}
	return json.Marshal(toSerialize)
}

type NullableAssignCaseRequest struct {
	value *AssignCaseRequest
	isSet bool
}

func (v NullableAssignCaseRequest) Get() *AssignCaseRequest {
	return v.value
}

func (v *NullableAssignCaseRequest) Set(val *AssignCaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignCaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignCaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignCaseRequest(val *AssignCaseRequest) *NullableAssignCaseRequest {
	return &NullableAssignCaseRequest{value: val, isSet: true}
}

func (v NullableAssignCaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignCaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
