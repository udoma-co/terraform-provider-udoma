/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the CaseAssignee type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CaseAssignee{}

// CaseAssignee Indicates who is currently assigned to work on the case.
type CaseAssignee struct {
	// Set in case the assignee has an account within the plattform
	AccountRef *int64 `json:"account_ref,omitempty"`
	// Set in case the assignee is a service provider or tenant, without an account on the plattform
	ContactRef *string `json:"contact_ref,omitempty"`
}

// NewCaseAssignee instantiates a new CaseAssignee object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaseAssignee() *CaseAssignee {
	this := CaseAssignee{}
	return &this
}

// NewCaseAssigneeWithDefaults instantiates a new CaseAssignee object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaseAssigneeWithDefaults() *CaseAssignee {
	this := CaseAssignee{}
	return &this
}

// GetAccountRef returns the AccountRef field value if set, zero value otherwise.
func (o *CaseAssignee) GetAccountRef() int64 {
	if o == nil || IsNil(o.AccountRef) {
		var ret int64
		return ret
	}
	return *o.AccountRef
}

// GetAccountRefOk returns a tuple with the AccountRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseAssignee) GetAccountRefOk() (*int64, bool) {
	if o == nil || IsNil(o.AccountRef) {
		return nil, false
	}
	return o.AccountRef, true
}

// HasAccountRef returns a boolean if a field has been set.
func (o *CaseAssignee) HasAccountRef() bool {
	if o != nil && !IsNil(o.AccountRef) {
		return true
	}

	return false
}

// SetAccountRef gets a reference to the given int64 and assigns it to the AccountRef field.
func (o *CaseAssignee) SetAccountRef(v int64) {
	o.AccountRef = &v
}

// GetContactRef returns the ContactRef field value if set, zero value otherwise.
func (o *CaseAssignee) GetContactRef() string {
	if o == nil || IsNil(o.ContactRef) {
		var ret string
		return ret
	}
	return *o.ContactRef
}

// GetContactRefOk returns a tuple with the ContactRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseAssignee) GetContactRefOk() (*string, bool) {
	if o == nil || IsNil(o.ContactRef) {
		return nil, false
	}
	return o.ContactRef, true
}

// HasContactRef returns a boolean if a field has been set.
func (o *CaseAssignee) HasContactRef() bool {
	if o != nil && !IsNil(o.ContactRef) {
		return true
	}

	return false
}

// SetContactRef gets a reference to the given string and assigns it to the ContactRef field.
func (o *CaseAssignee) SetContactRef(v string) {
	o.ContactRef = &v
}

func (o CaseAssignee) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CaseAssignee) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountRef) {
		toSerialize["account_ref"] = o.AccountRef
	}
	if !IsNil(o.ContactRef) {
		toSerialize["contact_ref"] = o.ContactRef
	}
	return toSerialize, nil
}

type NullableCaseAssignee struct {
	value *CaseAssignee
	isSet bool
}

func (v NullableCaseAssignee) Get() *CaseAssignee {
	return v.value
}

func (v *NullableCaseAssignee) Set(val *CaseAssignee) {
	v.value = val
	v.isSet = true
}

func (v NullableCaseAssignee) IsSet() bool {
	return v.isSet
}

func (v *NullableCaseAssignee) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaseAssignee(val *CaseAssignee) *NullableCaseAssignee {
	return &NullableCaseAssignee{value: val, isSet: true}
}

func (v NullableCaseAssignee) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaseAssignee) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
