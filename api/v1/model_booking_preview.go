/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the BookingPreview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookingPreview{}

// BookingPreview A preview of one or multiple bookings, based on input from a booking template or transaction.
type BookingPreview struct {
	// Unique and immutable ID attribute of the entity that is generated when the instance is created. The ID is unique within the system accross all accounts and it can be used to reference the entity in other entities or to retrieve it from the backend.
	Id string `json:"id"`
	// The date and time the entity was created
	CreatedAt int64 `json:"created_at"`
	// The date and time the entity was last updated
	UpdatedAt  int64                        `json:"updated_at"`
	SourceType BookingPreviewSourceTypeEnum `json:"source_type"`
	// Optional ID of the template or transaction based on which the preview was created. Empty for manual previews.
	SourceRef *string `json:"source_ref,omitempty"`
	// For bookings based on a template, this holds the data that was provided when the template was executed
	InputData map[string]interface{} `json:"input_data,omitempty"`
	// Preview of the bookings that will be created as result of this preview
	Bookings []AccountBooking `json:"bookings"`
	// Indicates whether the preview has been persisted (i.e. the bookings have been created in the system)
	Persisted *bool `json:"persisted,omitempty"`
}

type _BookingPreview BookingPreview

// NewBookingPreview instantiates a new BookingPreview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookingPreview(id string, createdAt int64, updatedAt int64, sourceType BookingPreviewSourceTypeEnum, bookings []AccountBooking) *BookingPreview {
	this := BookingPreview{}
	this.Id = id
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.SourceType = sourceType
	this.Bookings = bookings
	return &this
}

// NewBookingPreviewWithDefaults instantiates a new BookingPreview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookingPreviewWithDefaults() *BookingPreview {
	this := BookingPreview{}
	return &this
}

// GetId returns the Id field value
func (o *BookingPreview) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BookingPreview) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BookingPreview) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BookingPreview) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BookingPreview) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BookingPreview) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BookingPreview) GetUpdatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BookingPreview) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BookingPreview) SetUpdatedAt(v int64) {
	o.UpdatedAt = v
}

// GetSourceType returns the SourceType field value
func (o *BookingPreview) GetSourceType() BookingPreviewSourceTypeEnum {
	if o == nil {
		var ret BookingPreviewSourceTypeEnum
		return ret
	}

	return o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value
// and a boolean to check if the value has been set.
func (o *BookingPreview) GetSourceTypeOk() (*BookingPreviewSourceTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceType, true
}

// SetSourceType sets field value
func (o *BookingPreview) SetSourceType(v BookingPreviewSourceTypeEnum) {
	o.SourceType = v
}

// GetSourceRef returns the SourceRef field value if set, zero value otherwise.
func (o *BookingPreview) GetSourceRef() string {
	if o == nil || IsNil(o.SourceRef) {
		var ret string
		return ret
	}
	return *o.SourceRef
}

// GetSourceRefOk returns a tuple with the SourceRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingPreview) GetSourceRefOk() (*string, bool) {
	if o == nil || IsNil(o.SourceRef) {
		return nil, false
	}
	return o.SourceRef, true
}

// HasSourceRef returns a boolean if a field has been set.
func (o *BookingPreview) HasSourceRef() bool {
	if o != nil && !IsNil(o.SourceRef) {
		return true
	}

	return false
}

// SetSourceRef gets a reference to the given string and assigns it to the SourceRef field.
func (o *BookingPreview) SetSourceRef(v string) {
	o.SourceRef = &v
}

// GetInputData returns the InputData field value if set, zero value otherwise.
func (o *BookingPreview) GetInputData() map[string]interface{} {
	if o == nil || IsNil(o.InputData) {
		var ret map[string]interface{}
		return ret
	}
	return o.InputData
}

// GetInputDataOk returns a tuple with the InputData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingPreview) GetInputDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.InputData) {
		return map[string]interface{}{}, false
	}
	return o.InputData, true
}

// HasInputData returns a boolean if a field has been set.
func (o *BookingPreview) HasInputData() bool {
	if o != nil && !IsNil(o.InputData) {
		return true
	}

	return false
}

// SetInputData gets a reference to the given map[string]interface{} and assigns it to the InputData field.
func (o *BookingPreview) SetInputData(v map[string]interface{}) {
	o.InputData = v
}

// GetBookings returns the Bookings field value
func (o *BookingPreview) GetBookings() []AccountBooking {
	if o == nil {
		var ret []AccountBooking
		return ret
	}

	return o.Bookings
}

// GetBookingsOk returns a tuple with the Bookings field value
// and a boolean to check if the value has been set.
func (o *BookingPreview) GetBookingsOk() ([]AccountBooking, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bookings, true
}

// SetBookings sets field value
func (o *BookingPreview) SetBookings(v []AccountBooking) {
	o.Bookings = v
}

// GetPersisted returns the Persisted field value if set, zero value otherwise.
func (o *BookingPreview) GetPersisted() bool {
	if o == nil || IsNil(o.Persisted) {
		var ret bool
		return ret
	}
	return *o.Persisted
}

// GetPersistedOk returns a tuple with the Persisted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingPreview) GetPersistedOk() (*bool, bool) {
	if o == nil || IsNil(o.Persisted) {
		return nil, false
	}
	return o.Persisted, true
}

// HasPersisted returns a boolean if a field has been set.
func (o *BookingPreview) HasPersisted() bool {
	if o != nil && !IsNil(o.Persisted) {
		return true
	}

	return false
}

// SetPersisted gets a reference to the given bool and assigns it to the Persisted field.
func (o *BookingPreview) SetPersisted(v bool) {
	o.Persisted = &v
}

func (o BookingPreview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookingPreview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["source_type"] = o.SourceType
	if !IsNil(o.SourceRef) {
		toSerialize["source_ref"] = o.SourceRef
	}
	if !IsNil(o.InputData) {
		toSerialize["input_data"] = o.InputData
	}
	toSerialize["bookings"] = o.Bookings
	if !IsNil(o.Persisted) {
		toSerialize["persisted"] = o.Persisted
	}
	return toSerialize, nil
}

func (o *BookingPreview) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"updated_at",
		"source_type",
		"bookings",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBookingPreview := _BookingPreview{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBookingPreview)

	if err != nil {
		return err
	}

	*o = BookingPreview(varBookingPreview)

	return err
}

type NullableBookingPreview struct {
	value *BookingPreview
	isSet bool
}

func (v NullableBookingPreview) Get() *BookingPreview {
	return v.value
}

func (v *NullableBookingPreview) Set(val *BookingPreview) {
	v.value = val
	v.isSet = true
}

func (v NullableBookingPreview) IsSet() bool {
	return v.isSet
}

func (v *NullableBookingPreview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookingPreview(val *BookingPreview) *NullableBookingPreview {
	return &NullableBookingPreview{value: val, isSet: true}
}

func (v NullableBookingPreview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookingPreview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
