/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateApprovalRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApprovalRequest{}

// CreateApprovalRequest Contains the details of an approval request that is created or updated.
type CreateApprovalRequest struct {
	// A user-friendly name of the approval.
	Name string `json:"name"`
	// The reference to the entity for which this approval is requested.
	SourceRef string `json:"source_ref"`
	// Optional URL that can be set that will link to the entity for  which this approval is requested. If not set, the URL will be generated based on the source_ref.
	Url *string `json:"url,omitempty"`
	// The message that is displayed to the user when the approval is requested.
	Message *string `json:"message,omitempty"`
	// The list of users that are requested to approve the entity.
	Approvers []Approver `json:"approvers"`
}

type _CreateApprovalRequest CreateApprovalRequest

// NewCreateApprovalRequest instantiates a new CreateApprovalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApprovalRequest(name string, sourceRef string, approvers []Approver) *CreateApprovalRequest {
	this := CreateApprovalRequest{}
	this.Name = name
	this.SourceRef = sourceRef
	this.Approvers = approvers
	return &this
}

// NewCreateApprovalRequestWithDefaults instantiates a new CreateApprovalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApprovalRequestWithDefaults() *CreateApprovalRequest {
	this := CreateApprovalRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateApprovalRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateApprovalRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateApprovalRequest) SetName(v string) {
	o.Name = v
}

// GetSourceRef returns the SourceRef field value
func (o *CreateApprovalRequest) GetSourceRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceRef
}

// GetSourceRefOk returns a tuple with the SourceRef field value
// and a boolean to check if the value has been set.
func (o *CreateApprovalRequest) GetSourceRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceRef, true
}

// SetSourceRef sets field value
func (o *CreateApprovalRequest) SetSourceRef(v string) {
	o.SourceRef = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CreateApprovalRequest) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApprovalRequest) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CreateApprovalRequest) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CreateApprovalRequest) SetUrl(v string) {
	o.Url = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CreateApprovalRequest) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApprovalRequest) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CreateApprovalRequest) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CreateApprovalRequest) SetMessage(v string) {
	o.Message = &v
}

// GetApprovers returns the Approvers field value
func (o *CreateApprovalRequest) GetApprovers() []Approver {
	if o == nil {
		var ret []Approver
		return ret
	}

	return o.Approvers
}

// GetApproversOk returns a tuple with the Approvers field value
// and a boolean to check if the value has been set.
func (o *CreateApprovalRequest) GetApproversOk() ([]Approver, bool) {
	if o == nil {
		return nil, false
	}
	return o.Approvers, true
}

// SetApprovers sets field value
func (o *CreateApprovalRequest) SetApprovers(v []Approver) {
	o.Approvers = v
}

func (o CreateApprovalRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApprovalRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["source_ref"] = o.SourceRef
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	toSerialize["approvers"] = o.Approvers
	return toSerialize, nil
}

func (o *CreateApprovalRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"source_ref",
		"approvers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateApprovalRequest := _CreateApprovalRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateApprovalRequest)

	if err != nil {
		return err
	}

	*o = CreateApprovalRequest(varCreateApprovalRequest)

	return err
}

type NullableCreateApprovalRequest struct {
	value *CreateApprovalRequest
	isSet bool
}

func (v NullableCreateApprovalRequest) Get() *CreateApprovalRequest {
	return v.value
}

func (v *NullableCreateApprovalRequest) Set(val *CreateApprovalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApprovalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApprovalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApprovalRequest(val *CreateApprovalRequest) *NullableCreateApprovalRequest {
	return &NullableCreateApprovalRequest{value: val, isSet: true}
}

func (v NullableCreateApprovalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApprovalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
