/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ConnectorPingRequest Used by connectors to ping the backend. The request only contains the  connector meta data.
type ConnectorPingRequest struct {
	ConnectorMeta *ConnectorMeta `json:"connector_meta,omitempty"`
}

// NewConnectorPingRequest instantiates a new ConnectorPingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorPingRequest() *ConnectorPingRequest {
	this := ConnectorPingRequest{}
	return &this
}

// NewConnectorPingRequestWithDefaults instantiates a new ConnectorPingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorPingRequestWithDefaults() *ConnectorPingRequest {
	this := ConnectorPingRequest{}
	return &this
}

// GetConnectorMeta returns the ConnectorMeta field value if set, zero value otherwise.
func (o *ConnectorPingRequest) GetConnectorMeta() ConnectorMeta {
	if o == nil || o.ConnectorMeta == nil {
		var ret ConnectorMeta
		return ret
	}
	return *o.ConnectorMeta
}

// GetConnectorMetaOk returns a tuple with the ConnectorMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorPingRequest) GetConnectorMetaOk() (*ConnectorMeta, bool) {
	if o == nil || o.ConnectorMeta == nil {
		return nil, false
	}
	return o.ConnectorMeta, true
}

// HasConnectorMeta returns a boolean if a field has been set.
func (o *ConnectorPingRequest) HasConnectorMeta() bool {
	if o != nil && o.ConnectorMeta != nil {
		return true
	}

	return false
}

// SetConnectorMeta gets a reference to the given ConnectorMeta and assigns it to the ConnectorMeta field.
func (o *ConnectorPingRequest) SetConnectorMeta(v ConnectorMeta) {
	o.ConnectorMeta = &v
}

func (o ConnectorPingRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectorMeta != nil {
		toSerialize["connector_meta"] = o.ConnectorMeta
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorPingRequest struct {
	value *ConnectorPingRequest
	isSet bool
}

func (v NullableConnectorPingRequest) Get() *ConnectorPingRequest {
	return v.value
}

func (v *NullableConnectorPingRequest) Set(val *ConnectorPingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorPingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorPingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorPingRequest(val *ConnectorPingRequest) *NullableConnectorPingRequest {
	return &NullableConnectorPingRequest{value: val, isSet: true}
}

func (v NullableConnectorPingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorPingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
