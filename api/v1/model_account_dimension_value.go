/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AccountDimensionValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountDimensionValue{}

// AccountDimensionValue A mapping of an entity to a value of a dimension
type AccountDimensionValue struct {
	// The unique ID of the dimension, for which this value is defined.
	DimensionRef string `json:"dimension_ref"`
	// The unique ID this this value (typically the ID of the referenced  entity that is mapped, e.g. property ID)
	Id string `json:"id"`
	// Optional ID for the parent dimension value. If set, the value can only be set, when the parent dimension was set to the given ID.
	ParentDimensionId *string `json:"parent_dimension_id,omitempty"`
	// The numeric value under the given dimension. This value is unique for the given dimension. If a parent dimension reference is set,  then the value is only unique for the parent dimension value and  may be repeated for other parent dimension values.
	Value *int32 `json:"value,omitempty"`
}

type _AccountDimensionValue AccountDimensionValue

// NewAccountDimensionValue instantiates a new AccountDimensionValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountDimensionValue(dimensionRef string, id string) *AccountDimensionValue {
	this := AccountDimensionValue{}
	this.DimensionRef = dimensionRef
	this.Id = id
	return &this
}

// NewAccountDimensionValueWithDefaults instantiates a new AccountDimensionValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountDimensionValueWithDefaults() *AccountDimensionValue {
	this := AccountDimensionValue{}
	return &this
}

// GetDimensionRef returns the DimensionRef field value
func (o *AccountDimensionValue) GetDimensionRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DimensionRef
}

// GetDimensionRefOk returns a tuple with the DimensionRef field value
// and a boolean to check if the value has been set.
func (o *AccountDimensionValue) GetDimensionRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DimensionRef, true
}

// SetDimensionRef sets field value
func (o *AccountDimensionValue) SetDimensionRef(v string) {
	o.DimensionRef = v
}

// GetId returns the Id field value
func (o *AccountDimensionValue) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccountDimensionValue) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccountDimensionValue) SetId(v string) {
	o.Id = v
}

// GetParentDimensionId returns the ParentDimensionId field value if set, zero value otherwise.
func (o *AccountDimensionValue) GetParentDimensionId() string {
	if o == nil || IsNil(o.ParentDimensionId) {
		var ret string
		return ret
	}
	return *o.ParentDimensionId
}

// GetParentDimensionIdOk returns a tuple with the ParentDimensionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDimensionValue) GetParentDimensionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentDimensionId) {
		return nil, false
	}
	return o.ParentDimensionId, true
}

// HasParentDimensionId returns a boolean if a field has been set.
func (o *AccountDimensionValue) HasParentDimensionId() bool {
	if o != nil && !IsNil(o.ParentDimensionId) {
		return true
	}

	return false
}

// SetParentDimensionId gets a reference to the given string and assigns it to the ParentDimensionId field.
func (o *AccountDimensionValue) SetParentDimensionId(v string) {
	o.ParentDimensionId = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AccountDimensionValue) GetValue() int32 {
	if o == nil || IsNil(o.Value) {
		var ret int32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDimensionValue) GetValueOk() (*int32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AccountDimensionValue) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given int32 and assigns it to the Value field.
func (o *AccountDimensionValue) SetValue(v int32) {
	o.Value = &v
}

func (o AccountDimensionValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountDimensionValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dimension_ref"] = o.DimensionRef
	toSerialize["id"] = o.Id
	if !IsNil(o.ParentDimensionId) {
		toSerialize["parent_dimension_id"] = o.ParentDimensionId
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

func (o *AccountDimensionValue) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dimension_ref",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountDimensionValue := _AccountDimensionValue{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountDimensionValue)

	if err != nil {
		return err
	}

	*o = AccountDimensionValue(varAccountDimensionValue)

	return err
}

type NullableAccountDimensionValue struct {
	value *AccountDimensionValue
	isSet bool
}

func (v NullableAccountDimensionValue) Get() *AccountDimensionValue {
	return v.value
}

func (v *NullableAccountDimensionValue) Set(val *AccountDimensionValue) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountDimensionValue) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountDimensionValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountDimensionValue(val *AccountDimensionValue) *NullableAccountDimensionValue {
	return &NullableAccountDimensionValue{value: val, isSet: true}
}

func (v NullableAccountDimensionValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountDimensionValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
