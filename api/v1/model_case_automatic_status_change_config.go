/*
Udoma

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CaseAutomaticStatusChangeConfig Defines the configuration for automatic status changes of a case.
type CaseAutomaticStatusChangeConfig struct {
	Status *CaseStatusEnum `json:"status,omitempty"`
	// The number of days after which the status change should be triggered. The updated_at attribute is considered for the calculation.
	Schedule     *int32          `json:"schedule,omitempty"`
	TargetStatus *CaseStatusEnum `json:"target_status,omitempty"`
}

// NewCaseAutomaticStatusChangeConfig instantiates a new CaseAutomaticStatusChangeConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaseAutomaticStatusChangeConfig() *CaseAutomaticStatusChangeConfig {
	this := CaseAutomaticStatusChangeConfig{}
	return &this
}

// NewCaseAutomaticStatusChangeConfigWithDefaults instantiates a new CaseAutomaticStatusChangeConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaseAutomaticStatusChangeConfigWithDefaults() *CaseAutomaticStatusChangeConfig {
	this := CaseAutomaticStatusChangeConfig{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CaseAutomaticStatusChangeConfig) GetStatus() CaseStatusEnum {
	if o == nil || o.Status == nil {
		var ret CaseStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseAutomaticStatusChangeConfig) GetStatusOk() (*CaseStatusEnum, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CaseAutomaticStatusChangeConfig) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CaseStatusEnum and assigns it to the Status field.
func (o *CaseAutomaticStatusChangeConfig) SetStatus(v CaseStatusEnum) {
	o.Status = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *CaseAutomaticStatusChangeConfig) GetSchedule() int32 {
	if o == nil || o.Schedule == nil {
		var ret int32
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseAutomaticStatusChangeConfig) GetScheduleOk() (*int32, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *CaseAutomaticStatusChangeConfig) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given int32 and assigns it to the Schedule field.
func (o *CaseAutomaticStatusChangeConfig) SetSchedule(v int32) {
	o.Schedule = &v
}

// GetTargetStatus returns the TargetStatus field value if set, zero value otherwise.
func (o *CaseAutomaticStatusChangeConfig) GetTargetStatus() CaseStatusEnum {
	if o == nil || o.TargetStatus == nil {
		var ret CaseStatusEnum
		return ret
	}
	return *o.TargetStatus
}

// GetTargetStatusOk returns a tuple with the TargetStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaseAutomaticStatusChangeConfig) GetTargetStatusOk() (*CaseStatusEnum, bool) {
	if o == nil || o.TargetStatus == nil {
		return nil, false
	}
	return o.TargetStatus, true
}

// HasTargetStatus returns a boolean if a field has been set.
func (o *CaseAutomaticStatusChangeConfig) HasTargetStatus() bool {
	if o != nil && o.TargetStatus != nil {
		return true
	}

	return false
}

// SetTargetStatus gets a reference to the given CaseStatusEnum and assigns it to the TargetStatus field.
func (o *CaseAutomaticStatusChangeConfig) SetTargetStatus(v CaseStatusEnum) {
	o.TargetStatus = &v
}

func (o CaseAutomaticStatusChangeConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	if o.TargetStatus != nil {
		toSerialize["target_status"] = o.TargetStatus
	}
	return json.Marshal(toSerialize)
}

type NullableCaseAutomaticStatusChangeConfig struct {
	value *CaseAutomaticStatusChangeConfig
	isSet bool
}

func (v NullableCaseAutomaticStatusChangeConfig) Get() *CaseAutomaticStatusChangeConfig {
	return v.value
}

func (v *NullableCaseAutomaticStatusChangeConfig) Set(val *CaseAutomaticStatusChangeConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCaseAutomaticStatusChangeConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCaseAutomaticStatusChangeConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaseAutomaticStatusChangeConfig(val *CaseAutomaticStatusChangeConfig) *NullableCaseAutomaticStatusChangeConfig {
	return &NullableCaseAutomaticStatusChangeConfig{value: val, isSet: true}
}

func (v NullableCaseAutomaticStatusChangeConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaseAutomaticStatusChangeConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
